<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Arguments.Acos.number" xml:space="preserve">
    <value>코사인을 나타내는 숫자이며 -1보다 크거나 같고 1보다 작거나 같아야 합니다.</value>
    <comment>a number representing a cosine, where it must be greater than or equal to -1, but less than or equal to 1.</comment>
  </data>
  <data name="Arguments.AddDays.days" xml:space="preserve">
    <value>전체 일 수 및 부분 일 수입니다. 값 매개 변수는 음수 또는 양수일 수 있습니다.</value>
    <comment>a number of whole and fractional days. The value parameter can be negative or positive.</comment>
  </data>
  <data name="Arguments.AddHours.hours" xml:space="preserve">
    <value>전체 시간 및 부분 시간(시)입니다. 값 매개 변수는 음수 또는 양수일 수 있습니다.</value>
    <comment>a number of whole and fractional hours. The value parameter can be negative or positive.</comment>
  </data>
  <data name="Arguments.AddMilliSeconds.milliseconds" xml:space="preserve">
    <value>전체 시간 및 부분 시간(밀리초)입니다. 값 매개 변수는 음수 또는 양수일 수 있습니다.</value>
    <comment>a number of whole and fractional milliseconds. The value parameter can be negative or positive.</comment>
  </data>
  <data name="Arguments.AddMinutes.minutes" xml:space="preserve">
    <value>전체 시간 및 부분 시간(분)입니다. 값 매개 변수는 음수 또는 양수일 수 있습니다.</value>
    <comment>a number of whole and fractional minutes. The value parameter can be negative or positive.</comment>
  </data>
  <data name="Arguments.AddMonths.months" xml:space="preserve">
    <value>전체 시간 및 부분 시간(월)입니다. 값 매개 변수는 음수 또는 양수일 수 있습니다.</value>
    <comment>a number of whole and fractional months. The value parameter can be negative or positive.</comment>
  </data>
  <data name="Arguments.AddSeconds.seconds" xml:space="preserve">
    <value>전체 시간 및 부분 시간(초)입니다. 값 매개 변수는 음수 또는 양수일 수 있습니다.</value>
    <comment>a number of whole and fractional seconds. The value parameter can be negative or positive.</comment>
  </data>
  <data name="Arguments.AddTicks.ticks" xml:space="preserve">
    <value>전체 눈금 및 부분 눈금입니다. 값 매개 변수는 음수 또는 양수일 수 있습니다.</value>
    <comment>a number of whole and fractional ticks. The value parameter can be negative or positive.</comment>
  </data>
  <data name="Arguments.AddTimeSpan.timespan" xml:space="preserve">
    <value>전체 시간 범위 및 부분 시간 범위입니다. 값 매개 변수는 음수 또는 양수일 수 있습니다.</value>
    <comment>a number of whole and fractional time span. The value parameter can be negative or positive.</comment>
  </data>
  <data name="Arguments.AddYears.years" xml:space="preserve">
    <value>전체 시간 및 부분 시간(년)입니다. 값 매개 변수는 음수 또는 양수일 수 있습니다.</value>
    <comment>a number of whole and fractional years. The value parameter can be negative or positive.</comment>
  </data>
  <data name="Arguments.Asin.number" xml:space="preserve">
    <value>사인을 나타내는 숫자이며 -1보다 크거나 같고 1보다 작거나 같아야 합니다.</value>
    <comment>a number representing a sine, where it must be greater than or equal to -1, but less than or equal to 1.</comment>
  </data>
  <data name="Arguments.Atan.number" xml:space="preserve">
    <value>탄젠트를 나타내는 숫자입니다.</value>
    <comment>a number representing a tangent.</comment>
  </data>
  <data name="Arguments.Atan2.x" xml:space="preserve">
    <value>점의 x 좌표입니다.</value>
    <comment>the x coordinate of a point.</comment>
  </data>
  <data name="Arguments.Atan2.y" xml:space="preserve">
    <value>점의 y 좌표입니다.</value>
    <comment>the y coordinate of a point.</comment>
  </data>
  <data name="Arguments.Ceiling.number" xml:space="preserve">
    <value>지정된 10진수 또는 배정밀도 부동 소수점 숫자입니다.</value>
    <comment>a specified decimal or double-precision floating-point number.</comment>
  </data>
  <data name="Arguments.Concat.value" xml:space="preserve">
    <value>추가할 문자열입니다.</value>
    <comment>the string to append.</comment>
  </data>
  <data name="Arguments.Convert.string" xml:space="preserve">
    <value>변환할 값을 포함하는 문자열입니다.</value>
    <comment>a string containing the value to convert.</comment>
  </data>
  <data name="Arguments.CType.type" xml:space="preserve">
    <value>반환할 개체의 유형 이름입니다.</value>
    <comment>the type name of object to return.</comment>
  </data>
  <data name="Arguments.CType.value" xml:space="preserve">
    <value>변환하도록 지정된 개체입니다.</value>
    <comment>the specified object for conversion.</comment>
  </data>
  <data name="Arguments.EndsWith.value" xml:space="preserve">
    <value>이 인스턴스의 끝에 있는 부분 문자열과 비교할 문자열입니다.</value>
    <comment>the string to compare to the substring at the end of this instance.</comment>
  </data>
  <data name="Arguments.Exp.power" xml:space="preserve">
    <value>거듭제곱을 지정하는 숫자입니다.</value>
    <comment>a number specifying a power.</comment>
  </data>
  <data name="Arguments.Floor.number" xml:space="preserve">
    <value>지정된 10진수 또는 배정밀도 부동 소수점 숫자입니다.</value>
    <comment>a specified decimal or double-precision floating-point number.</comment>
  </data>
  <data name="Arguments.Iif.condition" xml:space="preserve">
    <value>지정된 조건입니다.</value>
    <comment>the specified condition.</comment>
  </data>
  <data name="Arguments.Iif.resultFalse" xml:space="preserve">
    <value>조건의 결과가 False인 경우에 실행할 식입니다.</value>
    <comment>the expression which will be executed if the result of the condition is False.</comment>
  </data>
  <data name="Arguments.Iif.resultTrue" xml:space="preserve">
    <value>조건의 결과가 True인 경우에 실행할 식입니다.</value>
    <comment>the expression which will be executed if the result of the condition is True.</comment>
  </data>
  <data name="Arguments.Insert.index" xml:space="preserve">
    <value>이 인스턴스에서 삽입이 시작되는 위치입니다.</value>
    <comment>the position in this instance where insertion begins.</comment>
  </data>
  <data name="Arguments.Insert.value" xml:space="preserve">
    <value>삽입할 문자열입니다.</value>
    <comment>the string to insert.</comment>
  </data>
  <data name="Arguments.InStr.start" xml:space="preserve">
    <value>검색 시작 위치입니다.</value>
    <comment>the search starting position.</comment>
  </data>
  <data name="Arguments.Log.base" xml:space="preserve">
    <value>로그의 밑수입니다.</value>
    <comment>the base of the logarithm.</comment>
  </data>
  <data name="Arguments.Log.number" xml:space="preserve">
    <value>로그를 구할 숫자입니다.</value>
    <comment>a number whose logarithm is to be found.</comment>
  </data>
  <data name="Arguments.LSet.3.length" xml:space="preserve">
    <value>결과 문자열의 문자 수이며 원래 문자 수에 추가 패딩 문자 수를 더한 수와 같습니다.</value>
    <comment>the number of characters in the resulting string, equal to the number of original characters plus any additional padding characters.</comment>
  </data>
  <data name="Arguments.LSet.char" xml:space="preserve">
    <value>유니코드 패딩 문자입니다.</value>
    <comment>a Unicode padding character.</comment>
  </data>
  <data name="Arguments.LSet.length" xml:space="preserve">
    <value>결과 문자열의 문자 수이며 원래 문자 수에 추가 공백을 더한 수와 같습니다.</value>
    <comment>the number of characters in the resulting string, equal to the number of original characters plus any additional spaces.</comment>
  </data>
  <data name="Arguments.Mid.length" xml:space="preserve">
    <value>부분 문자열의 문자 수입니다.</value>
    <comment>the number of characters in the substring.</comment>
  </data>
  <data name="Arguments.Mid.start" xml:space="preserve">
    <value>지정된 문자열에서 부분 문자열의 0부터 시작하는 문자 위치입니다.</value>
    <comment>the zero-based starting character position of a substring in the specified string.</comment>
  </data>
  <data name="Arguments.Pow.number" xml:space="preserve">
    <value>거듭제곱할 배정밀도 부동 소수점 숫자입니다.</value>
    <comment>a double-precision floating-point number to be raised to a power.</comment>
  </data>
  <data name="Arguments.Pow.power" xml:space="preserve">
    <value>거듭제곱을 지정하는 배정밀도 부동 소수점 숫자입니다.</value>
    <comment>a double-precision floating-point number that specifies a power.</comment>
  </data>
  <data name="Arguments.RandBetween.max" xml:space="preserve">
    <value>반환되는 난수의 단독 상한값입니다. maxValue는 minValue보다 크거나 같아야 합니다.</value>
    <comment>the exclusive upper bound of the random number returned. maxValue must be greater than or equal to minValue.</comment>
  </data>
  <data name="Arguments.RandBetween.min" xml:space="preserve">
    <value>반환되는 난수의 단독 하한값입니다.</value>
    <comment>the inclusive lower bound of the random number returned.</comment>
  </data>
  <data name="Arguments.Remove.count" xml:space="preserve">
    <value>삭제할 문자 수입니다.</value>
    <comment>the number of characters to delete.</comment>
  </data>
  <data name="Arguments.Remove.start" xml:space="preserve">
    <value>문자 삭제를 시작할 0부터 시작되는 위치입니다.</value>
    <comment>the zero-based position to begin deleting characters.</comment>
  </data>
  <data name="Arguments.Replace.oldValue" xml:space="preserve">
    <value>대체할 문자열입니다.</value>
    <comment>the string to replace.</comment>
  </data>
  <data name="Arguments.Replace.newValue" xml:space="preserve">
    <value>oldValue 또는 null을 대체하는 문자열입니다.</value>
    <comment>the string that replaces oldValue, or null.</comment>
  </data>
  <data name="Arguments.RSet.3.length" xml:space="preserve">
    <value>결과 문자열의 문자 수이며 원래 문자 수에 추가 패딩 문자 수를 더한 수와 같습니다.</value>
    <comment>the number of characters in the resulting string, equal to the number of original characters plus any additional padding characters.</comment>
  </data>
  <data name="Arguments.RSet.char" xml:space="preserve">
    <value>유니코드 패딩 문자입니다.</value>
    <comment>a Unicode padding character.</comment>
  </data>
  <data name="Arguments.RSet.length" xml:space="preserve">
    <value>결과 문자열의 문자 수이며 원래 문자 수에 추가 공백을 더한 수와 같습니다.</value>
    <comment>the number of characters in the resulting string, equal to the number of original characters plus any additional spaces.</comment>
  </data>
  <data name="Arguments.Seek.value" xml:space="preserve">
    <value>찾을 문자열입니다.</value>
    <comment>the string to seek.</comment>
  </data>
  <data name="Arguments.Sign.number" xml:space="preserve">
    <value>부호 있는 숫자입니다.</value>
    <comment>a signed number.</comment>
  </data>
  <data name="Arguments.Specified.angle" xml:space="preserve">
    <value>라디안으로 측정되는 각도입니다.</value>
    <comment>an angle, measured in radians.</comment>
  </data>
  <data name="Arguments.Specified.date" xml:space="preserve">
    <value>지정된 날짜-시간입니다.</value>
    <comment>the specified Date-Time.</comment>
  </data>
  <data name="Arguments.Specified.date1" xml:space="preserve">
    <value>첫 번째 날짜입니다.</value>
    <comment>the first date.</comment>
  </data>
  <data name="Arguments.Specified.date2" xml:space="preserve">
    <value>두 번째 날짜입니다.</value>
    <comment>the second date.</comment>
  </data>
  <data name="Arguments.Specified.number" xml:space="preserve">
    <value>지정된 숫자입니다.</value>
    <comment>the specified number.</comment>
  </data>
  <data name="Arguments.Specified.string" xml:space="preserve">
    <value>지정된 문자열입니다.</value>
    <comment>the specified string.</comment>
  </data>
  <data name="Arguments.Specified.value" xml:space="preserve">
    <value>지정된 개체입니다.</value>
    <comment>the specified object.</comment>
  </data>
  <data name="Arguments.StartsWith.value" xml:space="preserve">
    <value>비교할 문자열입니다.</value>
    <comment>the string to compare.</comment>
  </data>
  <data name="Constants.False" xml:space="preserve">
    <value>False를 반환합니다.</value>
    <comment>Returns False.</comment>
  </data>
  <data name="Constants.Nothing" xml:space="preserve">
    <value>Null을 반환합니다.</value>
    <comment>Returns Null.</comment>
  </data>
  <data name="Constants.True" xml:space="preserve">
    <value>True를 반환합니다.</value>
    <comment>Returns True.</comment>
  </data>
  <data name="Errors.CanNotFindFinalDateDelimiter" xml:space="preserve">
    <value>마지막 날짜 구분 기호('#')를 찾을 수 없습니다.</value>
    <comment>Can't find final date delimiter ('#').</comment>
  </data>
  <data name="Errors.CanNotFindFinalQuote" xml:space="preserve">
    <value>마지막 따옴표를 찾을 수 없습니다.</value>
    <comment>Can't find final quote.</comment>
  </data>
  <data name="Errors.CanNotFindFinalSquareBracket" xml:space="preserve">
    <value>마지막 대괄호를 찾을 수 없습니다.</value>
    <comment>Can't find final square bracket.</comment>
  </data>
  <data name="Errors.ExpressionExpected" xml:space="preserve">
    <value>식이 있어야 합니다.</value>
    <comment>Expression expected.</comment>
  </data>
  <data name="Errors.FieldOrVariableDidNotFound" xml:space="preserve">
    <value>필드 또는 변수를 찾을 수 없습니다.</value>
    <comment>Field or variable did not found.</comment>
  </data>
  <data name="Errors.IdentifierExpected" xml:space="preserve">
    <value>필요한 식별자입니다.</value>
    <comment>Identifier expected.</comment>
  </data>
  <data name="Errors.Message" xml:space="preserve">
    <value>Col {0}: {1}</value>
    <comment>Col {0}: {1}</comment>
  </data>
  <data name="Errors.SyntaxError" xml:space="preserve">
    <value>구문 오류입니다.</value>
    <comment>Syntax error.</comment>
  </data>
  <data name="Errors.TooFewParameters" xml:space="preserve">
    <value>매개 변수가 너무 적습니다.</value>
    <comment>Too few parameters.</comment>
  </data>
  <data name="Errors.TooManyParameters" xml:space="preserve">
    <value>매개 변수가 너무 많습니다.</value>
    <comment>Too many parameters.</comment>
  </data>
  <data name="Errors.UnbalancedParenthesis" xml:space="preserve">
    <value>괄호가 일치하지 않습니다.</value>
    <comment>Unbalanced parenthesis.</comment>
  </data>
  <data name="Errors.UnexpectedError" xml:space="preserve">
    <value>예기치 않은 오류입니다.</value>
    <comment>Unexpected error.</comment>
  </data>
  <data name="Errors.UnexpectedIdentifier" xml:space="preserve">
    <value>예기치 않은 식별자입니다.</value>
    <comment>Unexpected identifier.</comment>
  </data>
  <data name="Functions.Abs()" xml:space="preserve">
    <value>숫자의 절대값을 반환합니다.</value>
    <comment>Returns the absolute value of a number.</comment>
  </data>
  <data name="Functions.Acos()" xml:space="preserve">
    <value>지정된 숫자가 코사인인 각도를 반환합니다.</value>
    <comment>Returns the angle whose cosine is the specified number.</comment>
  </data>
  <data name="Functions.AddDays(,)" xml:space="preserve">
    <value>지정된 System.DateTime 값에 지정된 일 수를 추가하는 새 System.DateTime을 반환합니다.</value>
    <comment>Returns a new System.DateTime that adds the specified number of days to the specified System.DateTime value.</comment>
  </data>
  <data name="Functions.AddHours(,)" xml:space="preserve">
    <value>지정된 System.DateTime 값에 지정된 시간을 추가하는 새 System.DateTime을 반환합니다.</value>
    <comment>Returns a new System.DateTime that adds the specified number of hours to the  specified System.DateTime value.</comment>
  </data>
  <data name="Functions.AddMilliSeconds(,)" xml:space="preserve">
    <value>지정된 System.DateTime 값에 지정된 밀리초를 추가하는 새 System.DateTime을 반환합니다.</value>
    <comment>Returns a new System.DateTime that adds the specified number of milliseconds to the specified System.DateTime value.</comment>
  </data>
  <data name="Functions.AddMinutes(,)" xml:space="preserve">
    <value>지정된 System.DateTime 값에 지정된 분을 추가하는 새 System.DateTime을 반환합니다.</value>
    <comment>Returns a new System.DateTime that adds the specified number of minutes to the specified System.DateTime value.</comment>
  </data>
  <data name="Functions.AddMonths(,)" xml:space="preserve">
    <value>지정된 System.DateTime 값에 지정된 개월 수를 추가하는 새 System.DateTime을 반환합니다.</value>
    <comment>Returns a new System.DateTime that adds the specified number of months to the specified System.DateTime value.</comment>
  </data>
  <data name="Functions.AddSeconds(,)" xml:space="preserve">
    <value>지정된 System.DateTime 값에 지정된 초를 추가하는 새 System.DateTime을 반환합니다.</value>
    <comment>Returns a new System.DateTime that adds the specified number of seconds to the specified System.DateTime value.</comment>
  </data>
  <data name="Functions.AddTicks(,)" xml:space="preserve">
    <value>지정된 System.DateTime 값에 지정된 눈금을 추가하는 새 System.DateTime을 반환합니다.</value>
    <comment>Returns a new System.DateTime that adds the specified number of ticks to the specified System.DateTime value.</comment>
  </data>
  <data name="Functions.AddTimeSpan(,)" xml:space="preserve">
    <value>지정된 System.DateTime 값에 지정된 System.TimeSpan 수를 추가하는 새 System.DateTime을 반환합니다.</value>
    <comment>Returns a new System.DateTime that adds the specified number of System.TimeSpan to the specified System.DateTime value.</comment>
  </data>
  <data name="Functions.AddYears(,)" xml:space="preserve">
    <value>지정된 System.DateTime 값에 지정된 연수를 추가하는 새 System.DateTime을 반환합니다.</value>
    <comment>Returns a new System.DateTime that adds the specified number of years to the specified System.DateTime value.</comment>
  </data>
  <data name="Functions.Asc()" xml:space="preserve">
    <value>문자 식의 맨 왼쪽에 있는 문자의 ASCII 코드 값을 반환합니다.</value>
    <comment>Returns the ASCII code value of the leftmost character of a character expression.</comment>
  </data>
  <data name="Functions.Asin()" xml:space="preserve">
    <value>지정된 숫자가 사인인 각도를 반환합니다.</value>
    <comment>Returns the angle whose sine is the specified number.</comment>
  </data>
  <data name="Functions.Atan()" xml:space="preserve">
    <value>지정된 숫자가 탄젠트인 각도를 반환합니다.</value>
    <comment>Returns the angle whose tangent is the specified number.</comment>
  </data>
  <data name="Functions.Atan2(,)" xml:space="preserve">
    <value>두 지정된 숫자의 몫이 탄젠트인 각도를 반환합니다.</value>
    <comment>Returns the angle whose tangent is the quotient of two specified numbers.</comment>
  </data>
  <data name="Functions.Average()" xml:space="preserve">
    <value>지정된 숫자 시퀀스(또는 열거 가능 시퀀스)의 평균을 계산합니다.</value>
    <comment>Computes the average of a specified sequence of numbers (or enumerable).</comment>
  </data>
  <data name="Functions.CBool()" xml:space="preserve">
    <value>논리값의 지정된 문자열 표현을 해당 System.Boolean 값으로 변환합니다. 문자열이 System.Boolean.TrueString 또는 System.Boolean.FalseString 값과 일치하지 않을 경우 예외를 throw합니다.</value>
    <comment>Converts the specified string representation of a logical value to its System.Boolean equivalent, or throws an exception if the string is not equivalent to the value of System.Boolean.TrueString or System.Boolean.FalseString.</comment>
  </data>
  <data name="Functions.CByte()" xml:space="preserve">
    <value>숫자의 문자열 표현을 해당 System.Byte 값으로 변환합니다.</value>
    <comment>Converts the string representation of a number to its System.Byte equivalent.</comment>
  </data>
  <data name="Functions.CChar()" xml:space="preserve">
    <value>지정된 문자열 값을 해당 유니코드 문자로 변환합니다.</value>
    <comment>Converts the value of the specified string to its equivalent Unicode character.</comment>
  </data>
  <data name="Functions.CDate()" xml:space="preserve">
    <value>날짜 및 시간의 지정된 문자열 표현을 해당 System.DateTime 값으로 변환합니다.</value>
    <comment>Converts the specified string representation of a date and time to its System.DateTime equivalent.</comment>
  </data>
  <data name="Functions.CDbl()" xml:space="preserve">
    <value>숫자의 문자열 표현을 해당 배정밀도 부동 소수점 숫자로 변환합니다.</value>
    <comment>Converts the string representation of a number to its double-precision floating-point number equivalent.</comment>
  </data>
  <data name="Functions.CDec()" xml:space="preserve">
    <value>숫자의 문자열 표현을 해당 System.Decimal 값으로 변환합니다.</value>
    <comment>Converts the string representation of a number to its System.Decimal equivalent.</comment>
  </data>
  <data name="Functions.Ceiling()" xml:space="preserve">
    <value>지정된 10진수 또는 실수보다 크거나 같은 최소 정수 값을 반환합니다.</value>
    <comment>Returns the smallest integral value that's greater than or equal to the specified decimal or double.</comment>
  </data>
  <data name="Functions.Chr()" xml:space="preserve">
    <value>int ASCII 코드를 문자로 변환합니다.</value>
    <comment>Converts an int ASCII code to a character.</comment>
  </data>
  <data name="Functions.CInt()" xml:space="preserve">
    <value>숫자의 문자열 표현을 해당 32비트 부호 있는 정수로 변환합니다.</value>
    <comment>Converts the string representation of a number to its 32-bit signed integer equivalent.</comment>
  </data>
  <data name="Functions.CLng()" xml:space="preserve">
    <value>숫자의 문자열 표현을 해당 64비트 부호 있는 정수로 변환합니다.</value>
    <comment>Converts the string representation of a number to its 64-bit signed integer equivalent.</comment>
  </data>
  <data name="Functions.CObj()" xml:space="preserve">
    <value>지정된 요소를 System.Object로 반환합니다.</value>
    <comment>Returns the specified element as System.Object.</comment>
  </data>
  <data name="Functions.Concat(,)" xml:space="preserve">
    <value>두 개 이상의 문자열 값을 연결하는 결과 문자열을 반환합니다.</value>
    <comment>Returns a string that is the result of concatenating two or more string values.</comment>
  </data>
  <data name="Functions.Contains(,)" xml:space="preserve">
    <value>지정된 부분 문자열이 이 문자열 내에서 발생하는지 여부를 나타내는 값을 반환합니다.</value>
    <comment>Returns a value indicating whether a specified substring occurs within this string.</comment>
  </data>
  <data name="Functions.Cos()" xml:space="preserve">
    <value>지정된 각도의 코사인을 반환합니다.</value>
    <comment>Returns the cosine of the specified angle.</comment>
  </data>
  <data name="Functions.Cosh()" xml:space="preserve">
    <value>지정된 각도의 하이퍼볼릭 코사인을 반환합니다.</value>
    <comment>Returns the hyperbolic cosine of the specified angle.</comment>
  </data>
  <data name="Functions.Count()" xml:space="preserve">
    <value>지정된 시퀀스에 실제로 포함된 요소 수를 가져옵니다.</value>
    <comment>Gets the number of elements actually contained in a specified sequence</comment>
  </data>
  <data name="Functions.CSByte()" xml:space="preserve">
    <value>숫자의 문자열 표현을 해당하는 8비트 부호 있는 정수로 변환합니다.</value>
    <comment>Converts the string representation of a number to its 8-bit signed integer equivalent.</comment>
  </data>
  <data name="Functions.CShort()" xml:space="preserve">
    <value>숫자의 문자열 표현을 해당하는 16비트 부호 있는 정수로 변환합니다.</value>
    <comment>Converts the string representation of a number to its 16-bit signed integer equivalent.</comment>
  </data>
  <data name="Functions.CSng()" xml:space="preserve">
    <value>숫자의 문자열 표현을 해당 단정밀도 부동 소수점 숫자로 변환합니다.</value>
    <comment>Converts the string representation of a number to its single-precision floating-point number equivalent.</comment>
  </data>
  <data name="Functions.CStr()" xml:space="preserve">
    <value>지정된 식을 평가하고 결과를 문자열로 반환하려고 시도합니다.</value>
    <comment>Tries to evaluate the specified expression and return result as a string.</comment>
  </data>
  <data name="Functions.CType(,)" xml:space="preserve">
    <value>값이 지정된 개체와 일치하는 지정된 유형의 개체를 반환합니다.</value>
    <comment>Returns an object of the specified type and whose value is equivalent to the specified object.</comment>
  </data>
  <data name="Functions.CUint()" xml:space="preserve">
    <value>숫자의 문자열 표현을 해당하는 32비트 부호 없는 정수로 변환합니다.</value>
    <comment>Converts the string representation of a number to its 32-bit unsigned integer equivalent.</comment>
  </data>
  <data name="Functions.CULong()" xml:space="preserve">
    <value>숫자의 문자열 표현을 해당하는 64비트 부호 없는 정수로 변환합니다.</value>
    <comment>Converts the string representation of a number to its 64-bit unsigned integer equivalent.</comment>
  </data>
  <data name="Functions.CUShort()" xml:space="preserve">
    <value>숫자의 문자열 표현을 해당하는 16비트 부호 없는 정수로 변환합니다.</value>
    <comment>Converts the string representation of a number to its 16-bit unsigned integer equivalent.</comment>
  </data>
  <data name="Functions.DateDiffDay(,)" xml:space="preserve">
    <value>null을 허용하지 않는 두 날짜 사이의 날짜 경계 수를 계산합니다.</value>
    <comment>Counts the number of day boundaries between two non-nullable dates.</comment>
  </data>
  <data name="Functions.DateDiffHour(,)" xml:space="preserve">
    <value>null을 허용하지 않는 두 날짜 사이의 시간 경계 수를 계산합니다.</value>
    <comment>Counts the number of hour boundaries between two non-nullable dates.</comment>
  </data>
  <data name="Functions.DateDiffMilliSecond(,)" xml:space="preserve">
    <value>null을 허용하지 않는 두 날짜 사이의 밀리초 경계 수를 계산합니다.</value>
    <comment>Counts the number of milliseconds boundaries between two non-nullable dates.</comment>
  </data>
  <data name="Functions.DateDiffMinute(,)" xml:space="preserve">
    <value>null을 허용하지 않는 두 날짜 사이의 분 경계 수를 계산합니다.</value>
    <comment>Counts the number of minutes boundaries between two non-nullable dates.</comment>
  </data>
  <data name="Functions.DateDiffSecond(,)" xml:space="preserve">
    <value>null을 허용하지 않는 두 날짜 사이의 초 경계 수를 계산합니다.</value>
    <comment>Counts the number of seconds boundaries between two non-nullable dates.</comment>
  </data>
  <data name="Functions.DateDiffTick(,)" xml:space="preserve">
    <value>null을 허용하지 않는 두 날짜 사이의 눈금 경계 수를 계산합니다.</value>
    <comment>Counts the number of ticks boundaries between two non-nullable dates.</comment>
  </data>
  <data name="Functions.EndsWith(,)" xml:space="preserve">
    <value>이 문자열 인스턴스의 끝 부분이 지정된 문자열과 일치하는지 여부를 결정합니다.</value>
    <comment>Determines whether the end of this string instance matches a specified string.</comment>
  </data>
  <data name="Functions.Exp()" xml:space="preserve">
    <value>e(자연 로그의 밑수)를 지정한 지수의 거듭제곱으로 반환합니다.</value>
    <comment>Returns e (the base of natural logarithms) raised to the specified power.</comment>
  </data>
  <data name="Functions.First()" xml:space="preserve">
    <value>지정된 시퀀스의 첫 번째 요소를 반환합니다.</value>
    <comment>Returns the first element of a specified  sequence.</comment>
  </data>
  <data name="Functions.Floor()" xml:space="preserve">
    <value>지정된 10진수 또는 실수보다 작거나 같은 최대 정수를 반환합니다.</value>
    <comment>Returns the largest integer that's less than or equal to the specified decimal or double number.</comment>
  </data>
  <data name="Functions.GetDate()" xml:space="preserve">
    <value>지정된 System.DateTime 값의 날짜 구성 요소를 가져옵니다.</value>
    <comment>Gets the date component of the specified System.DateTime value.</comment>
  </data>
  <data name="Functions.GetDay()" xml:space="preserve">
    <value>지정된 System.DateTime 값으로 표시된 날짜를 가져옵니다.</value>
    <comment>Gets the day of the month represented by specified System.DateTime value.</comment>
  </data>
  <data name="Functions.GetDayOfWeek()" xml:space="preserve">
    <value>지정된 System.DateTime 값으로 표시된 요일을 가져옵니다.</value>
    <comment>Gets the day of the week represented by the specified System.DateTime value.</comment>
  </data>
  <data name="Functions.GetDayOfYear()" xml:space="preserve">
    <value>지정된 System.DateTime 값으로 표시된 년 중 날짜를 가져옵니다.</value>
    <comment>Gets the day of the year represented by the specified System.DateTime value.</comment>
  </data>
  <data name="Functions.GetHour()" xml:space="preserve">
    <value>지정된 System.DateTime 값의 시간 구성 요소를 가져옵니다.</value>
    <comment>Gets the hour component of the specified System.DateTime value.</comment>
  </data>
  <data name="Functions.GetMilliSecond()" xml:space="preserve">
    <value>지정된 System.DateTime 값의 밀리초 구성 요소를 가져옵니다.</value>
    <comment>Gets the milliSecond component of the specified System.DateTime value.</comment>
  </data>
  <data name="Functions.GetMinute()" xml:space="preserve">
    <value>지정된 System.DateTime 값의 분 구성 요소를 가져옵니다.</value>
    <comment>Gets the minute component of the specified System.DateTime value.</comment>
  </data>
  <data name="Functions.GetMonth()" xml:space="preserve">
    <value>지정된 System.DateTime 값의 월 구성 요소를 가져옵니다.</value>
    <comment>Gets the month component of the specified System.DateTime value.</comment>
  </data>
  <data name="Functions.GetSecond()" xml:space="preserve">
    <value>지정된 System.DateTime 값의 초 구성 요소를 가져옵니다.</value>
    <comment>Gets the seconds component of the specified System.DateTime value.</comment>
  </data>
  <data name="Functions.GetTimeOfDay()" xml:space="preserve">
    <value>지정된 System.DateTime 값의 시간을 가져옵니다.</value>
    <comment>Gets the time of day for the specified System.DateTime value.</comment>
  </data>
  <data name="Functions.GetYear()" xml:space="preserve">
    <value>지정된 System.DateTime 값의 연도 구성 요소를 가져옵니다.</value>
    <comment>Gets the year component of the specified System.DateTime value.</comment>
  </data>
  <data name="Functions.Iif(,,)" xml:space="preserve">
    <value>조건에 따라 두 식 중 하나에 대한 평가를 반환합니다.</value>
    <comment>Returns the evaluation of one of two expressions, depending on the condition.</comment>
  </data>
  <data name="Functions.Insert(,,)" xml:space="preserve">
    <value>이 인스턴스의 지정된 색인 위치에 지정된 문자열을 삽입할 새 문자열을 반환합니다.</value>
    <comment>Returns a new string in which a specified string is inserted at a specified index position in this instance.</comment>
  </data>
  <data name="Functions.InStr(,)" xml:space="preserve">
    <value>식에서 다른 식을 검색하고 발견된 식의 시작 위치를 반환합니다.</value>
    <comment>Searches an expression for another expression and returns its starting position if found.</comment>
  </data>
  <data name="Functions.InStr(,,)" xml:space="preserve">
    <value>식에서 다른 식을 검색하고 지정된 위치부터 시작하여 발견된 식의 시작 위치를 반환합니다.</value>
    <comment>Searches an expression for another expression and returns its starting position if found, starting from the specified position.</comment>
  </data>
  <data name="Functions.IsNull()" xml:space="preserve">
    <value>지정된 값이 NULL이면 True를 반환합니다.</value>
    <comment>Returns True if the specified Value is NULL.</comment>
  </data>
  <data name="Functions.Last()" xml:space="preserve">
    <value>지정된 시퀀스의 마지막 요소를 반환합니다.</value>
    <comment>Returns the last element of a specified  sequence.</comment>
  </data>
  <data name="Functions.LCase()" xml:space="preserve">
    <value>대문자 데이터를 소문자로 변환한 후 문자 식을 반환합니다.</value>
    <comment>Returns a character expression after converting uppercase character data to lowercase.</comment>
  </data>
  <data name="Functions.Len()" xml:space="preserve">
    <value>지정된 문자열 식의 문자 수를 반환합니다.</value>
    <comment>Returns the number of characters of the specified string expression.</comment>
  </data>
  <data name="Functions.Log()" xml:space="preserve">
    <value>지정된 숫자의 자연(밑수 e) 로그를 반환합니다.</value>
    <comment>Returns the natural (base e) logarithm of a specified number.</comment>
  </data>
  <data name="Functions.Log(,)" xml:space="preserve">
    <value>지정된 숫자의 로그를 지정된 밑수로 반환합니다.</value>
    <comment>Returns the logarithm of a specified number in a specified base.</comment>
  </data>
  <data name="Functions.Log10()" xml:space="preserve">
    <value>지정된 숫자의 상용 로그를 반환합니다.</value>
    <comment>Returns the base 10 logarithm of a specified number.</comment>
  </data>
  <data name="Functions.LSet(,)" xml:space="preserve">
    <value>현재 문자열의 시작 부분을 공백으로 패딩한 지정된 길이의 새 문자열을 반환합니다.</value>
    <comment>Returns a new string of a specified length in which the beginning of the current string is padded with spaces.</comment>
  </data>
  <data name="Functions.LSet(,,)" xml:space="preserve">
    <value>현재 문자열의 시작 부분을 지정된 문자로 패딩한 지정된 길이의 새 문자열을 반환합니다.</value>
    <comment>Returns a new string of a specified length in which the beginning of the current string is padded with a specified character.</comment>
  </data>
  <data name="Functions.Max()" xml:space="preserve">
    <value>지정된 숫자 시퀀스(또는 열거 가능 시퀀스)에서 최대값을 반환합니다.</value>
    <comment>Returns the maximum value in a specified sequence of numbers (or enumerable).</comment>
  </data>
  <data name="Functions.Mid(,)" xml:space="preserve">
    <value>문자열의 지정된 위치부터 시작하여 모든 문자를 포함하는 문자열을 반환합니다.</value>
    <comment>Returns a string that contains all the characters starting from a specified position in a string.</comment>
  </data>
  <data name="Functions.Mid(,,)" xml:space="preserve">
    <value>문자열의 지정된 위치부터 시작하여 지정된 수의 문자를 포함하는 문자열을 반환합니다.</value>
    <comment>Returns a string that contains a specified number of characters starting from a specified position in a string.</comment>
  </data>
  <data name="Functions.Min()" xml:space="preserve">
    <value>지정된 숫자 시퀀스(또는 열거 가능 시퀀스)에서 최소값을 반환합니다.</value>
    <comment>Returns the minimum value in a specified sequence of numbers (or enumerable).</comment>
  </data>
  <data name="Functions.Now()" xml:space="preserve">
    <value>이 컴퓨터에서 현재 날짜 및 시간으로 설정된 System.DateTime 개체를 가져와서 현지 시간으로 표시합니다.</value>
    <comment>Gets a System.DateTime object that is set to the current date and time on this computer, expressed as the local time.</comment>
  </data>
  <data name="Functions.Pow(,)" xml:space="preserve">
    <value>지정한 숫자를 지정한 지수의 거듭 제곱으로 반환합니다.</value>
    <comment>Returns a specified number raised to the specified power.</comment>
  </data>
  <data name="Functions.Rand()" xml:space="preserve">
    <value>음이 아닌 난수를 반환합니다.</value>
    <comment>Returns a nonnegative random number.</comment>
  </data>
  <data name="Functions.RandBetween()" xml:space="preserve">
    <value>지정된 범위 내의 난수를 반환합니다.</value>
    <comment>Returns a random number within a specified range.</comment>
  </data>
  <data name="Functions.Remove(,)" xml:space="preserve">
    <value>모든 지정된 문자로 지정된 문자열을 삭제합니다.</value>
    <comment>Deletes all specified characters specified string.</comment>
  </data>
  <data name="Functions.Remove(,,)" xml:space="preserve">
    <value>지정된 위치부터 모든 지정된 문자로 지정된 문자열을 삭제합니다.</value>
    <comment>Deletes all specified characters specified string, beginning at a specified position.</comment>
  </data>
  <data name="Functions.Replace(,,)" xml:space="preserve">
    <value>발생하는 모든 지정된 문자열 값을 다른 문자열 값으로 대체합니다.</value>
    <comment>Replaces all occurrences of a specified string value with another string value.</comment>
  </data>
  <data name="Functions.RSet(,)" xml:space="preserve">
    <value>현재 문자열의 끝 부분을 공백으로 패딩한 지정된 길이의 새 문자열을 반환합니다.</value>
    <comment>Returns a new string of a specified length in which the end of the current string is padded with spaces.</comment>
  </data>
  <data name="Functions.RSet(,,)" xml:space="preserve">
    <value>현재 문자열의 끝 부분을 지정된 문자로 패딩한 지정된 길이의 새 문자열을 반환합니다.</value>
    <comment>Returns a new string of a specified length in which the end of the current string is padded with a specified character.</comment>
  </data>
  <data name="Functions.Sign()" xml:space="preserve">
    <value>숫자의 부호를 나타내는 정수 값을 반환합니다.</value>
    <comment>Returns an integer value indicating the sign of a number.</comment>
  </data>
  <data name="Functions.Sin()" xml:space="preserve">
    <value>지정된 각도의 사인을 반환합니다.</value>
    <comment>Returns the sine of the specified angle.</comment>
  </data>
  <data name="Functions.Sinh()" xml:space="preserve">
    <value>지정된 각도의 하이퍼볼릭 사인을 반환합니다.</value>
    <comment>Returns the hyperbolic sine of the specified angle.</comment>
  </data>
  <data name="Functions.Sqrt()" xml:space="preserve">
    <value>지정된 숫자의 제곱근을 반환합니다.</value>
    <comment>Returns the square root of a specified number.</comment>
  </data>
  <data name="Functions.StartsWith(,)" xml:space="preserve">
    <value>이 문자열 인스턴스의 시작 부분이 지정된 문자열과 일치하는지 여부를 결정합니다.</value>
    <comment>Determines whether the beginning of this string instance matches a specified string.</comment>
  </data>
  <data name="Functions.StrReverse()" xml:space="preserve">
    <value>문자열 값을 역순으로 반환합니다.</value>
    <comment>Returns the reverse order of a string value.</comment>
  </data>
  <data name="Functions.Sum()" xml:space="preserve">
    <value>지정된 숫자 시퀀스(또는 열거 가능 시퀀스)의 합계를 계산합니다.</value>
    <comment>Computes the sum of a specified  sequence of numbers  (or enumerable).</comment>
  </data>
  <data name="Functions.Tan()" xml:space="preserve">
    <value>지정된 각도의 탄젠트를 반환합니다.</value>
    <comment>Returns the tangent of the specified angle.</comment>
  </data>
  <data name="Functions.Tanh()" xml:space="preserve">
    <value>지정된 각도의 하이퍼볼릭 탄젠트를 반환합니다.</value>
    <comment>Returns the hyperbolic tangent of the specified angle.</comment>
  </data>
  <data name="Functions.Today()" xml:space="preserve">
    <value>현재 날짜를 가져옵니다.</value>
    <comment>Gets the current date.</comment>
  </data>
  <data name="Functions.Trim()" xml:space="preserve">
    <value>문자열의 시작 또는 끝 부분에서 공백 문자 char(32) 또는 다른 지정된 문자를 제거합니다.</value>
    <comment>Removes the space character char(32) or other specified characters from the start or end of a string.</comment>
  </data>
  <data name="Functions.UCase()" xml:space="preserve">
    <value>소문자 데이터를 대문자로 변환하여 문자 식을 반환합니다.</value>
    <comment>Returns a character expression with lowercase character data converted to uppercase.</comment>
  </data>
  <data name="Functions.UtcNow()" xml:space="preserve">
    <value>이 컴퓨터에서 현재 날짜 및 시간으로 설정된 System.DateTime 개체를 가져와서 UTC(협정 세계시)로 표시합니다.</value>
    <comment>Gets a System.DateTime object that is set to the current date and time on this computer, expressed as the Coordinated Universal Time (UTC).</comment>
  </data>
  <data name="Operators.And" xml:space="preserve">
    <value>두 식에서 논리 결합을 수행합니다.</value>
    <comment>Performs a logical conjunction on two expressions.</comment>
  </data>
  <data name="Operators.Concat" xml:space="preserve">
    <value>두 식의 문자열을 연결합니다.</value>
    <comment>Generates a string concatenation of two expressions.</comment>
  </data>
  <data name="Operators.Divide" xml:space="preserve">
    <value>두 숫자를 나누고 부동 소수점 결과를 반환합니다.</value>
    <comment>Divides two numbers and returns a floating-point result.</comment>
  </data>
  <data name="Operators.Equal" xml:space="preserve">
    <value>왼쪽 식과 오른쪽 식이 같은지 여부를 나타내는 부울 값을 반환합니다.</value>
    <comment>Returns a Boolean value that indicates whether the left and right expressions are equal.</comment>
  </data>
  <data name="Operators.GreaterOrEqual" xml:space="preserve">
    <value>왼쪽 식이 오른쪽 식보다 크거나 같은지 여부를 나타내는 부울 값을 반환합니다.</value>
    <comment>Returns a Boolean value that indicates whether the left expression is greater than right expression or equal.</comment>
  </data>
  <data name="Operators.GreaterThan" xml:space="preserve">
    <value>왼쪽 식이 오른쪽 식보다 큰지 여부를 나타내는 부울 값을 반환합니다.</value>
    <comment>Returns a Boolean value that indicates whether the left expression is greater than right expression.</comment>
  </data>
  <data name="Operators.LessOrEqual" xml:space="preserve">
    <value>왼쪽 식이 오른쪽 식보다 작거나 같은지 여부를 나타내는 부울 값을 반환합니다.</value>
    <comment>Returns a Boolean value that indicates whether the left expression is less than right expression or equal.</comment>
  </data>
  <data name="Operators.LessThan" xml:space="preserve">
    <value>왼쪽 식이 오른쪽 식보다 작은지 여부를 나타내는 부울 값을 반환합니다.</value>
    <comment>Returns a Boolean value that indicates whether the left expression is less than right expression.</comment>
  </data>
  <data name="Operators.Minus" xml:space="preserve">
    <value>두 숫자의 차이를 찾거나 숫자 식의 음수 값을 나타냅니다.</value>
    <comment>Finds the difference between two numbers or indicates the negative value of a numeric expression.</comment>
  </data>
  <data name="Operators.Modulus" xml:space="preserve">
    <value>두 숫자를 나누고 나머지만 반환합니다.</value>
    <comment>Divides two numbers and returns only the remainder.</comment>
  </data>
  <data name="Operators.Multiply" xml:space="preserve">
    <value>두 숫자를 곱합니다.</value>
    <comment>Multiplies two numbers.</comment>
  </data>
  <data name="Operators.Not" xml:space="preserve">
    <value>식에서 논리 부정을 수행합니다.</value>
    <comment>Performs logical negation on an expression.</comment>
  </data>
  <data name="Operators.NotEqual" xml:space="preserve">
    <value>왼쪽 식과 오른쪽 식이 다른지 여부를 나타내는 부울 값을 반환합니다.</value>
    <comment>Returns a Boolean value that indicates whether the left and right expressions are not equal.</comment>
  </data>
  <data name="Operators.Or" xml:space="preserve">
    <value>두 식에서 논리 분리를 수행합니다.</value>
    <comment>Performs a logical disjunction on two expressions.</comment>
  </data>
  <data name="Operators.Plus" xml:space="preserve">
    <value>두 숫자의 합계를 구합니다.</value>
    <comment>Sums two numbers.</comment>
  </data>
  <data name="Errors.CanNotFindFinalBracket" xml:space="preserve">
    <value>마지막 괄호를 찾을 수 없습니다.</value>
    <comment>Can't find final bracket.</comment>
  </data>
  <data name="Errors.ComparisonError" xml:space="preserve">
    <value>An error occurred when comparing values.</value>
    <comment>An error occurred when comparing values.</comment>
  </data>
  <data name="Errors.DuplicateAliasError" xml:space="preserve">
    <value>An error occurred when added a duplicate of alias.</value>
    <comment>An error occurred when added a duplicate of alias.</comment>
  </data>
  <data name="Errors.IncorrectAliasError" xml:space="preserve">
    <value>An error occurred when the alias coincided with a field from DataSource.</value>
    <comment>An error occurred when the alias coincided with a field from DataSource.</comment>
  </data>
  <data name="Errors.IncorrectDateFormat" xml:space="preserve">
    <value>Incorrect date format.</value>
    <comment>Incorrect date format.</comment>
  </data>
  <data name="Arguments.Round.digits" xml:space="preserve">
    <value>The number of fractional digits in the return value.</value>
    <comment>The number of fractional digits in the return value.</comment>
  </data>
  <data name="Arguments.Round.value" xml:space="preserve">
    <value>A double-precision floating-point number to be rounded.</value>
    <comment>A double-precision floating-point number to be rounded.</comment>
  </data>
  <data name="Functions.Round()" xml:space="preserve">
    <value>Rounds a double-precision floating-point value to a specified number of fractional digits.</value>
    <comment>Rounds a double-precision floating-point value to a specified number of fractional digits.</comment>
  </data>
  <data name="Categories.Aggregate" xml:space="preserve">
    <value>Aggregate</value>
    <comment>Aggregate</comment>
  </data>
  <data name="Categories.Constants" xml:space="preserve">
    <value>Constants</value>
    <comment>Constants</comment>
  </data>
  <data name="Categories.Convert" xml:space="preserve">
    <value>Convert</value>
    <comment>Convert</comment>
  </data>
  <data name="Categories.DateTime" xml:space="preserve">
    <value>DateTime</value>
    <comment>DateTime</comment>
  </data>
  <data name="Categories.Fields" xml:space="preserve">
    <value>Fields</value>
    <comment>Fields</comment>
  </data>
  <data name="Categories.Functions" xml:space="preserve">
    <value>Functions</value>
    <comment>Functions</comment>
  </data>
  <data name="Categories.Logical" xml:space="preserve">
    <value>Logical</value>
    <comment>Logical</comment>
  </data>
  <data name="Categories.Math" xml:space="preserve">
    <value>Math</value>
    <comment>Math</comment>
  </data>
  <data name="Categories.Operators" xml:space="preserve">
    <value>Operators</value>
    <comment>Operators</comment>
  </data>
  <data name="Categories.Text" xml:space="preserve">
    <value>Text</value>
    <comment>Text</comment>
  </data>
</root>