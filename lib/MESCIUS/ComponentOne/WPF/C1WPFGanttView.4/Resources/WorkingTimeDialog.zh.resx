<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Error_AllNonWorkingTimes" xml:space="preserve">
    <value>You can't set entrie project as nonworking times.</value>
  </data>
  <data name="Error_IncorrectIntervalError" xml:space="preserve">
    <value>时间间隔的开始时间必须小于或等于时间间隔的结束时间。</value>
  </data>
  <data name="Error_IncorrectWorkingTimeError" xml:space="preserve">
    <value>你应该至少选择一个工作日。</value>
  </data>
  <data name="Error_OverlappedIntervalsError" xml:space="preserve">
    <value>时间间隔不能重叠。</value>
  </data>
  <data name="ExceptionDefaultName" xml:space="preserve">
    <value>例外 {0}</value>
  </data>
  <data name="GroupHeader_RangeOfRecurrence" xml:space="preserve">
    <value>重复范围</value>
  </data>
  <data name="GroupHeader_SelectCalendarException" xml:space="preserve">
    <value>选择一个日历例外：</value>
  </data>
  <data name="GroupHeader_SelectWorkWeek" xml:space="preserve">
    <value>设置工作时间：</value>
  </data>
  <data name="GroupHeader_SetWorkingTimes" xml:space="preserve">
    <value>设置工作时间：</value>
  </data>
  <data name="GroupHeader_SpecificWeekTimes" xml:space="preserve">
    <value>设置这些日期具体的工作时间：</value>
  </data>
  <data name="GroupHeader_When" xml:space="preserve">
    <value>当</value>
  </data>
  <data name="TabHeader_Calendar" xml:space="preserve">
    <value>日历</value>
  </data>
  <data name="TabHeader_Exceptions" xml:space="preserve">
    <value>例外</value>
  </data>
  <data name="TabHeader_WorkWeeks" xml:space="preserve">
    <value>工作周</value>
  </data>
  <data name="Text_And" xml:space="preserve">
    <value>和</value>
  </data>
  <data name="Text_BasedOn" xml:space="preserve">
    <value>基于：</value>
  </data>
  <data name="Text_Calendar" xml:space="preserve">
    <value>日历</value>
  </data>
  <data name="Text_CalendarDefaultName" xml:space="preserve">
    <value>日历 {0}</value>
  </data>
  <data name="Text_CalendarExceptionFormat" xml:space="preserve">
    <value>'{0}' 日历，'{1}' 例外。</value>
  </data>
  <data name="Text_CalendarName" xml:space="preserve">
    <value>日历名称：</value>
  </data>
  <data name="Text_CalendarWorkWeekFormat" xml:space="preserve">
    <value>'{0}' 日历，'{1}' 工作周。</value>
  </data>
  <data name="Text_ClickDayNotes" xml:space="preserve">
    <value>单击一天查看其工作时间：</value>
  </data>
  <data name="Text_CreateEmptyCalendar" xml:space="preserve">
    <value>创建一个新的空白日历</value>
  </data>
  <data name="Text_DayOfMonth" xml:space="preserve">
    <value>每个月的天</value>
  </data>
  <data name="Text_DayOfMonthNotes" xml:space="preserve">
    <value>0表示“一个月的每一天”；负值从月末开始计算 。</value>
  </data>
  <data name="Text_DefaultCalendar" xml:space="preserve">
    <value>（默认）</value>
  </data>
  <data name="Text_EndAfter" xml:space="preserve">
    <value>结束于：</value>
  </data>
  <data name="Text_EndBy" xml:space="preserve">
    <value>结束：</value>
  </data>
  <data name="Text_EveryNth" xml:space="preserve">
    <value>每一个 n-th：</value>
  </data>
  <data name="Text_FinishDate" xml:space="preserve">
    <value>结束日期：</value>
  </data>
  <data name="Text_ForCalendar" xml:space="preserve">
    <value>为日历：</value>
  </data>
  <data name="Text_From" xml:space="preserve">
    <value>从</value>
  </data>
  <data name="Text_HonorDefaultExceptions" xml:space="preserve">
    <value>遵照默认日历例外</value>
  </data>
  <data name="Text_MakeCopy" xml:space="preserve">
    <value>创建一份拷贝</value>
  </data>
  <data name="Text_MonthOfYear" xml:space="preserve">
    <value>每年的月：</value>
  </data>
  <data name="Text_MonthOfYearNotes" xml:space="preserve">
    <value>0表示“一年的每个月”。</value>
  </data>
  <data name="Text_NonworkingTime" xml:space="preserve">
    <value>非工作时间</value>
  </data>
  <data name="Text_NonworkingTimesHeader" xml:space="preserve">
    <value>{0:D} 为非工作日。</value>
  </data>
  <data name="Text_NonworkingWeekTimes" xml:space="preserve">
    <value>设置这些日期为非工作时间</value>
  </data>
  <data name="Text_Occurrence" xml:space="preserve">
    <value>发生</value>
  </data>
  <data name="Text_RecurEvery" xml:space="preserve">
    <value>重复于每个</value>
  </data>
  <data name="Text_SelectDays" xml:space="preserve">
    <value>选择天：</value>
  </data>
  <data name="Text_SpecificWeekTimes" xml:space="preserve">
    <value>设置这些日期具体的工作时间：</value>
  </data>
  <data name="Text_SpecificWorkingTimes" xml:space="preserve">
    <value>具体的工作时间</value>
  </data>
  <data name="Text_StartDate" xml:space="preserve">
    <value>开始日期：</value>
  </data>
  <data name="Text_To" xml:space="preserve">
    <value>到</value>
  </data>
  <data name="Text_UseDefaultWorkingTimes" xml:space="preserve">
    <value>在这些天使用默认工作时间段</value>
  </data>
  <data name="Text_WeekOfMonth" xml:space="preserve">
    <value>每月的周：</value>
  </data>
  <data name="Text_WorkingTimesFor" xml:space="preserve">
    <value>{0}的工作时间：</value>
  </data>
  <data name="Title_CalendarWeekTimes" xml:space="preserve">
    <value>日历周工作时间</value>
  </data>
  <data name="WorkWeekDefaultName" xml:space="preserve">
    <value>工作周 {0}</value>
  </data>
</root>