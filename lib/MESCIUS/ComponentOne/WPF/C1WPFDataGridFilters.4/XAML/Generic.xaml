<!--// Copyright © GrapeCity, Inc..
// This file is part of ComponentOne Studio WPF Edition
// Please visit https://www.grapecity.com/en/componentone for details
// All other rights reserved.
-->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:c1="clr-namespace:C1.WPF;assembly=C1.WPF.4" xmlns:c1DataGrid="clr-namespace:C1.WPF.DataGrid.Filters" xmlns:c1datetime="clr-namespace:C1.WPF.DateTimeEditors;assembly=C1.WPF.DateTimeEditors.4" xmlns:sys="clr-namespace:System;assembly=mscorlib">
    <ResourceDictionary.MergedDictionaries>
        <!--<ResourceDictionary Source="/C1.WPF.4;component/themes/Common.xaml"/>-->
        <ResourceDictionary Source="/C1.WPF.4;component/themes/C1Button.xaml" />
        <ResourceDictionary Source="/C1.WPF.4;component/themes/C1ScrollBar.xaml" />
        <ResourceDictionary Source="/C1.WPF.DataGrid.4;component/themes/Common.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="c1DataGrid:DataGridFilterRowHeaderPresenter">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="c1DataGrid:DataGridFilterRowHeaderPresenter">
                    <Grid x:Name="RootElement">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard />
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard />
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="MouseOverElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="SelectedElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Editing" />
                                <VisualState x:Name="Unselected" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused" />
                                <VisualState x:Name="InvalidFocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="MergingStates">
                                <VisualState x:Name="Merging" />
                                <VisualState x:Name="NotMerging" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <c1:C1BrushBuilder x:Name="BackgroundBrush" Input="{TemplateBinding Background}">
                            <c1:C1BrushBuilder.DesignBrush>
                                <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                    <GradientStop Color="#FFEEF2F6" Offset="0.2" />
                                    <GradientStop Color="#FFD0DBE7" Offset="1" />
                                </LinearGradientBrush>
                            </c1:C1BrushBuilder.DesignBrush>
                            <c1:C1BrushBuilder.DesignColor>
                                <Color>#FFD1DCE8</Color>
                            </c1:C1BrushBuilder.DesignColor>
                        </c1:C1BrushBuilder>
                        <c1:C1BrushBuilder x:Name="MouseOverBrush" Input="{TemplateBinding MouseOverBrush}">
                            <c1:C1BrushBuilder.DesignBrush>
                                <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                    <GradientStop Color="#FFF1FBFF" Offset="0.2" />
                                    <GradientStop Color="#FFC5E3ED" Offset="1" />
                                </LinearGradientBrush>
                            </c1:C1BrushBuilder.DesignBrush>
                            <c1:C1BrushBuilder.DesignColor>
                                <Color>#FFBFE1EA</Color>
                            </c1:C1BrushBuilder.DesignColor>
                        </c1:C1BrushBuilder>
                        <c1:C1BrushBuilder x:Name="SelectedBackground" Input="{TemplateBinding SelectedBackground}">
                            <c1:C1BrushBuilder.DesignBrush>
                                <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                    <GradientStop Color="#FFDFF7FF" Offset="0.2" />
                                    <GradientStop Color="#FFA6D4E4" Offset="1" />
                                </LinearGradientBrush>
                            </c1:C1BrushBuilder.DesignBrush>
                            <c1:C1BrushBuilder.DesignColor>
                                <Color>#FF8ED1E2</Color>
                            </c1:C1BrushBuilder.DesignColor>
                        </c1:C1BrushBuilder>
                        <Border Background="{Binding Output, ElementName=BackgroundBrush}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0 0 1 1" />
                        <Border x:Name="SelectedElement" Visibility="Collapsed" Background="{Binding Output, ElementName=SelectedBackground}" BorderThickness="0 0 1 1" />
                        <Border x:Name="MouseOverElement" Visibility="Collapsed" Background="{Binding Output, ElementName=MouseOverBrush}" BorderThickness="0 0 1 1" />
                        <c1:C1BrushBuilder x:Name="FilterFillBrush" Input="{TemplateBinding Foreground}" DesignColor="Black">
                            <c1:C1BrushBuilder.DesignBrush>
                                <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                                    <GradientStop Color="#FF9D9D9D" Offset="0" />
                                    <GradientStop Color="#FF878787" Offset="0.5" />
                                    <GradientStop Color="#FFADADAD" Offset="0.5" />
                                    <GradientStop Color="#FFAFAFAF" Offset="1" />
                                </LinearGradientBrush>
                            </c1:C1BrushBuilder.DesignBrush>
                        </c1:C1BrushBuilder>
                        <c1:C1BrushBuilder x:Name="FilterStrokeBrush" Input="{TemplateBinding Foreground}" DesignColor="Black">
                            <c1:C1BrushBuilder.DesignBrush>
                                <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                                    <GradientStop Color="#FF353535" Offset="0" />
                                    <GradientStop Color="#FF474747" Offset="0.5" />
                                    <GradientStop Color="#FF5E5E5E" Offset="0.5" />
                                    <GradientStop Color="#FF525252" Offset="1" />
                                </LinearGradientBrush>
                            </c1:C1BrushBuilder.DesignBrush>
                        </c1:C1BrushBuilder>
                        <Path x:Name="Filter" Width="8" Height="8" Stretch="Fill" Grid.Column="1" Grid.Row="1" Grid.RowSpan="2" Data="M3.5,0.5 L4.5,0.5 L4.5,0.5 L7.5,0.5 L7.5,1.5 L7.5,1.5 L4.5,4.3 L4.5,7.5 L3.5,7.5 L3.5,4.3 L0.5,1.5 L0.5,0.5 L3.5,0.5 z" Fill="{Binding Output, ElementName=FilterFillBrush}" Stroke="{Binding Output, ElementName=FilterStrokeBrush}" StrokeThickness="1" Opacity="0.6" />
                        <Rectangle x:Name="Resize" Fill="White" Cursor="SizeNS" Height="4" Margin="0,0,0,-2" VerticalAlignment="Bottom" Opacity="0" Grid.ColumnSpan="3" Grid.RowSpan="3" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="c1DataGrid:DataGridContentFilter">
        <Setter Property="BorderBrush" Value="{StaticResource DataGridBorderBrush}" />
        <Setter Property="SelectedBackground" Value="{StaticResource SelectedBackground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="c1DataGrid:DataGridContentFilter">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <c1:C1BrushBuilder x:Name="BackgroundBrush" Input="{TemplateBinding Background}" DesignBrush="{StaticResource DataGridFilterBrush}" DesignColor="{StaticResource BaseColor}" />
                        <Border x:Name="BackgroundElement" Background="{Binding Output, ElementName=BackgroundBrush}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{StaticResource DataGridBorderThickness}" CornerRadius="{StaticResource DataGridFilterCornerRadius}" Grid.RowSpan="2" />
                        <ContentPresenter />
                        <Grid Grid.Row="1" HorizontalAlignment="Right" Margin="6">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Button x:Name="FilterButton" HorizontalAlignment="Center" MinWidth="77" Margin="0 0 5 0" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}" BorderBrush="{TemplateBinding BorderBrush}" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding MouseOverBrush}" c1:ClearStyleExtensions.FocusBrush="{TemplateBinding FocusBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding PressedBrush}" c1:ClearStyleExtensions.CornerRadius="{StaticResource GeneralCornerRadius}" Style="{StaticResource ClearStyleButtonStyle}" Command="{TemplateBinding FilterCommand}">
                                <TextBlock Text="{Binding Path=Filter_Filter, Source={StaticResource DataGridResources}}" TextTrimming="WordEllipsis" />
                            </Button>
                            <Button x:Name="ClearButton" HorizontalAlignment="Center" Grid.Column="1" MinWidth="77" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}" BorderBrush="{TemplateBinding BorderBrush}" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding MouseOverBrush}" c1:ClearStyleExtensions.FocusBrush="{TemplateBinding FocusBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding PressedBrush}" c1:ClearStyleExtensions.CornerRadius="{StaticResource GeneralCornerRadius}" Style="{StaticResource ClearStyleButtonStyle}" Command="{TemplateBinding ClearCommand}">
                                <TextBlock Text="{Binding Path=Filter_Clear, Source={StaticResource DataGridResources}}" TextTrimming="WordEllipsis" />
                            </Button>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="c1DataGrid:DataGridFilterList">
        <Setter Property="BorderBrush" Value="{StaticResource DataGridBorderBrush}" />
        <Setter Property="SelectedBackground" Value="{StaticResource SelectedBackground}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <c1DataGrid:DataGridFilterListPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="c1DataGrid:DataGridFilterList">
                    <ItemsPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="c1DataGrid:DataGridFilterItem">
        <Setter Property="BorderBrush" Value="{StaticResource DataGridBorderBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="c1DataGrid:DataGridFilterItem">
                    <Grid Margin="2 2 2 0" MaxHeight="200">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CurrencyStates">
                                <VisualState x:Name="NotCurrent" />
                                <VisualState x:Name="Current">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Selection" Storyboard.TargetProperty="(UIElement.Opacity)" To="1" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <c1:C1BrushBuilder x:Name="FilterContentBrush" Input="{TemplateBinding Background}" DesignBrush="{StaticResource DataGridFilterContentBrush}" DesignColor="{StaticResource BaseColor}" />
                        <c1:C1BrushBuilder x:Name="SelectedContentBrush" Input="{TemplateBinding SelectedBackground}" DesignBrush="{StaticResource SelectedBackground}" DesignColor="{StaticResource SelectedColor}" />
                        <!--<Border x:Name="Border" Background="{Binding Output, ElementName=FilterContentBrush}" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="{StaticResource DataGridFilterCornerRadius}"/>-->
                        <ContentPresenter x:Name="Content" Cursor="{TemplateBinding Cursor}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        <Border x:Name="Selection" BorderBrush="{Binding Output, ElementName=SelectedContentBrush}" BorderThickness="2" CornerRadius="{StaticResource DataGridFilterCornerRadius}" Opacity="0" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="c1DataGrid:DataGridMultiLineCombinationsItem">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="c1DataGrid:DataGridMultiLineCombinationsItem">
                    <Grid HorizontalAlignment="Left" Margin="0 2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <RadioButton IsChecked="{Binding IsNone,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" IsThreeState="False" IsEnabled="{Binding IsNoneEnabled,RelativeSource={RelativeSource TemplatedParent}}">
                            <TextBlock Text="{Binding NoneText,RelativeSource={RelativeSource TemplatedParent}}" TextTrimming="WordEllipsis" Foreground="{TemplateBinding Foreground}" />
                        </RadioButton>
                        <RadioButton Margin="4,0,0,0" Grid.Column="1" IsChecked="{Binding IsOr,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" IsThreeState="False">
                            <TextBlock Text="{Binding OrText,RelativeSource={RelativeSource TemplatedParent}}" TextTrimming="WordEllipsis" Foreground="{TemplateBinding Foreground}" />
                        </RadioButton>
                        <RadioButton Margin="4,0,0,0" Grid.Column="2" IsChecked="{Binding IsAnd,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" IsThreeState="False">
                            <TextBlock Text="{Binding AndText,RelativeSource={RelativeSource TemplatedParent}}" TextTrimming="WordEllipsis" Foreground="{TemplateBinding Foreground}" />
                        </RadioButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="c1DataGrid:DataGridMultiLineNumericItem">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="c1DataGrid:DataGridMultiLineNumericItem">
                    <Grid Margin="0 2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="110" />
                            <ColumnDefinition Width="6" />
                            <ColumnDefinition Width="Auto" MinWidth="50" />
                        </Grid.ColumnDefinitions>
                        <c1:C1ComboBox ItemsSource="{Binding Operations,RelativeSource={RelativeSource TemplatedParent}}" DisplayMemberPath="ComparisonSymbol" SelectedValuePath="Comparison" SelectedValue="{Binding Operation,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" Background="{TemplateBinding InputBackground}" Foreground="{TemplateBinding InputForeground}" BorderBrush="{TemplateBinding BorderBrush}" ButtonBackground="{TemplateBinding Background}" ButtonForeground="{TemplateBinding Foreground}" MouseOverBrush="{TemplateBinding MouseOverBrush}" PressedBrush="{TemplateBinding PressedBrush}" FocusBrush="{TemplateBinding FocusBrush}" SelectedBackground="{TemplateBinding SelectedBackground}" />
                        <c1:C1NumericBox Grid.Column="2" Value="{Binding Value,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" Background="{TemplateBinding InputBackground}" Foreground="{TemplateBinding InputForeground}" BorderBrush="{TemplateBinding BorderBrush}" ButtonBackground="{TemplateBinding Background}" ButtonForeground="{TemplateBinding Foreground}" MouseOverBrush="{TemplateBinding MouseOverBrush}" PressedBrush="{TemplateBinding PressedBrush}" FocusBrush="{TemplateBinding FocusBrush}" Format="{Binding Format,RelativeSource={RelativeSource TemplatedParent}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="c1DataGrid:DataGridMultiLineTextItem">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="c1DataGrid:DataGridMultiLineTextItem">
                    <Grid Margin="0 2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="120" />
                            <ColumnDefinition Width="6" />
                            <ColumnDefinition Width="Auto" MinWidth="50" />
                        </Grid.ColumnDefinitions>
                        <c1:C1ComboBox ItemsSource="{Binding Operations,RelativeSource={RelativeSource TemplatedParent}}" DisplayMemberPath="Label" SelectedValuePath="Operation" SelectedValue="{Binding Operation,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" Background="{TemplateBinding InputBackground}" Foreground="{TemplateBinding InputForeground}" BorderBrush="{TemplateBinding BorderBrush}" ButtonBackground="{TemplateBinding Background}" ButtonForeground="{TemplateBinding Foreground}" MouseOverBrush="{TemplateBinding MouseOverBrush}" PressedBrush="{TemplateBinding PressedBrush}" FocusBrush="{TemplateBinding FocusBrush}" SelectedBackground="{TemplateBinding SelectedBackground}" />
                        <c1:C1TextBoxBase Grid.Column="2" Text="{Binding Value,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" Background="{TemplateBinding InputBackground}" Foreground="{TemplateBinding InputForeground}" BorderBrush="{TemplateBinding BorderBrush}" MouseOverBrush="{TemplateBinding MouseOverBrush}" FocusBrush="{TemplateBinding FocusBrush}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="c1DataGrid:DataGridMultiLineDateTimeItem">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="c1DataGrid:DataGridMultiLineDateTimeItem">
                    <Grid Margin="0 2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="110" />
                            <ColumnDefinition Width="6" />
                            <ColumnDefinition Width="Auto" MinWidth="50" />
                        </Grid.ColumnDefinitions>
                        <c1:C1ComboBox ItemsSource="{Binding Operations,RelativeSource={RelativeSource TemplatedParent}}" DisplayMemberPath="ComparisonSymbol" SelectedValuePath="Comparison" SelectedValue="{Binding Operation,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" Background="{TemplateBinding InputBackground}" Foreground="{TemplateBinding InputForeground}" BorderBrush="{TemplateBinding BorderBrush}" ButtonBackground="{TemplateBinding Background}" ButtonForeground="{TemplateBinding Foreground}" MouseOverBrush="{TemplateBinding MouseOverBrush}" PressedBrush="{TemplateBinding PressedBrush}" FocusBrush="{TemplateBinding FocusBrush}" SelectedBackground="{TemplateBinding SelectedBackground}" />
                        <c1datetime:C1DateTimePicker x:Name="DateTimePicker" Grid.Column="2" Background="{TemplateBinding InputBackground}" Foreground="{TemplateBinding InputForeground}" ButtonBackground="{TemplateBinding Background}" ButtonForeground="{TemplateBinding Foreground}" BorderBrush="{TemplateBinding BorderBrush}" MouseOverBrush="{TemplateBinding MouseOverBrush}" FocusBrush="{TemplateBinding FocusBrush}" DateFormat="{TemplateBinding DateFormat}" TimeFormat="{TemplateBinding TimeFormat}" CustomDateFormat="{TemplateBinding CustomDateFormat}" CustomTimeFormat="{TemplateBinding CustomTimeFormat}" FirstDayOfWeek="{TemplateBinding FirstDayOfWeek}" EditMode="{TemplateBinding EditMode}" />
                        <c1:C1TextBoxBase x:Name="TextBoxEditor" Grid.Column="2" Background="{TemplateBinding InputBackground}" Foreground="{TemplateBinding InputForeground}" BorderBrush="{TemplateBinding BorderBrush}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="c1DataGrid:DataGridMultiLineFilter">
        <Setter Property="BorderBrush" Value="{StaticResource DataGridBorderBrush}" />
        <Setter Property="InputBackground" Value="{StaticResource DataGridRowBrush}" />
        <Setter Property="InputForeground" Value="{StaticResource DataGridRowForeground}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Background="Transparent" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="c1DataGrid:DataGridMultiLineFilter">
                    <ScrollViewer BorderThickness="1" Padding="0" Background="Transparent" BorderBrush="Transparent" c1:ClearStyleExtensions.ButtonBackground="{TemplateBinding Background}" c1:ClearStyleExtensions.ButtonForeground="{TemplateBinding Foreground}" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding PressedBrush}" Style="{StaticResource ScrollViewerClearStyle}" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Hidden" IsTabStop="False">
                        <ItemsPresenter Margin="6 4" />
                        <c1:ScrollViewerTouchBehavior.TouchBehavior>
                            <c1:ScrollViewerTouchBehavior />
                        </c1:ScrollViewerTouchBehavior.TouchBehavior>
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
