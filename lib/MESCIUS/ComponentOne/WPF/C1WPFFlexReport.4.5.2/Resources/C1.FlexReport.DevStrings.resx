<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Busy" xml:space="preserve">
    <value>The component is busy rendering a report.</value>
    <comment>The component is busy rendering a report.</comment>
  </data>
  <data name="ChartFieldCanNotRenderMetafile" xml:space="preserve">
    <value>Cannot render chart onto metafile. This problem may occur when running in an environment with certain resource limitations, e.g. in an Azure App Service.</value>
    <comment>Cannot render chart onto metafile. This problem may occur when running in an environment with certain resource limitations, e.g. in an Azure App Service.</comment>
  </data>
  <data name="ChartFieldEmptyCategoryGroupExpression" xml:space="preserve">
    <value>The category group expression is not specified, at category group '{0}' (index: {1}), in Chart Group {2} of ChartField '{3}'.</value>
    <comment>The category group expression is not specified, at category group '{0}' (index: {1}), in Chart Group {2} of ChartField '{3}'.</comment>
  </data>
  <data name="ChartFieldEmptySeriesDataValueExpression" xml:space="preserve">
    <value>The series data value expression is not specified, at index {0} of series template '{1}' (index: {2}), in Chart Group {3} of ChartField '{4}'.</value>
    <comment>The series data value expression is not specified, at index {0} of series template '{1}' (index: {2}), in Chart Group {3} of ChartField '{4}'.</comment>
  </data>
  <data name="ChartFieldEmptySeriesGroupExpression" xml:space="preserve">
    <value>The series group expression is not specified, at series group '{0}' (index: {1}), in Chart Group {2} of ChartField '{3}'.</value>
    <comment>The series group expression is not specified, at series group '{0}' (index: {1}), in Chart Group {2} of ChartField '{3}'.</comment>
  </data>
  <data name="ChartFieldEvaluateExpressionFailed" xml:space="preserve">
    <value>Cannot evalute the expression '{0}' in ChartField '{1}'.</value>
    <comment>Cannot evalute the expression '{0}' in ChartField '{1}'.</comment>
  </data>
  <data name="ChartFieldExceptionAlarmZonesUniqueName" xml:space="preserve">
    <value>Alarm zones must have unique names.</value>
    <comment>Alarm zones must have unique names.</comment>
  </data>
  <data name="ChartFieldExceptionItemNotBelong" xml:space="preserve">
    <value>{0} is belonged to other collection.</value>
    <comment>{0} is belonged to other collection.</comment>
  </data>
  <data name="ChartFieldExceptionPositiveValues" xml:space="preserve">
    <value>Array members must have positive values.</value>
    <comment>Array members must have positive values.</comment>
  </data>
  <data name="ChartFieldGroupingFailed" xml:space="preserve">
    <value>Cannot grouping the data for Chart Group {0} of ChartField '{1}'.</value>
    <comment>Cannot grouping the data for Chart Group {0} of ChartField '{1}'.</comment>
  </data>
  <data name="ChartFieldLessSeriesDataValueLength" xml:space="preserve">
    <value>The series template '{0}' (index: {1}) needs {2} data values, in Chart Group {3} of ChartField '{4}'.</value>
    <comment>The series template '{0}' (index: {1}) needs {2} data values, in Chart Group {3} of ChartField '{4}'.</comment>
  </data>
  <data name="ChartFieldNoSeriesValues" xml:space="preserve">
    <value>No series values defined in Chart Group {0} of ChartField '{1}'.</value>
    <comment>No series values defined in Chart Group {0} of ChartField '{1}'.</comment>
  </data>
  <data name="DataSourceAdoNetProviderNotRegistered" xml:space="preserve">
    <value>ADO.NET provider {0} not registered in the system.</value>
    <comment>ADO.NET provider {0} not registered in the system.</comment>
  </data>
  <data name="DataSourceCanNotOpen" xml:space="preserve">
    <value>Can not open the report data source [{0}].
Exception:
{1}</value>
    <comment>Can not open the report data source [{0}].
Exception:
{1}</comment>
  </data>
  <data name="DataSourceCanNotUseMultiValueParameterInStoredProcedure" xml:space="preserve">
    <value>Multi value parameter [{0}] can not be used with stored procedure.</value>
    <comment>Multi value parameter [{0}] can not be used with stored procedure.</comment>
  </data>
  <data name="DataSourceFieldAlreadyExists" xml:space="preserve">
    <value>Calculated field [{0}] could not be added to a DataSource [{1}] because DataSource already has physical field with same name.</value>
    <comment>Calculated field [{0}] could not be added to a DataSource [{1}] because DataSource already has physical field with same name.</comment>
  </data>
  <data name="DataSourceGroupExpressionInvalid" xml:space="preserve">
    <value>Group [{0}] has invalid grouping expression
:[{1}].</value>
    <comment>Group [{0}] has invalid grouping expression
:[{1}].</comment>
  </data>
  <data name="DataSourceGroupFilterExpressionInvalid" xml:space="preserve">
    <value>Group [{0}] has invalid filtering expression
:[{1}].</value>
    <comment>Group [{0}] has invalid filtering expression
:[{1}].</comment>
  </data>
  <data name="DataSourceGroupingError" xml:space="preserve">
    <value>Could not group data, possible one of grouping expression contains an errror, exception:
{0}</value>
    <comment>Could not group data, possible one of grouping expression contains an errror, exception:
{0}</comment>
  </data>
  <data name="DataSourceGroupSortExpressionInvalid" xml:space="preserve">
    <value>Group [{0}] has invalid sorting expression
:[{1}].</value>
    <comment>Group [{0}] has invalid sorting expression
:[{1}].</comment>
  </data>
  <data name="DataSourceIListSourceCannotUsed1" xml:space="preserve">
    <value>Object of type [{0}] is specified as data source. It supports ITypedList and provides the list of collections, but DataSource.RecordSource is not specified - it should return the name of the list.</value>
    <comment>Object of type [{0}] is specified as data source. It supports ITypedList and provides the list of collections, but DataSource.RecordSource is not specified - it should return the name of the list.</comment>
  </data>
  <data name="DataSourceIListSourceCannotUsed2" xml:space="preserve">
    <value>Object of type [{0}] is specified as data source. It supports ITypedList, but object returned by ITypedList.GetList() does not support ITypedList interface.</value>
    <comment>Object of type [{0}] is specified as data source. It supports ITypedList, but object returned by ITypedList.GetList() does not support ITypedList interface.</comment>
  </data>
  <data name="DataSourceIListSourceCannotUsed3" xml:space="preserve">
    <value>Object of type [{0}] is specified as data source, but collection [{1}] (specified by DataSource.RecordSource property) was not found.</value>
    <comment>Object of type [{0}] is specified as data source, but collection [{1}] (specified by DataSource.RecordSource property) was not found.</comment>
  </data>
  <data name="DataSourceInvalidCalculatedFieldExpression" xml:space="preserve">
    <value>Expression
{0}
 specified for calculated field [{1}] of [{2}] data source is invalid.</value>
    <comment>Expression
{0}
 specified for calculated field [{1}] of [{2}] data source is invalid.</comment>
  </data>
  <data name="DataSourceInvalidFilterExpression" xml:space="preserve">
    <value>Filter expression
{0}
 specified for [{1}] data source is invalid.</value>
    <comment>Filter expression
{0}
 specified for [{1}] data source is invalid.</comment>
  </data>
  <data name="DataSourceNotFound" xml:space="preserve">
    <value>Can not find the report data source [{0}].</value>
    <comment>Can not find the report data source [{0}].</comment>
  </data>
  <data name="DataSourceObjectCannotUsed" xml:space="preserve">
    <value>Object '{0}' cannot be used as a report data source.</value>
    <comment>Object '{0}' cannot be used as a report data source.</comment>
  </data>
  <data name="DataSourceSortExpressionInvalid" xml:space="preserve">
    <value>Sort expression
{0}
 specified for [{1}] data source is invalid.</value>
    <comment>Sort expression
{0}
 specified for [{1}] data source is invalid.</comment>
  </data>
  <data name="ExceptionCapacityNonNegative" xml:space="preserve">
    <value>'capacity' must be non-negative.</value>
    <comment>'capacity' must be non-negative.</comment>
  </data>
  <data name="ExceptionIndexNonNegative" xml:space="preserve">
    <value>'index' must be non-negative and less than the size of the collection.</value>
    <comment>'index' must be non-negative and less than the size of the collection.</comment>
  </data>
  <data name="ExceptionKeyType" xml:space="preserve">
    <value>'key' must be of type {0}</value>
    <comment>'key' must be of type {0}</comment>
  </data>
  <data name="ExceptionValueType" xml:space="preserve">
    <value>'value' must be of type {0}</value>
    <comment>'value' must be of type {0}</comment>
  </data>
  <data name="ExceptionWhileBuildingListOfAllowedValues" xml:space="preserve">
    <value>Can not build list of allowed values, error message:
{0}</value>
    <comment>Can not build list of allowed values, error message:
{0}</comment>
  </data>
  <data name="FailedToCreateCustomField" xml:space="preserve">
    <value>Failed to create custom field '{0}' from assembly '{1}'.
Please make sure the assembly and its dependencies are available.
Exception:
{2}</value>
    <comment>Failed to create custom field '{0}' from assembly '{1}'.
Please make sure the assembly and its dependencies are available.
Exception:
{2}</comment>
  </data>
  <data name="FailedToLoadCustomFieldAssembly" xml:space="preserve">
    <value>Failed to load assembly '{0}'.</value>
    <comment>Failed to load assembly '{0}'.</comment>
  </data>
  <data name="FieldNotFound" xml:space="preserve">
    <value>Field '{0}' not found.</value>
    <comment>Field '{0}' not found.</comment>
  </data>
  <data name="FlexChartCanNotRender" xml:space="preserve">
    <value>Chart field [{0}] can not be rendered.</value>
    <comment>Chart field [{0}] can not be rendered.</comment>
  </data>
  <data name="FlexChartDataSourceNotFound" xml:space="preserve">
    <value>DataSource [{0}] specified for chart field not found.</value>
    <comment>DataSource [{0}] specified for chart field not found.</comment>
  </data>
  <data name="FlexChartFieldInvalidDataLabelExpression" xml:space="preserve">
    <value>Expression [{0}] specified in FlexChartField.DataLabelExpression is invalid.</value>
    <comment>Expression [{0}] specified in FlexChartField.DataLabelExpression is invalid.</comment>
  </data>
  <data name="FlexChartFieldInvalidSeriesXExpression" xml:space="preserve">
    <value>Expression [{0}] specified for XExpression of [{1}] series is invalid.</value>
    <comment>Expression [{0}] specified for XExpression of [{1}] series is invalid.</comment>
  </data>
  <data name="FlexChartFieldInvalidSeriesYExpression" xml:space="preserve">
    <value>Expression [{0}] specified for {1}th YExpression of [{1}] series is invalid.</value>
    <comment>Expression [{0}] specified for {1}th YExpression of [{1}] series is invalid.</comment>
  </data>
  <data name="FlexChartSeriesDataSourceNotFound" xml:space="preserve">
    <value>DataSource [{0}] specified for [{1}] series not found.</value>
    <comment>DataSource [{0}] specified for [{1}] series not found.</comment>
  </data>
  <data name="FlexChartSeriesYExpressionsNotSpecified" xml:space="preserve">
    <value>YExpressions property for [{0}] series is not specified.</value>
    <comment>YExpressions property for [{0}] series is not specified.</comment>
  </data>
  <data name="IndexOutOfRange" xml:space="preserve">
    <value>Index [{0}] is out of range.</value>
    <comment>Index [{0}] is out of range.</comment>
  </data>
  <data name="InvalidColumnCount" xml:space="preserve">
    <value>The number of columns must be &gt;= 1.</value>
    <comment>The number of columns must be &gt;= 1.</comment>
  </data>
  <data name="InvalidFieldDimensions" xml:space="preserve">
    <value>Field position and dimensions must be positive.</value>
    <comment>Field position and dimensions must be positive.</comment>
  </data>
  <data name="InvalidPictureHolderParameter" xml:space="preserve">
    <value>Invalid parameter for PictureHolder constructor.</value>
    <comment>Invalid parameter for PictureHolder constructor.</comment>
  </data>
  <data name="InvalidReportDefinition" xml:space="preserve">
    <value>Invalid report definition.</value>
    <comment>Invalid report definition.</comment>
  </data>
  <data name="InvalidValue" xml:space="preserve">
    <value>Value [{0}] does not represent an instance of type [{1}].</value>
    <comment>Value [{0}] does not represent an instance of type [{1}].</comment>
  </data>
  <data name="ItemNotFound" xml:space="preserve">
    <value>Item with name '{0}' not found.</value>
    <comment>Item with name '{0}' not found.</comment>
  </data>
  <data name="LabelOffsetCannotBeNegative" xml:space="preserve">
    <value>Label offset cannot be negative.</value>
    <comment>Label offset cannot be negative.</comment>
  </data>
  <data name="MarginsCannotBeNegative" xml:space="preserve">
    <value>Margins cannot be negative.</value>
    <comment>Margins cannot be negative.</comment>
  </data>
  <data name="NoReportDefinitions" xml:space="preserve">
    <value>File '{0}' does not contain any report definitions.</value>
    <comment>File '{0}' does not contain any report definitions.</comment>
  </data>
  <data name="ParagraphItemAlreadyHasParentParagraphField" xml:space="preserve">
    <value>The added ParagraphItem already belongs to ParagraphField.</value>
    <comment>The added ParagraphItem already belongs to ParagraphField.</comment>
  </data>
  <data name="ReportNotFound" xml:space="preserve">
    <value>Report '{0}' not found in '{1}'.</value>
    <comment>Report '{0}' not found in '{1}'.</comment>
  </data>
  <data name="ScriptEngineAssignmentAfterForExpected" xml:space="preserve">
    <value>Invalid statement: assignment expected after 'For'.</value>
    <comment>Invalid statement: assignment expected after 'For'.</comment>
  </data>
  <data name="ScriptEngineCannotAssignNewValueToConstant" xml:space="preserve">
    <value>Cannot assign new value to constant '{0}'.</value>
    <comment>Cannot assign new value to constant '{0}'.</comment>
  </data>
  <data name="ScriptEngineCannotAssignValueViaIScriptValue" xml:space="preserve">
    <value>Cannot assign value to property [{0}.{1}] using IScriptValue interface.</value>
    <comment>Cannot assign value to property [{0}.{1}] using IScriptValue interface.</comment>
  </data>
  <data name="ScriptEngineDataScopeNotFound" xml:space="preserve">
    <value>Datascope [{0}] not found.</value>
    <comment>Datascope [{0}] not found.</comment>
  </data>
  <data name="ScriptEngineEndFunctionExpected" xml:space="preserve">
    <value>Invalid statement: 'End Function' expected.</value>
    <comment>Invalid statement: 'End Function' expected.</comment>
  </data>
  <data name="ScriptEngineEndIfExpected" xml:space="preserve">
    <value>Invalid statement: 'EndIf' expected.</value>
    <comment>Invalid statement: 'EndIf' expected.</comment>
  </data>
  <data name="ScriptEngineEndSubExpected" xml:space="preserve">
    <value>Invalid statement: 'End Sub' expected.</value>
    <comment>Invalid statement: 'End Sub' expected.</comment>
  </data>
  <data name="ScriptEngineEqualExpected" xml:space="preserve">
    <value>Invalid assignment: '=' expected.</value>
    <comment>Invalid assignment: '=' expected.</comment>
  </data>
  <data name="ScriptEngineErrorPos" xml:space="preserve">
    <value> (at line {0}, column {1})</value>
    <comment> (at line {0}, column {1})</comment>
  </data>
  <data name="ScriptEngineExceptionBadExpression" xml:space="preserve">
    <value>Bad expression.</value>
    <comment>Bad expression.</comment>
  </data>
  <data name="ScriptEngineExceptionBadToken" xml:space="preserve">
    <value>bad token in comparison code</value>
    <comment>bad token in comparison code</comment>
  </data>
  <data name="ScriptEngineExceptionEvaluateExpression" xml:space="preserve">
    <value>Evaluate expression '{0}': {1}</value>
    <comment>Evaluate expression '{0}': {1}</comment>
  </data>
  <data name="ScriptEngineExceptionExpression" xml:space="preserve">
    <value>Expression '{0}': {1}</value>
    <comment>Expression '{0}': {1}</comment>
  </data>
  <data name="ScriptEngineExceptionInfiniteLoop" xml:space="preserve">
    <value>Infinite loop (STEP value is zero).</value>
    <comment>Infinite loop (STEP value is zero).</comment>
  </data>
  <data name="ScriptEngineExceptionInvalidHEXNumber" xml:space="preserve">
    <value>Invalid HEX number.</value>
    <comment>Invalid HEX number.</comment>
  </data>
  <data name="ScriptEngineExceptionMatchDateDelimiter" xml:space="preserve">
    <value>Can't find matching date delimiter ('#').</value>
    <comment>Can't find matching date delimiter ('#').</comment>
  </data>
  <data name="ScriptEngineExceptionMatchQuote" xml:space="preserve">
    <value>Can't find matching quote.</value>
    <comment>Can't find matching quote.</comment>
  </data>
  <data name="ScriptEngineExceptionMissingParameters" xml:space="preserve">
    <value>Missing parameters in call to '{0}'.</value>
    <comment>Missing parameters in call to '{0}'.</comment>
  </data>
  <data name="ScriptEngineExceptionNonEmptyStringExpected" xml:space="preserve">
    <value>A non-empty string expected</value>
    <comment>A non-empty string expected</comment>
  </data>
  <data name="ScriptEngineExceptionParseExpression" xml:space="preserve">
    <value>Parse expression '{0}': {1}</value>
    <comment>Parse expression '{0}': {1}</comment>
  </data>
  <data name="ScriptEngineExceptionPropertyMethodNotFound" xml:space="preserve">
    <value>Property/method not found: {0}</value>
    <comment>Property/method not found: {0}</comment>
  </data>
  <data name="ScriptEngineExceptionTooManyParameters" xml:space="preserve">
    <value>Too many parameters in call to '{0}'.</value>
    <comment>Too many parameters in call to '{0}'.</comment>
  </data>
  <data name="ScriptEngineExpressionExpected" xml:space="preserve">
    <value>Expression expected.</value>
    <comment>Expression expected.</comment>
  </data>
  <data name="ScriptEngineGroupNotFoundForGroupPageValue" xml:space="preserve">
    <value>Group [{0}] not found while calculating GroupPage() or GroupPages().</value>
    <comment>Group [{0}] not found while calculating GroupPage() or GroupPages().</comment>
  </data>
  <data name="ScriptEngineInvalidConstantDeclaration" xml:space="preserve">
    <value>Invalid constant declaration: expected &lt;name&gt; = &lt;value&gt;.</value>
    <comment>Invalid constant declaration: expected &lt;name&gt; = &lt;value&gt;.</comment>
  </data>
  <data name="ScriptEngineInvalidGroupIdentifierUsedInGroupPageValue" xml:space="preserve">
    <value>Invalid group identifier [{0}] used as parameter for GroupPage() or GroupPages().</value>
    <comment>Invalid group identifier [{0}] used as parameter for GroupPage() or GroupPages().</comment>
  </data>
  <data name="ScriptEngineInvalidUsingOfGroupPageValue" xml:space="preserve">
    <value>GroupPage() and GroupPages() functions can be used only inside group.</value>
    <comment>GroupPage() and GroupPages() functions can be used only inside group.</comment>
  </data>
  <data name="ScriptEngineInvalidValueNotBool" xml:space="preserve">
    <value>[{0}] can not be interpreted as boolean.</value>
    <comment>[{0}] can not be interpreted as boolean.</comment>
  </data>
  <data name="ScriptEngineInvalidValueNotColor" xml:space="preserve">
    <value>[{0}] can not be interpreted as Color.</value>
    <comment>[{0}] can not be interpreted as Color.</comment>
  </data>
  <data name="ScriptEngineInvalidValueNotDateTime" xml:space="preserve">
    <value>[{0}] can not be interpreted as DateTime.</value>
    <comment>[{0}] can not be interpreted as DateTime.</comment>
  </data>
  <data name="ScriptEngineInvalidValueNotNumber" xml:space="preserve">
    <value>[{0}] can not be interpreted as number.</value>
    <comment>[{0}] can not be interpreted as number.</comment>
  </data>
  <data name="ScriptEnginelvalueExpected" xml:space="preserve">
    <value>Invalid assignment: 'lvalue' expected.</value>
    <comment>Invalid assignment: 'lvalue' expected.</comment>
  </data>
  <data name="ScriptEngineNameOfFunctionExpected" xml:space="preserve">
    <value>Invalid statement: Function name expected.</value>
    <comment>Invalid statement: Function name expected.</comment>
  </data>
  <data name="ScriptEngineNameOfSubExpected" xml:space="preserve">
    <value>Invalid statement: Sub name expected.</value>
    <comment>Invalid statement: Sub name expected.</comment>
  </data>
  <data name="ScriptEngineNearErrorPos" xml:space="preserve">
    <value> (near '{0}' at line {1}, column {2})</value>
    <comment> (near '{0}' at line {1}, column {2})</comment>
  </data>
  <data name="ScriptEngineNextExpected" xml:space="preserve">
    <value>Invalid statement: 'Next' expected.</value>
    <comment>Invalid statement: 'Next' expected.</comment>
  </data>
  <data name="ScriptEngineNotGroupDataScope" xml:space="preserve">
    <value>Datascope [{0}] is not linked with group, script functions GroupValue(), GroupRowCount() and GroupRow() can be used only inside group.</value>
    <comment>Datascope [{0}] is not linked with group, script functions GroupValue(), GroupRowCount() and GroupRow() can be used only inside group.</comment>
  </data>
  <data name="ScriptEngineScriptFailedToExecute" xml:space="preserve">
    <value>Script [{0}] failed to execute: {1}</value>
    <comment>Script [{0}] failed to execute: {1}</comment>
  </data>
  <data name="ScriptEngineSyntaxError" xml:space="preserve">
    <value>Syntax Error.</value>
    <comment>Syntax Error.</comment>
  </data>
  <data name="ScriptEngineThenExpected" xml:space="preserve">
    <value>Invalid statement: 'Then' expected.</value>
    <comment>Invalid statement: 'Then' expected.</comment>
  </data>
  <data name="ScriptEngineToExpected" xml:space="preserve">
    <value>Invalid statement: 'To' expected.</value>
    <comment>Invalid statement: 'To' expected.</comment>
  </data>
  <data name="ScriptEngineUnbalancedParenthesis" xml:space="preserve">
    <value>Unbalanced parenthesis.</value>
    <comment>Unbalanced parenthesis.</comment>
  </data>
  <data name="ScriptEngineUnexpectedEndOfExpression" xml:space="preserve">
    <value>Unexpected end of expression.</value>
    <comment>Unexpected end of expression.</comment>
  </data>
  <data name="ScriptEngineUnnamedScriptFailedToExecute" xml:space="preserve">
    <value>Script failed to execute: {0}</value>
    <comment>Script failed to execute: {0}</comment>
  </data>
  <data name="ScriptEngineVariableNotInitialized" xml:space="preserve">
    <value>Variable '{0}' used without being initialized.</value>
    <comment>Variable '{0}' used without being initialized.</comment>
  </data>
  <data name="ScriptEngineWendExpected" xml:space="preserve">
    <value>Invalid statement: 'Wend' expected.</value>
    <comment>Invalid statement: 'Wend' expected.</comment>
  </data>
  <data name="SectionHeightCanNotBeSet" xml:space="preserve">
    <value>To change height of the Section set height of its subsections.</value>
    <comment>To change height of the Section set height of its subsections.</comment>
  </data>
  <data name="SubreportCanNotRender" xml:space="preserve">
    <value>Subreport [{0}] can not be rendered.</value>
    <comment>Subreport [{0}] can not be rendered.</comment>
  </data>
  <data name="SubreportParameterNotFound" xml:space="preserve">
    <value>Subreport [{0}] does not have parameter [{1}].</value>
    <comment>Subreport [{0}] does not have parameter [{1}].</comment>
  </data>
  <data name="SubSectionAlreadyHasParentSection" xml:space="preserve">
    <value>The added SubSection already belongs to Section.</value>
    <comment>The added SubSection already belongs to Section.</comment>
  </data>
  <data name="SubSectionCollectionCanNotBeEmpty" xml:space="preserve">
    <value>The Section.SubSections collection can not be empty.</value>
    <comment>The Section.SubSections collection can not be empty.</comment>
  </data>
  <data name="SubSectionRenderHeightNotCalculated" xml:space="preserve">
    <value>The RenderHeight of [{0}] subsection is not available, subsection is not calculated.</value>
    <comment>The RenderHeight of [{0}] subsection is not available, subsection is not calculated.</comment>
  </data>
  <data name="XmlLinkCanNotOpenFile" xml:space="preserve">
    <value>Can not open [{0}].</value>
    <comment>Can not open [{0}].</comment>
  </data>
  <data name="XmlLinkTableNotFound" xml:space="preserve">
    <value>XML in [{0}] does not contain [{1}] table.</value>
    <comment>XML in [{0}] does not contain [{1}] table.</comment>
  </data>
</root>