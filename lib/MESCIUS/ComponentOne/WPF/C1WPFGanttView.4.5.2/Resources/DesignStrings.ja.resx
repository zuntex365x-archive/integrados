<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CalendarID" xml:space="preserve">
    <value>カレンダーID:</value>
  </data>
  <data name="ConstraintDate" xml:space="preserve">
    <value>制約の日付: </value>
  </data>
  <data name="ConstraintType" xml:space="preserve">
    <value>制約のタイプ: </value>
  </data>
  <data name="Cost" xml:space="preserve">
    <value>コスト: </value>
  </data>
  <data name="CustomFields" xml:space="preserve">
    <value>カスタムフィールド: </value>
  </data>
  <data name="Data" xml:space="preserve">
    <value>データ: </value>
  </data>
  <data name="Deadline" xml:space="preserve">
    <value>期限: </value>
  </data>
  <data name="Duration" xml:space="preserve">
    <value>期間: </value>
  </data>
  <data name="DurationSetNegative" xml:space="preserve">
    <value>期間には負の値を設定できません。</value>
  </data>
  <data name="DurationUnits" xml:space="preserve">
    <value>期間単位:</value>
  </data>
  <data name="Finish" xml:space="preserve">
    <value>終了日:</value>
  </data>
  <data name="HideBar" xml:space="preserve">
    <value>バーの非表示:</value>
  </data>
  <data name="IdMapping" xml:space="preserve">
    <value>IDマッピング:</value>
  </data>
  <data name="IndexMapping" xml:space="preserve">
    <value>インデックス:</value>
  </data>
  <data name="Initialized" xml:space="preserve">
    <value>初期化:</value>
  </data>
  <data name="Key" xml:space="preserve">
    <value>プロパティのキー:</value>
  </data>
  <data name="Mode" xml:space="preserve">
    <value>タスクモード:</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>名前:</value>
  </data>
  <data name="NextID" xml:space="preserve">
    <value>次のタスクID:</value>
  </data>
  <data name="Notes" xml:space="preserve">
    <value>メモ:</value>
  </data>
  <data name="OutlineParentID" xml:space="preserve">
    <value>親IDのアウトライン:</value>
  </data>
  <data name="Parts" xml:space="preserve">
    <value>分割タスク部分:</value>
  </data>
  <data name="PercentComplete" xml:space="preserve">
    <value>達成率:</value>
  </data>
  <data name="Predecessors" xml:space="preserve">
    <value>先行タスク:</value>
  </data>
  <data name="ResourceID" xml:space="preserve">
    <value>リソースのID:</value>
  </data>
  <data name="Resources" xml:space="preserve">
    <value>リソース:</value>
  </data>
  <data name="ResourceType" xml:space="preserve">
    <value>リソースのタイプ:</value>
  </data>
  <data name="Start" xml:space="preserve">
    <value>開始日:</value>
  </data>
  <data name="Summary" xml:space="preserve">
    <value>サマリー:</value>
  </data>
  <data name="Task" xml:space="preserve">
    <value>タスク:</value>
  </data>
  <data name="TaskID" xml:space="preserve">
    <value>タスクID:</value>
  </data>
  <data name="UnitOfMeasure" xml:space="preserve">
    <value>計測の単位:</value>
  </data>
  <data name="Value" xml:space="preserve">
    <value>プロパティ値:</value>
  </data>
  <data name="ZoomFactorOutOfRange" xml:space="preserve">
    <value>値は0から11の間でなければなりません。</value>
  </data>
</root>