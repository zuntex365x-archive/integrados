<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Error_CannotPrint" xml:space="preserve">
    <value>印刷中止</value>
  </data>
  <data name="Error_DateRangeInvalid" xml:space="preserve">
    <value>入力した最後の日が最初の日よりも前に設定されています。</value>
  </data>
  <data name="Error_LoadCustomStyleAlert" xml:space="preserve">
    <value>カスタムスタイルをロードしてください。</value>
  </data>
  <data name="Error_OutDateRange" xml:space="preserve">
    <value>Can not print start date greate than ganttview end date or end date less than ganttview start date.</value>
  </data>
  <data name="Error_OverlapOrCutOffMargin" xml:space="preserve">
    <value>The margins overlap or they are off the paper.Enter a different margin size.</value>
  </data>
  <data name="GroupHeader_Footer" xml:space="preserve">
    <value>フッター</value>
  </data>
  <data name="GroupHeader_Header" xml:space="preserve">
    <value>ヘッダー</value>
  </data>
  <data name="GroupHeader_Margin" xml:space="preserve">
    <value>外側の余白:</value>
  </data>
  <data name="GroupHeader_Padding" xml:space="preserve">
    <value>内側の余白: </value>
  </data>
  <data name="GroupHeader_PrintRange" xml:space="preserve">
    <value>印刷範囲</value>
  </data>
  <data name="GroupHeader_PrintStyle" xml:space="preserve">
    <value>印刷スタイル</value>
  </data>
  <data name="GroupHeader_Scaling" xml:space="preserve">
    <value>スケーリング</value>
  </data>
  <data name="TabHeader_General" xml:space="preserve">
    <value>通常</value>
  </data>
  <data name="TabHeader_HeaderAndFooter" xml:space="preserve">
    <value>ヘッダー/フッター</value>
  </data>
  <data name="TabHeader_Legend" xml:space="preserve">
    <value>凡例</value>
  </data>
  <data name="TabHeader_MarginAndPadding" xml:space="preserve">
    <value>外側の余白/内側の余白</value>
  </data>
  <data name="TabHeader_View" xml:space="preserve">
    <value>ビュー</value>
  </data>
  <data name="Text_AdjustTo" xml:space="preserve">
    <value>調節:</value>
  </data>
  <data name="Text_Bottom" xml:space="preserve">
    <value>下: </value>
  </data>
  <data name="Text_Columns" xml:space="preserve">
    <value>列のみ印刷。</value>
  </data>
  <data name="Text_ColumnsOnAllPages" xml:space="preserve">
    <value>列を印刷。</value>
  </data>
  <data name="Text_End" xml:space="preserve">
    <value>終了日:</value>
  </data>
  <data name="Text_FitFill" xml:space="preserve">
    <value>両方</value>
  </data>
  <data name="Text_FitHorizontal" xml:space="preserve">
    <value>幅</value>
  </data>
  <data name="Text_FitToPage" xml:space="preserve">
    <value>ページに合わせる:</value>
  </data>
  <data name="Text_FitVertial" xml:space="preserve">
    <value>高さ</value>
  </data>
  <data name="Text_Inch" xml:space="preserve">
    <value>インチ。</value>
  </data>
  <data name="Text_Left" xml:space="preserve">
    <value>左: </value>
  </data>
  <data name="Text_LoadCustomStyle" xml:space="preserve">
    <value>カスタムスタイルをロード</value>
  </data>
  <data name="Text_NormalSize" xml:space="preserve">
    <value>サイズ。</value>
  </data>
  <data name="Text_PrintAllCols" xml:space="preserve">
    <value>すべての列を印刷</value>
  </data>
  <data name="Text_PrintEntireProject" xml:space="preserve">
    <value>プロジェクト全体を印刷</value>
  </data>
  <data name="Text_PrintFrist" xml:space="preserve">
    <value>すべてのページに最初の</value>
  </data>
  <data name="Text_PrintOnlyFirst" xml:space="preserve">
    <value>最初の</value>
  </data>
  <data name="Text_PrintSpecificDates" xml:space="preserve">
    <value>特定の日付を印刷</value>
  </data>
  <data name="Text_Right" xml:space="preserve">
    <value>右: </value>
  </data>
  <data name="Text_ShowFooterSeparator" xml:space="preserve">
    <value>フッター区切り文字表示</value>
  </data>
  <data name="Text_ShowHeaderSeparator" xml:space="preserve">
    <value>ヘッダー区切り文字表示</value>
  </data>
  <data name="Text_Start" xml:space="preserve">
    <value>開始日:</value>
  </data>
  <data name="Text_Top" xml:space="preserve">
    <value>上: </value>
  </data>
  <data name="Text_Width" xml:space="preserve">
    <value>幅:</value>
  </data>
  <data name="ToolTip_PageFieldCount" xml:space="preserve">
    <value>ページ数フィールドを挿入する</value>
  </data>
  <data name="ToolTip_PageFieldNo" xml:space="preserve">
    <value>ページフィールドを挿入する</value>
  </data>
  <data name="ToolTip_PrintDate" xml:space="preserve">
    <value>印刷日付フィールドを挿入する</value>
  </data>
  <data name="ToolTip_PrintTime" xml:space="preserve">
    <value>印刷時間フィールドを挿入する</value>
  </data>
</root>