<?xml version="1.0"?>
<doc>
  <assembly>
    <name>C1.WPF.Toolbar.4</name>
  </assembly>
  <members>
    <member name="T:C1.WPF.Toolbar.ISimplifiedToolbar">
      <summary>
            Simplified toolbar type interface
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.ISimplifiedToolbar.IsCollapsed">
      <summary>
            Collapse state in new Toolbar
            </summary>
    </member>
    <member name="T:C1.WPF.Toolbar.C1SimplifiedRibbon">
      <summary>
            Simplified Ribbon Toolbar
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1SimplifiedRibbon.IsCollapsed">
      <summary>
            To check that TabPanel is collapse or not
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1SimplifiedRibbon.IsCollapsedProperty">
      <summary>
            It can be used for binding in some cases: With simplified, we can use for hiding group header 
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1SimplifiedRibbon.RibbonItems">
      <summary>
            RibbonItems will map as Items of Simplified Ribbon
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1SimplifiedRibbon.MarqueeBrush">
      <summary>
            Brush for Marquee
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1SimplifiedRibbon.MarqueeBrushProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1SimplifiedRibbon.MarqueeBrush" /> dependency property. 
            </summary>
    </member>
    <member name="M:C1.WPF.Toolbar.C1SimplifiedRibbon.#ctor">
      <summary>
            Initializes a new instance of a <see cref="T:C1.WPF.Toolbar.C1SimplifiedRibbon" />.
            </summary>
    </member>
    <member name="M:C1.WPF.Toolbar.C1SimplifiedRibbon.OnApplyTemplate">
      <summary>
            Builds the visual tree for the <see cref="T:C1.WPF.Toolbar.C1SimplifiedRibbon" /> control when a new template is applied.
            </summary>
      <remarks>
            This method is invoked whenever application code or an internal process, such as a rebuilding layout pass, calls the <see cref="M:ApplyTemplate" /> method.
            </remarks>
    </member>
    <member name="T:C1.WPF.Toolbar.C1ToolbarBase">
      <summary>
            Base class for toolbar.
            </summary>
    </member>
    <member name="T:C1.WPF.Toolbar.C1Toolbar">
      <summary>
            C1Toolbar control represents a toolbar that contains the controls consolidated
            in the toolbar groups. Usually C1Toolbar consists from one or more C1ToolbarGroups. 
            </summary>
    </member>
    <member name="E:C1.WPF.Toolbar.C1Toolbar.HelpClick">
      <summary>
            Fires when help buttom is clicked.
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1Toolbar.ToolbarItems">
      <summary>
            Gets the collection of toolbar items.
            </summary>
    </member>
    <member name="M:C1.WPF.Toolbar.C1Toolbar.OnApplyTemplate">
      <summary>
            Called when applying template.
            </summary>
    </member>
    <member name="M:C1.WPF.Toolbar.C1Toolbar.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>
            Prepares item container.
            </summary>
      <param name="element">
      </param>
      <param name="item">
      </param>
    </member>
    <member name="P:C1.WPF.Toolbar.C1Toolbar.ShowHelpButton">
      <summary>
            Gets or sets the help button visibility
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1Toolbar.ShowHelpButtonProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1Toolbar.ShowHelpButton" /> dependency property. 
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1Toolbar.ShowCollapseButton">
      <summary>
            Gets or sets the collapse button visibility
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1Toolbar.ShowCollapseButtonProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1Toolbar.ShowCollapseButton" /> dependency property. 
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1Toolbar.ToolbarGroupStyle">
      <summary>
            Gets or set the toolbar group style.
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1Toolbar.ToolbarGroupStyleProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1Toolbar.ToolbarGroupStyle" /> dependency property. 
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1Toolbar.ToolbarTabStyle">
      <summary>
            Gets or sets the toolbar tab control style.
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1Toolbar.ToolbarTabStyleProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1Toolbar.ToolbarTabStyle" /> dependency property. 
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1Toolbar.MouseOverBrush">
      <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush" /> used to highlight the control when it has the mouse over.
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1Toolbar.MouseOverBrushProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1Toolbar.MouseOverBrush" /> dependency property. 
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1Toolbar.PressedBrush">
      <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush" /> used to paint a button when it is pressed.
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1Toolbar.PressedBrushProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1Toolbar.PressedBrush" /> dependency property. 
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1Toolbar.FocusBrush">
      <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush" /> used to highlight the focused control.
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1Toolbar.FocusBrushProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1Toolbar.FocusBrush" /> dependency property. 
            </summary>
    </member>
    <member name="M:C1.WPF.Toolbar.C1Toolbar.#ctor">
      <summary>
            Initializes a new instance of a <see cref="T:C1.WPF.Toolbar.C1Toolbar" />.
            </summary>
    </member>
    <member name="T:C1.WPF.Toolbar.C1ToolbarButton">
      <summary>
            C1ToolbarButton control represents a button on the C1ToobarStrip. 
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarButton.LabelTitle">
      <summary>
            Gets or sets the label title of control.
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarButton.LabelTitleProperty">
      <summary>
            Using a DependencyProperty as the backing store for LabelTitle.  
            This enables animation, styling, binding, etc...
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarButton.SmallImageSource">
      <summary>
            Gets or sets the small image source of the control.
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarButton.SmallImageSourceProperty">
      <summary>
            Using a DependencyProperty as the backing store for SmallImageSource.  
            This enables animation, styling, binding, etc...
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarButton.LargeImageSource">
      <summary>
            Gets or sets the large image source of the control.
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarButton.LargeImageSourceProperty">
      <summary>
             Using a DependencyProperty as the backing store for LargeImageSource. 
             This enables animation, styling, binding, etc...
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarButton.MouseOverForegroundBrush">
      <summary>
            Mouseover foreground color
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarButton.MouseOverForegroundBrushProperty">
      <summary>
            Mouseover foreground color dependency property
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarButton.PressedForegroundBrush">
      <summary>
            Pressed foreground color
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarButton.PressedForegroundBrushProperty">
      <summary>
            Pressed foreground color dependency property
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarButton.ActualForegroundProperty">
      <summary>
            The ActualForeground dynamic property.
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarButton.ActualForeground">
      <summary>
            The ActualForeground CLR property - wrapper for ActualForegroundProperty.
            </summary>
    </member>
    <member name="M:C1.WPF.Toolbar.C1ToolbarButton.MeasureOverride(System.Windows.Size)">
      <summary>
            Called when measuring a control.
            </summary>
      <param name="availableSize">
      </param>
      <returns>
      </returns>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarButton.MouseOverBrush">
      <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush" /> used to highlight the control when it has the mouse over.
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarButton.MouseOverBrushProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarButton.MouseOverBrush" /> dependency property. 
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarButton.PressedBrush">
      <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush" /> used to paint a button when it is pressed.
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarButton.PressedBrushProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarButton.PressedBrush" /> dependency property. 
            </summary>
    </member>
    <member name="M:C1.WPF.Toolbar.C1ToolbarButton.#ctor">
      <summary>
            Initializes a new instance of a <see cref="T:C1.WPF.Toolbar.C1ToolbarButton" />.
            </summary>
    </member>
    <member name="M:C1.WPF.Toolbar.C1ToolbarButton.OnApplyTemplate">
      <summary>
            Builds the visual tree for the <see cref="T:C1.WPF.Toolbar.C1ToolbarButton" /> control when a new template is applied.
            </summary>
      <remarks>
            This method is invoked whenever application code or an internal process, such as a rebuilding layout pass, calls the <see cref="M:ApplyTemplate" /> method.
            </remarks>
    </member>
    <member name="T:C1.WPF.Toolbar.C1ToolbarCommandBase">
      <summary>
            Toolbar command base
            </summary>
    </member>
    <member name="E:C1.WPF.Toolbar.C1ToolbarCommandBase.PropertyChanged">
      <summary>
            Fires when property changed.
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarCommandBase._labelTitle">
      <summary>
            Command label title
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarCommandBase.LabelTitle">
      <summary>
            Gets or sets the command label.
            </summary>
    </member>
    <member name="T:C1.WPF.Toolbar.C1ToolbarCommand">
      <summary>
            Represents toolbar command. 
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarCommand.SmallImageSource">
      <summary>
            Gets or sets the small command image source.
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarCommand.LargeImageSource">
      <summary>
            Gets or sets the large command image source.
            </summary>
    </member>
    <member name="T:C1.WPF.Toolbar.C1ToolbarDropDown">
      <summary>
            C1ToolbarDropDown control represents a drop-down button on the C1ToobarStrip. 
            When clicking it displays popup panel with Content property or context menu set by Menu property.
            </summary>
      <remarks>
        <example>
            Example 1.
            Drop-down with popup stack panel with buttons.
            <code><![CDATA[>
            <c1:C1ToolbarDropDown Padding="2" Header="Color">
              <c1:C1ToolbarDropDown.Content>
                <StackPanel Margin="2" Orientation="Horizontal">
                  <Button Margin="2" Content="Red" Foreground="Red" />
                  <Button Margin="2" Content="Green" Foreground="Green" />
                  <Button Margin="2" Content="Blue" Foreground="Blue" />
                </StackPanel>
              </c1:C1ToolbarDropDown.Content>
            </c1:C1ToolbarDropDown>
            ]]></code>
            
            Example 2.
            Dropdown with popup menu.
            <code><![CDATA[>
            <c1:C1ToolbarDropDown Padding="2" Header="Color">
              <c1:C1ToolbarDropDown.Menu>
                <c1:C1ContextMenu>
                  <c1:C1MenuItem IsCheckable="True" Header="Red" HeaderForeground="Red" />
                  <c1:C1MenuItem IsCheckable="True" Header="Green" HeaderForeground="Green" />
                  <c1:C1MenuItem IsCheckable="True" Header="Blue" HeaderForeground="Blue" />
                </c1:C1ContextMenu>
              </c1:C1ToolbarDropDown.Menu>
            </c1:C1ToolbarDropDown>
            ]]></code></example>
      </remarks>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarDropDown.Menu">
      <summary>
            Gets or sets the context menu which is displayed when the control is clicked.
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarDropDown.MenuProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarDropDown.Menu" /> dependency property. 
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarDropDown.LabelTitle">
      <summary>
            Gets or sets the label title of control.
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarDropDown.LabelTitleProperty">
      <summary>
            Using a DependencyProperty as the backing store for LabelTitle.  
            This enables animation, styling, binding, etc...
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarDropDown.SmallImageSource">
      <summary>
            Gets or sets the small image source of the control.
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarDropDown.SmallImageSourceProperty">
      <summary>
            Using a DependencyProperty as the backing store for SmallImageSource.  
            This enables animation, styling, binding, etc...
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarDropDown.LargeImageSource">
      <summary>
            Gets or sets the large image source of the control.
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarDropDown.LargeImageSourceProperty">
      <summary>
             Using a DependencyProperty as the backing store for LargeImageSource. 
             This enables animation, styling, binding, etc...
            </summary>
    </member>
    <member name="M:C1.WPF.Toolbar.C1ToolbarDropDown.MeasureOverride(System.Windows.Size)">
      <summary>
            Called when measuring a control.
            </summary>
      <param name="availableSize">
      </param>
      <returns>
      </returns>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarDropDown.ContentBackground">
      <summary>
            Gets or sets the content background.
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarDropDown.ContentBackgroundProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarDropDown.ContentBackground" /> dependency property. 
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarDropDown.MouseOverBrush">
      <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush" /> used to highlight the control when it has the mouse over.
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarDropDown.MouseOverBrushProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarDropDown.MouseOverBrush" /> dependency property. 
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarDropDown.PressedBrush">
      <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush" /> used to paint a button when it is pressed.
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarDropDown.PressedBrushProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarDropDown.PressedBrush" /> dependency property. 
            </summary>
    </member>
    <member name="M:C1.WPF.Toolbar.C1ToolbarDropDown.#ctor">
      <summary>
            Initializes a new instance of a <see cref="T:C1.WPF.Toolbar.C1ToolbarDropDown" />.
            </summary>
    </member>
    <member name="M:C1.WPF.Toolbar.C1ToolbarDropDown.OnApplyTemplate">
      <summary>
            Builds the visual tree for the <see cref="T:C1.WPF.Toolbar.C1ToolbarDropDown" /> control when a new template is applied.
            </summary>
      <remarks>
            This method is invoked whenever application code or an internal process, such as a rebuilding layout pass, calls the <see cref="M:ApplyTemplate" /> method.
            </remarks>
    </member>
    <member name="T:C1.WPF.Toolbar.C1ToolbarGroup">
      <summary>
            C1ToolbarGroup control represents toolbar group that 
            contains one or more toolbar strips.
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarGroup.Header">
      <summary>
            Gets or sets the header of the toolbar group.
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarGroup.HeaderProperty">
      <summary>
             Identifies the Header dependency property.
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarGroup.GroupSizeDefinitions">
      <summary>
            Gets or sets the collection of group size definitions for the toolbar group.
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarGroup.GroupSizeDefinitionsProperty">
      <summary>
             Identifies the GroupSizeDefinitions dependency property.
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarGroup.ShowDialogLauncher">
      <summary>
            Gets or sets the dialog launcher visibility.
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarGroup.ShowDialogLauncherProperty">
      <summary>
            Identifies the  ShowDialogLauncher dependency property.
            </summary>
    </member>
    <member name="E:C1.WPF.Toolbar.C1ToolbarGroup.DialogLauncherClick">
      <summary>
            Fires when dialog launcher is clicked.
            </summary>
    </member>
    <member name="M:C1.WPF.Toolbar.C1ToolbarGroup.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>
            Invoked when Items property changed.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.WPF.Toolbar.C1ToolbarGroup.MeasureOverride(System.Windows.Size)">
      <summary>
            Called when measuring a control.
            </summary>
      <param name="availableSize">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.Toolbar.C1ToolbarGroup.TryCloseDropDownButton">
      <summary>
            Try to close the DropDownButton of this ToolbarGroup
            </summary>
      <returns>True if sucessfully closed. False otherwise</returns>
    </member>
    <member name="M:C1.WPF.Toolbar.C1ToolbarGroup.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>
            Prepares item container.
            </summary>
      <param name="element">
      </param>
      <param name="item">
      </param>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarGroup.MouseOverBrush">
      <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush" /> used to highlight the control when it has the mouse over.
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarGroup.MouseOverBrushProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarGroup.MouseOverBrush" /> dependency property. 
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarGroup.PressedBrush">
      <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush" /> used to paint a button when it is pressed.
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarGroup.PressedBrushProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarGroup.PressedBrush" /> dependency property. 
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarGroup.FocusBrush">
      <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush" /> used to highlight the focused control.
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarGroup.FocusBrushProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarGroup.FocusBrush" /> dependency property. 
            </summary>
    </member>
    <member name="M:C1.WPF.Toolbar.C1ToolbarGroup.#ctor">
      <summary>
            Initializes a new instance of a <see cref="T:C1.WPF.Toolbar.C1ToolbarGroup" />.
            </summary>
    </member>
    <member name="M:C1.WPF.Toolbar.C1ToolbarGroup.OnApplyTemplate">
      <summary>
            Builds the visual tree for the <see cref="T:C1.WPF.Toolbar.C1ToolbarGroup" /> control when a new template is applied.
            </summary>
      <remarks>
            This method is invoked whenever application code or an internal process, such as a rebuilding layout pass, calls the <see cref="M:ApplyTemplate" /> method.
            </remarks>
    </member>
    <member name="T:C1.WPF.Toolbar.C1ToolbarControlSize">
      <summary>
            Represents available sizes of control in toolbar.
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarControlSize.Large">
      <summary>
            Large appearance.
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarControlSize.Medium">
      <summary>
            Medium appearance.
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarControlSize.Small">
      <summary>
            Small appearance.
            </summary>
    </member>
    <member name="T:C1.WPF.Toolbar.C1ToolbarGroupSizeDefinition">
      <summary>
            Represents the definition of control sizes in toolbar group.
            </summary>
    </member>
    <member name="M:C1.WPF.Toolbar.C1ToolbarGroupSizeDefinition.#ctor">
      <summary>
            Creates an instance of C1ToolbarGroupSizeDefinition class.
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarGroupSizeDefinition.ControlSizes">
      <summary>
            Gets or sets the collection of control sizes.
            </summary>
    </member>
    <member name="T:C1.WPF.Toolbar.C1ToolbarGroupPanel">
      <summary>
            C1ToolbarGroupPanel class represents a panel that is used for element layout in C1ToolbarGroup.
            </summary>
    </member>
    <member name="M:C1.WPF.Toolbar.C1ToolbarGroupPanel.#ctor">
      <summary>
            Initializes a new instance of a <see cref="T:C1.WPF.Toolbar.C1ToolbarGroupPanel" />.
            </summary>
    </member>
    <member name="M:C1.WPF.Toolbar.C1ToolbarGroupPanel.MeasureOverride(System.Windows.Size)">
      <summary>
            Called when measuring a control.
            </summary>
      <param name="availableSize">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.Toolbar.C1ToolbarGroupPanel.ArrangeOverride(System.Windows.Size)">
      <summary>
            Called when arranging a control.
            </summary>
      <param name="finalSize">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:C1.WPF.Toolbar.C1ToolbarPanel">
      <summary>
            C1ToolbarPanel class represents a panel that is used for element layout in C1Toolbar.
            </summary>
    </member>
    <member name="M:C1.WPF.Toolbar.C1ToolbarPanel.#ctor">
      <summary>
            Initializes a new instance of a <see cref="T:C1.WPF.Toolbar.C1ToolbarPanel" />.
            </summary>
    </member>
    <member name="M:C1.WPF.Toolbar.C1ToolbarPanel.MeasureOverride(System.Windows.Size)">
      <summary>
            Called when measuring a control.
            </summary>
      <param name="availableSize">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.Toolbar.C1ToolbarPanel.ArrangeOverride(System.Windows.Size)">
      <summary>
            Called when arranging a control.
            </summary>
      <param name="finalSize">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:C1.WPF.Toolbar.C1ToolbarSplitButton">
      <summary>
            C1ToolbarSplitButton control represents a drop-down split button on the C1ToobarStrip.
            </summary>
      <remarks>
            It's similar to C1ToolbarDropDown but contains two clickable areas.
            When clicking on rightmost part with downward-pointing rectangle it
            displays popup panel with Content property or context menu set by Menu property.
            Clicking on left part of button fires Click event as in the standard button. 
            Usually the Click event is used to perform default or last action while popup
            allows to select alternative options.
            <example>
            Split button with popup menu.
            <code><![CDATA[
            <c1:C1ToolbarSplitButton Padding="2" Header="Defaut"
              Click="SetDefaultStyle">
              <c1:C1ToolbarDropDown.Menu>
                <c1:C1ContextMenu>
                  <c1:C1MenuItem Header="Heading 1" FontSize="14" />
                  <c1:C1MenuItem Header="Heading 2" FontSize="12" />
                  <c1:C1MenuItem Header="Title" FontWeight="Bold" />
                  <c1:C1MenuItem Header="Subtitle" FontWeight="SemiBold" FontStyle="Italic"  />
                  <c1:C1MenuItem Header="Quote" FontStyle="Italic" />
                </c1:C1ContextMenu>
              </c1:C1ToolbarDropDown.Menu>
            </c1:C1ToolbarSplitButton>
            ]]></code></example></remarks>
    </member>
    <member name="M:C1.WPF.Toolbar.C1ToolbarSplitButton.#ctor">
      <summary>
            Creates an instance of C1ToolbarSplitButton.
            </summary>
    </member>
    <member name="M:C1.WPF.Toolbar.C1ToolbarSplitButton.OnApplyTemplate">
      <summary>
            Called when applying template.
            </summary>
    </member>
    <member name="E:C1.WPF.Toolbar.C1ToolbarSplitButton.Click">
      <summary>
            Fires when the button is clicked.
            </summary>
    </member>
    <member name="T:C1.WPF.Toolbar.ToolbarOverflow">
      <summary>
            ToolbarOverflow enumeration contains available values for overflow handling
            in toolbar elements.
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.ToolbarOverflow.None">
      <summary>
            Overflow is not handled.
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.ToolbarOverflow.Menu">
      <summary>
            Shows menu.
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.ToolbarOverflow.Panel">
      <summary>
            Shows panel with elements which do not fit to the main container. 
            </summary>
    </member>
    <member name="T:C1.WPF.Toolbar.C1ToolbarStrip">
      <summary>
            C1ToolbarStrip control represents a strip that contains one or more controls.
            C1ToolbarStrip can be used alone or as content of toolbar group.
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarStrip.OverflowProperty">
      <summary>
            Identifies the Overflow dependency property.
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarStrip.Overflow">
      <summary>
            Gets or set the value that indicates how to handle the items
            which do not fit to the available space.
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarStrip.OverflowPanelProperty">
      <summary>
            Identifies the OverflowPanel dependency property.
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarStrip.OverflowPanel">
      <summary>
            Gets or sets the template for overflow panel.
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarStrip.OrientationProperty">
      <summary>
            Identifies the Orientation dependency property.
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarStrip.Orientation">
      <summary>
            Gets or sets the orientation of the toolbar strip.
            </summary>
    </member>
    <member name="E:C1.WPF.Toolbar.C1ToolbarStrip.OverflowItemAdded">
      <summary>
            Fires when an element is added to the overflow items.
            The overflow items include the elements hidden from
            the toolbar strip due to lack of available space.
            </summary>
    </member>
    <member name="E:C1.WPF.Toolbar.C1ToolbarStrip.OverflowItemRemoved">
      <summary>
            Fires when an element is removed from the overflow items.
            The overflow items include the elements hidden from
            the toolbar strip due to lack of available space.
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarStrip.OverflowMenuItems">
      <summary>
            Gets the collection that contains elements of overflow menu.
            </summary>
    </member>
    <member name="M:C1.WPF.Toolbar.C1ToolbarStrip.OnApplyTemplate">
      <summary>
             Invoked during a call of ApplyTemplate() method.
            </summary>
    </member>
    <member name="M:C1.WPF.Toolbar.C1ToolbarStrip.MeasureOverride(System.Windows.Size)">
      <summary>
            Called when measuring a control.
            </summary>
      <param name="availableSize">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.Toolbar.C1ToolbarStrip.ArrangeOverride(System.Windows.Size)">
      <summary>
            Called when arranging a control.
            </summary>
      <param name="finalSize">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.Toolbar.C1ToolbarStrip.GetContainerForItemOverride">
      <summary>
            Creates the element to display the item.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.Toolbar.C1ToolbarStrip.IsItemItsOwnContainerOverride(System.Object)">
      <summary>
            Determines if the specified item is its own container.
            </summary>
      <param name="item">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.Toolbar.C1ToolbarStrip.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>
            Prepares the specified element to display the specified item.
            </summary>
      <param name="element">
      </param>
      <param name="item">
      </param>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarStrip.MouseOverBrush">
      <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush" /> used to highlight the control when it has the mouse over.
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarStrip.MouseOverBrushProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarStrip.MouseOverBrush" /> dependency property. 
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarStrip.PressedBrush">
      <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush" /> used to paint a button when it is pressed.
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarStrip.PressedBrushProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarStrip.PressedBrush" /> dependency property. 
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarStrip.ButtonBackground">
      <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush" /> that will be assigned to the Background of the buttons inside the control.
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarStrip.ButtonBackgroundProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarStrip.ButtonBackground" /> dependency property. 
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarStrip.ButtonForeground">
      <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush" /> that will be assigned to the Foreground of the buttons inside the control.
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarStrip.ButtonForegroundProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarStrip.ButtonForeground" /> dependency property. 
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarStrip.FocusBrush">
      <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush" /> used to highlight the focused control.
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarStrip.FocusBrushProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarStrip.FocusBrush" /> dependency property. 
            </summary>
    </member>
    <member name="M:C1.WPF.Toolbar.C1ToolbarStrip.#ctor">
      <summary>
            Initializes a new instance of a <see cref="T:C1.WPF.Toolbar.C1ToolbarStrip" />.
            </summary>
    </member>
    <member name="T:C1.WPF.Toolbar.C1ToolbarStripItem">
      <summary>
            C1ToolbarStripItem represents wrapper for the items on the C1ToolbarStrip.
            Each item added on the toolbar strip is put into the separate C1ToolbarStripItem.
            </summary>
    </member>
    <member name="M:C1.WPF.Toolbar.C1ToolbarStripItem.OnApplyTemplate">
      <summary>
            Invoked during a call of ApplyTemplate() method.
            </summary>
    </member>
    <member name="M:C1.WPF.Toolbar.C1ToolbarStripItem.ArrangeOverride(System.Windows.Size)">
      <summary>
            Called when arranging a control.
            </summary>
      <param name="finalSize">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.Toolbar.C1ToolbarStripItem.MeasureOverride(System.Windows.Size)">
      <summary>
            Called when measuring a control.
            </summary>
      <param name="availableSize">
      </param>
      <returns>
      </returns>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarStripItem.MouseOverBrush">
      <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush" /> used to highlight the control when it has the mouse over.
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarStripItem.MouseOverBrushProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarStripItem.MouseOverBrush" /> dependency property. 
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarStripItem.PressedBrush">
      <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush" /> used to paint a button when it is pressed.
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarStripItem.PressedBrushProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarStripItem.PressedBrush" /> dependency property. 
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarStripItem.FocusBrush">
      <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush" /> used to highlight the focused control.
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarStripItem.FocusBrushProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarStripItem.FocusBrush" /> dependency property. 
            </summary>
    </member>
    <member name="M:C1.WPF.Toolbar.C1ToolbarStripItem.#ctor">
      <summary>
            Initializes a new instance of a <see cref="T:C1.WPF.Toolbar.C1ToolbarStripItem" />.
            </summary>
    </member>
    <member name="T:C1.WPF.Toolbar.C1ToolbarTabItem">
      <summary>
            Represents toolbar tab item.
            </summary>
    </member>
    <member name="M:C1.WPF.Toolbar.C1ToolbarTabItem.#ctor">
      <summary>
            Creates an instance of C1ToolbarTabItem.
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarTabItem.Groups">
      <summary>
            Gets the collection of toolbar groups.
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarTabItem.GroupsProperty">
      <summary>
            Using a DependencyProperty as the backing store for Items.  This enables animation, styling, binding, etc... 
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarTabItem.GroupItemsSource">
      <summary>
            Gets or sets the items source for toolbar groups that contains in toolbar tab item.
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarTabItem.GroupItemsSourceProperty">
      <summary>
            Using a DependencyProperty as the backing store for GroupItemsSource.  This enables animation, styling, binding, etc... 
            </summary>
    </member>
    <member name="T:C1.WPF.Toolbar.C1ToolbarGroupCollection">
      <summary>
            Represents collection of toolbar groups.
            </summary>
    </member>
    <member name="T:C1.WPF.Toolbar.C1ToolbarTabControl">
      <summary>
            Represents toolbar tab control.
            </summary>
    </member>
    <member name="M:C1.WPF.Toolbar.C1ToolbarTabControl.#ctor">
      <summary>
            Initializes a new instance of a <see cref="T:C1.WPF.Toolbar.C1ToolbarTabControl" />.
            </summary>
    </member>
    <member name="M:C1.WPF.Toolbar.C1ToolbarTabControl.OnApplyTemplate">
      <summary>
            Builds the visual tree for the <see cref="T:C1.WPF.Toolbar.C1ToolbarTabControl" /> control when a new template is applied.
            </summary>
      <remarks>
            This method is invoked whenever application code or an internal process, such as a rebuilding layout pass, calls the <see cref="M:ApplyTemplate" /> method.
            </remarks>
    </member>
    <member name="T:C1.WPF.Toolbar.C1ToolbarToggleButton">
      <summary>
            C1ToolbarButton control represents a toggle button on the C1ToobarStrip.
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarToggleButton.LabelTitle">
      <summary>
            Gets or sets the label title of control.
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarToggleButton.LabelTitleProperty">
      <summary>
            Using a DependencyProperty as the backing store for LabelTitle.  
            This enables animation, styling, binding, etc...
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarToggleButton.SmallImageSource">
      <summary>
            Gets or sets the small image source of the control.
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarToggleButton.SmallImageSourceProperty">
      <summary>
            Using a DependencyProperty as the backing store for SmallImageSource.  
            This enables animation, styling, binding, etc...
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarToggleButton.LargeImageSource">
      <summary>
            Gets or sets the large image source of the control.
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarToggleButton.LargeImageSourceProperty">
      <summary>
             Using a DependencyProperty as the backing store for LargeImageSource. 
             This enables animation, styling, binding, etc...
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarToggleButton.GroupNameProperty">
      <summary>
            Identifies the GroupName dependency property. 
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarToggleButton.GroupName">
      <summary>
            Gets or sets the name that specifies which C1ToolbarToggleButton controls are mutually exclusive.
            </summary>
    </member>
    <member name="M:C1.WPF.Toolbar.C1ToolbarToggleButton.MeasureOverride(System.Windows.Size)">
      <summary>
            Called when measuring a control. 
            </summary>
      <param name="availableSize">
      </param>
      <returns>
      </returns>\
        </member>
    <member name="M:C1.WPF.Toolbar.C1ToolbarToggleButton.OnChecked(System.Windows.RoutedEventArgs)">
      <summary>
            Called when button is checked.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.WPF.Toolbar.C1ToolbarToggleButton.OnApplyTemplate">
      <summary>
            Invoked during a call of ApplyTemplate() method.
            </summary>
    </member>
    <member name="M:C1.WPF.Toolbar.C1ToolbarToggleButton.OnToggle">
      <summary>
            Called when toggling button state.
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarToggleButton.MouseOverBrush">
      <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush" /> used to highlight the control when it has the mouse over.
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarToggleButton.MouseOverBrushProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarToggleButton.MouseOverBrush" /> dependency property. 
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarToggleButton.PressedBrush">
      <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush" /> used to paint a button when it is pressed.
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarToggleButton.PressedBrushProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarToggleButton.PressedBrush" /> dependency property. 
            </summary>
    </member>
    <member name="M:C1.WPF.Toolbar.C1ToolbarToggleButton.#ctor">
      <summary>
            Initializes a new instance of a <see cref="T:C1.WPF.Toolbar.C1ToolbarToggleButton" />.
            </summary>
    </member>
    <member name="T:C1.WPF.Toolbar.BooleanToVisibilityConverter">
      <summary>
            Invert Boolean to Visibility - False ~ Visible ; True ~ Collapsed
            </summary>
    </member>
    <member name="M:C1.WPF.Toolbar.BooleanToVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
            Override convert 
            </summary>
      <param name="value">
      </param>
      <param name="targetType">
      </param>
      <param name="parameter">
      </param>
      <param name="culture">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.Toolbar.BooleanToVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
            Override ConvertBack
            </summary>
      <param name="value">
      </param>
      <param name="targetType">
      </param>
      <param name="parameter">
      </param>
      <param name="culture">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:C1.WPF.Toolbar.C1SimplifiedGroupPanel">
      <summary>
            C1ToolbarGroupPanel class represents a panel that is used for element layout in C1ToolbarGroup
            </summary>
    </member>
    <member name="M:C1.WPF.Toolbar.C1SimplifiedGroupPanel.MeasureOverride(System.Windows.Size)">
      <summary>
            Keep the base behavior and calculate new Size in case simplified toolbar
            </summary>
      <param name="availableSize">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.Toolbar.C1SimplifiedGroupPanel.ArrangeOverride(System.Windows.Size)">
      <summary>
            Arrange all the item in a group inline when the toolbar is collapsed
            </summary>
      <param name="finalSize">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:C1.WPF.Toolbar.C1SimplifiedRibbonGroup">
      <summary>
            C1SimplifiedRibbonGroup that has multiple IC1ToolbarControl
            </summary>
    </member>
    <member name="M:C1.WPF.Toolbar.C1SimplifiedRibbonGroup.MeasureOverride(System.Windows.Size)">
      <summary>
            Called when measuring a control.
            </summary>
      <param name="availableSize">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.Toolbar.C1SimplifiedRibbonGroup.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>
            Binding property from Group to Ribbon Control
            </summary>
      <param name="element">
      </param>
      <param name="item">
      </param>
    </member>
    <member name="M:C1.WPF.Toolbar.C1SimplifiedRibbonGroup.#ctor">
      <summary>
            Initializes a new instance of a <see cref="T:C1.WPF.Toolbar.C1SimplifiedRibbonGroup" />.
            </summary>
    </member>
    <member name="M:C1.WPF.Toolbar.C1SimplifiedRibbonGroup.OnApplyTemplate">
      <summary>
            Builds the visual tree for the <see cref="T:C1.WPF.Toolbar.C1SimplifiedRibbonGroup" /> control when a new template is applied.
            </summary>
      <remarks>
            This method is invoked whenever application code or an internal process, such as a rebuilding layout pass, calls the <see cref="M:ApplyTemplate" /> method.
            </remarks>
    </member>
    <member name="T:C1.WPF.Toolbar.C1SimplifiedTabControl">
      <summary>
            C1SimplifiedTabControl handles marquee logic and toggle collapse state of tab control
            </summary>
    </member>
    <member name="M:C1.WPF.Toolbar.C1SimplifiedTabControl.#ctor">
      <summary>
            Initializes a new instance of a <see cref="T:C1.WPF.Toolbar.C1SimplifiedTabControl" />.
            </summary>
    </member>
    <member name="M:C1.WPF.Toolbar.C1SimplifiedTabControl.OnApplyTemplate">
      <summary>
            Builds the visual tree for the <see cref="T:C1.WPF.Toolbar.C1SimplifiedTabControl" /> control when a new template is applied.
            </summary>
      <remarks>
            This method is invoked whenever application code or an internal process, such as a rebuilding layout pass, calls the <see cref="M:ApplyTemplate" /> method.
            </remarks>
    </member>
    <member name="T:C1.WPF.Toolbar.C1SimplifiedTabItem">
      <summary>
            TabItem type for simplified toolbar
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1SimplifiedTabItem.Groups">
      <summary>
            ToolbarGroup for showing Controls
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1SimplifiedTabItem.GroupsProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1SimplifiedTabItem.Groups" /> dependency property. 
            </summary>
    </member>
    <member name="M:C1.WPF.Toolbar.C1SimplifiedTabItem.#ctor">
      <summary>
            Initializes a new instance of a <see cref="T:C1.WPF.Toolbar.C1SimplifiedTabItem" />.
            </summary>
    </member>
    <member name="T:C1.WPF.Toolbar.C1ToolbarCommandConverter">
      <summary>
            Converter for command.
            </summary>
    </member>
    <member name="M:C1.WPF.Toolbar.C1ToolbarCommandConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
            Converts value.
            </summary>
      <param name="value">
      </param>
      <param name="targetType">
      </param>
      <param name="parameter">
      </param>
      <param name="culture">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.Toolbar.C1ToolbarCommandConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
            Converts value back.
            </summary>
      <param name="value">
      </param>
      <param name="targetType">
      </param>
      <param name="parameter">
      </param>
      <param name="culture">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:C1.WPF.Toolbar.C1SimplifiedToolbarStrip">
      <summary>
            ToolbarStrip for Simplified Ribbon
            </summary>
    </member>
    <member name="T:C1.WPF.Toolbar.C1ToolbarDropdownItem">
      <summary>
            C1Icon for dropdown item
            </summary>
      <summary>
            C1ToolbarDropDown control represents a drop-down button on the C1ToobarStrip. 
            When clicking it displays popup panel with Content property or context menu set by Menu property.
            </summary>
      <remarks>
        <example>
            Example 1.
            Drop-down with popup stack panel with buttons.
            <code><![CDATA[>
            <c1:C1ToolbarDropDown Padding="2" Header="Color">
              <c1:C1ToolbarDropDown.Content>
                <StackPanel Margin="2" Orientation="Horizontal">
                  <Button Margin="2" Content="Red" Foreground="Red" />
                  <Button Margin="2" Content="Green" Foreground="Green" />
                  <Button Margin="2" Content="Blue" Foreground="Blue" />
                </StackPanel>
              </c1:C1ToolbarDropDown.Content>
            </c1:C1ToolbarDropDown>
            ]]></code>
            
            Example 2.
            Dropdown with popup menu.
            <code><![CDATA[>
            <c1:C1ToolbarDropDown Padding="2" Header="Color">
              <c1:C1ToolbarDropDown.Menu>
                <c1:C1ContextMenu>
                  <c1:C1MenuItem IsCheckable="True" Header="Red" HeaderForeground="Red" />
                  <c1:C1MenuItem IsCheckable="True" Header="Green" HeaderForeground="Green" />
                  <c1:C1MenuItem IsCheckable="True" Header="Blue" HeaderForeground="Blue" />
                </c1:C1ContextMenu>
              </c1:C1ToolbarDropDown.Menu>
            </c1:C1ToolbarDropDown>
            ]]></code></example>
      </remarks>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarDropdownItem.LargeContent">
      <summary>
            Content for large state
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarDropdownItem.LargeContentProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarDropdownItem.LargeContent" /> dependency property. 
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarDropdownItem.LargeContentTemplate">
      <summary>
            Content template for large state
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarDropdownItem.LargeContentTemplateProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarDropdownItem.LargeContentTemplate" /> dependency property. 
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarDropdownItem.MediumContent">
      <summary>
            Content for medium state
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarDropdownItem.MediumContentProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarDropdownItem.MediumContent" /> dependency property. 
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarDropdownItem.MediumContentTemplate">
      <summary>
            Content template for medium state
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarDropdownItem.MediumContentTemplateProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarDropdownItem.MediumContentTemplate" /> dependency property. 
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarDropdownItem.SmallContent">
      <summary>
            Content for small state
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarDropdownItem.SmallContentProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarDropdownItem.SmallContent" /> dependency property. 
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarDropdownItem.SmallContentTemplate">
      <summary>
            Content template for small state
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarDropdownItem.SmallContentTemplateProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarDropdownItem.SmallContentTemplate" /> dependency property. 
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarDropdownItem.PressedBrush">
      <summary>
            Pressed background color
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarDropdownItem.PressedBrushProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarDropdownItem.PressedBrush" /> dependency property. 
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarDropdownItem.MouseOverBrush">
      <summary>
            Mouseover background color
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarDropdownItem.MouseOverBrushProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarDropdownItem.MouseOverBrush" /> dependency property. 
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarDropdownItem.MouseOverForegroundBrush">
      <summary>
            Mouseover foreground color
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarDropdownItem.MouseOverForegroundBrushProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarDropdownItem.MouseOverForegroundBrush" /> dependency property. 
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarDropdownItem.PressedForegroundBrush">
      <summary>
            Pressed foreground color
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarDropdownItem.PressedForegroundBrushProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarDropdownItem.PressedForegroundBrush" /> dependency property. 
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarDropdownItem.ContentBackground">
      <summary>
            Gets or sets the content background.
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarDropdownItem.ContentBackgroundProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarDropdownItem.ContentBackground" /> dependency property. 
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarDropdownItem.PopupContent">
      <summary>
            Popup content of a drop down
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarDropdownItem.PopupContentProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarDropdownItem.PopupContent" /> dependency property. 
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarDropdownItem.LargeIconProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarDropdownItem.LargeIcon" /> dependency property. 
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarDropdownItem.MediumIconProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarDropdownItem.MediumIcon" /> dependency property. 
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarDropdownItem.SmallIconProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarDropdownItem.SmallIcon" /> dependency property. 
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarDropdownItem.PopupContentTemplate">
      <summary>
            DataTemplate for PopupContent
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarDropdownItem.PopupContentTemplateProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarDropdownItem.PopupContentTemplate" /> dependency property. 
            </summary>
    </member>
    <member name="M:C1.WPF.Toolbar.C1ToolbarDropdownItem.#ctor">
      <summary>
            Initializes a new instance of a <see cref="T:C1.WPF.Toolbar.C1ToolbarDropdownItem" />.
            </summary>
    </member>
    <member name="M:C1.WPF.Toolbar.C1ToolbarDropdownItem.OnApplyTemplate">
      <summary>
            Builds the visual tree for the <see cref="T:C1.WPF.Toolbar.C1ToolbarDropdownItem" /> control when a new template is applied.
            </summary>
      <remarks>
            This method is invoked whenever application code or an internal process, such as a rebuilding layout pass, calls the <see cref="M:ApplyTemplate" /> method.
            </remarks>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarDropdownItem.Menu">
      <summary>
            Gets or sets the context menu which is displayed when the control is clicked.
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarDropdownItem.MenuProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarDropdownItem.Menu" /> dependency property. 
            </summary>
    </member>
    <member name="M:C1.WPF.Toolbar.C1ToolbarDropdownItem.MeasureOverride(System.Windows.Size)">
      <summary>
            Called when measuring a control.
            </summary>
      <param name="availableSize">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:C1.WPF.Toolbar.C1ToolbarItem">
      <summary>
            C1Icon for buttons
            </summary>
      <summary>
            C1ToolbarItem control represents a toolbar item with 3 states Large, Medium, Small. C1ToolbarItem provide APIs 
            to support C1Icon with TextBlock in it's content
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarItem.LargeContent">
      <summary>
            Content for large state
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarItem.LargeContentProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarItem.LargeContent" /> dependency property. 
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarItem.LargeContentTemplate">
      <summary>
            Content template for large state
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarItem.LargeContentTemplateProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarItem.LargeContentTemplate" /> dependency property. 
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarItem.MediumContent">
      <summary>
            Content for medium state
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarItem.MediumContentProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarItem.MediumContent" /> dependency property. 
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarItem.MediumContentTemplate">
      <summary>
            Content template for medium state
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarItem.MediumContentTemplateProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarItem.MediumContentTemplate" /> dependency property. 
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarItem.SmallContent">
      <summary>
            Content for small state
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarItem.SmallContentProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarItem.SmallContent" /> dependency property. 
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarItem.SmallContentTemplate">
      <summary>
            Content template for small state
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarItem.SmallContentTemplateProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarItem.SmallContentTemplate" /> dependency property. 
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarItem.PressedBrush">
      <summary>
            Pressed background color
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarItem.PressedBrushProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarItem.PressedBrush" /> dependency property. 
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarItem.MouseOverBrush">
      <summary>
            Mouseover background color
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarItem.MouseOverBrushProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarItem.MouseOverBrush" /> dependency property. 
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarItem.MouseOverForegroundBrush">
      <summary>
            Mouseover foreground color
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarItem.MouseOverForegroundBrushProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarItem.MouseOverForegroundBrush" /> dependency property. 
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarItem.PressedForegroundBrush">
      <summary>
            Pressed foreground color
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarItem.PressedForegroundBrushProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarItem.PressedForegroundBrush" /> dependency property. 
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarItem.LargeIconProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarItem.LargeIcon" /> dependency property. 
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarItem.MediumIconProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarItem.MediumIcon" /> dependency property. 
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarItem.SmallIconProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarItem.SmallIcon" /> dependency property. 
            </summary>
    </member>
    <member name="M:C1.WPF.Toolbar.C1ToolbarItem.#ctor">
      <summary>
            Initializes a new instance of a <see cref="T:C1.WPF.Toolbar.C1ToolbarItem" />.
            </summary>
    </member>
    <member name="M:C1.WPF.Toolbar.C1ToolbarItem.OnApplyTemplate">
      <summary>
            Builds the visual tree for the <see cref="T:C1.WPF.Toolbar.C1ToolbarItem" /> control when a new template is applied.
            </summary>
      <remarks>
            This method is invoked whenever application code or an internal process, such as a rebuilding layout pass, calls the <see cref="M:ApplyTemplate" /> method.
            </remarks>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarItem.ActualForegroundProperty">
      <summary>
            The ActualHeight dynamic property.
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarItem.ActualForeground">
      <summary>
            The ActualForeground CLR property - wrapper for ActualForegroundProperty.
            </summary>
    </member>
    <member name="M:C1.WPF.Toolbar.C1ToolbarItem.MeasureOverride(System.Windows.Size)">
      <summary>
            Called when measuring a control.
            </summary>
      <param name="availableSize">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:C1.WPF.Toolbar.C1ToolbarToggleItem">
      <summary>
            C1Icon for toggle buttons
            </summary>
      <summary>
            C1ToolbarButton control represents a toggle button on the C1ToobarStrip.
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarToggleItem.LargeContent">
      <summary>
            Content for large state
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarToggleItem.LargeContentProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarToggleItem.LargeContent" /> dependency property. 
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarToggleItem.LargeContentTemplate">
      <summary>
            Content template for large state
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarToggleItem.LargeContentTemplateProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarToggleItem.LargeContentTemplate" /> dependency property. 
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarToggleItem.MediumContent">
      <summary>
            Content for medium state
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarToggleItem.MediumContentProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarToggleItem.MediumContent" /> dependency property. 
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarToggleItem.MediumContentTemplate">
      <summary>
            Content template for medium state
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarToggleItem.MediumContentTemplateProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarToggleItem.MediumContentTemplate" /> dependency property. 
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarToggleItem.SmallContent">
      <summary>
            Content for small state
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarToggleItem.SmallContentProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarToggleItem.SmallContent" /> dependency property. 
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarToggleItem.SmallContentTemplate">
      <summary>
            Content template for small state
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarToggleItem.SmallContentTemplateProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarToggleItem.SmallContentTemplate" /> dependency property. 
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarToggleItem.PressedBrush">
      <summary>
            Pressed background color
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarToggleItem.PressedBrushProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarToggleItem.PressedBrush" /> dependency property. 
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarToggleItem.MouseOverBrush">
      <summary>
            Mouseover background color
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarToggleItem.MouseOverBrushProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarToggleItem.MouseOverBrush" /> dependency property. 
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarToggleItem.MouseOverForegroundBrush">
      <summary>
            Mouseover foreground color
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarToggleItem.MouseOverForegroundBrushProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarToggleItem.MouseOverForegroundBrush" /> dependency property. 
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarToggleItem.PressedForegroundBrush">
      <summary>
            Pressed foreground color
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarToggleItem.PressedForegroundBrushProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarToggleItem.PressedForegroundBrush" /> dependency property. 
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarToggleItem.LargeIconProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarToggleItem.LargeIcon" /> dependency property. 
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarToggleItem.MediumIconProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarToggleItem.MediumIcon" /> dependency property. 
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarToggleItem.SmallIconProperty">
      <summary>
            Identifies the <see cref="P:C1.WPF.Toolbar.C1ToolbarToggleItem.SmallIcon" /> dependency property. 
            </summary>
    </member>
    <member name="M:C1.WPF.Toolbar.C1ToolbarToggleItem.#ctor">
      <summary>
            Initializes a new instance of a <see cref="T:C1.WPF.Toolbar.C1ToolbarToggleItem" />.
            </summary>
    </member>
    <member name="M:C1.WPF.Toolbar.C1ToolbarToggleItem.OnApplyTemplate">
      <summary>
            Builds the visual tree for the <see cref="T:C1.WPF.Toolbar.C1ToolbarToggleItem" /> control when a new template is applied.
            </summary>
      <remarks>
            This method is invoked whenever application code or an internal process, such as a rebuilding layout pass, calls the <see cref="M:ApplyTemplate" /> method.
            </remarks>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarToggleItem.GroupNameProperty">
      <summary>
            Identifies the GroupName dependency property. 
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarToggleItem.GroupName">
      <summary>
            Gets or sets the name that specifies which C1ToolbarToggleItem controls are mutually exclusive.
            </summary>
    </member>
    <member name="M:C1.WPF.Toolbar.C1ToolbarToggleItem.MeasureOverride(System.Windows.Size)">
      <summary>
            Called when measuring a control. 
            </summary>
      <param name="availableSize">
      </param>
      <returns>
      </returns>\
        </member>
    <member name="M:C1.WPF.Toolbar.C1ToolbarToggleItem.OnChecked(System.Windows.RoutedEventArgs)">
      <summary>
            Called when button is checked.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.WPF.Toolbar.C1ToolbarToggleItem.OnAfterApplyTemplate">
      <summary>
            Invoked during a call of ApplyTemplate() method.
            </summary>
    </member>
    <member name="F:C1.WPF.Toolbar.C1ToolbarToggleItem.ActualForegroundProperty">
      <summary>
            The ActualHeight dynamic property.
            </summary>
    </member>
    <member name="P:C1.WPF.Toolbar.C1ToolbarToggleItem.ActualForeground">
      <summary>
            The ActualForeground CLR property - wrapper for ActualForegroundProperty.
            </summary>
    </member>
    <member name="M:C1.WPF.Toolbar.C1ToolbarToggleItem.OnToggle">
      <summary>
            Called when toggling button state.
            </summary>
    </member>
    <member name="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper">
      <summary>
            GeneratedInternalTypeHelper
            </summary>
    </member>
    <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
      <summary>
            CreateInstance
            </summary>
    </member>
    <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
      <summary>
            GetPropertyValue
            </summary>
    </member>
    <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
      <summary>
            SetPropertyValue
            </summary>
    </member>
    <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
      <summary>
            CreateDelegate
            </summary>
    </member>
    <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
      <summary>
            AddEventHandler
            </summary>
    </member>
  </members>
</doc>