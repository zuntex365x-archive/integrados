<?xml version="1.0"?>
<doc>
  <assembly>
    <name>C1.WPF.FinancialChart.4.5.2</name>
  </assembly>
  <members>
    <member name="T:C1.Chart.Finance.FinancialChartType">
      <summary>
            Specifies the type of financial chart.
            </summary>
    </member>
    <member name="F:C1.Chart.Finance.FinancialChartType.Column">
      <summary>
            Shows vertical bars and allows you to compare values of items across categories.
            </summary>
    </member>
    <member name="F:C1.Chart.Finance.FinancialChartType.Scatter">
      <summary>
            Uses X and Y coordinates to show patterns within the data.
            </summary>
    </member>
    <member name="F:C1.Chart.Finance.FinancialChartType.Line">
      <summary>
            Shows trends over a period of time or across categories.
            </summary>
    </member>
    <member name="F:C1.Chart.Finance.FinancialChartType.LineSymbols">
      <summary>
            Shows line chart with a symbol on each data point.
            </summary>
    </member>
    <member name="F:C1.Chart.Finance.FinancialChartType.Area">
      <summary>
            Shows line chart with area below the line filled with color.
            </summary>
    </member>
    <member name="F:C1.Chart.Finance.FinancialChartType.Candlestick">
      <summary>
            Presents items with high, low, open, and close values.
            The size of the wick line is determined by the High and Low values, while
            the size of the bar is determined by the Open and Close values. The bar is
            displayed using different colors, depending on whether the close value is
            higher or lower than the open value. The data for this chart type can be defined using the
            FinancialChart or FinancialSeries binding property as a comma separated value in the
            following format: "highProperty, lowProperty, openProperty, closeProperty".
            </summary>
    </member>
    <member name="F:C1.Chart.Finance.FinancialChartType.HighLowOpenClose">
      <summary>
            Displays the same information as a candlestick chart, except that opening
            values are displayed using lines to the left, while lines to the right
            indicate closing values. The data for this chart type can be defined using the
            FinancialChart or FinancialSeries binding property as a comma separated value in the
            following format: "highProperty, lowProperty, openProperty, closeProperty".
            </summary>
    </member>
    <member name="F:C1.Chart.Finance.FinancialChartType.HeikinAshi">
      <summary>
            Derived from the candlestick chart and uses information from the current and
            prior period in order to filter out the noise. These charts cannot be combined
            with any other series objects. The data for this chart type can be defined using the
            FinancialChart or FinancialSeries binding property as a comma separated value in the
            following format: "highProperty, lowProperty, openProperty, closeProperty".
            </summary>
    </member>
    <member name="F:C1.Chart.Finance.FinancialChartType.LineBreak">
      <summary>
            Filters out noise by focusing exclusively on price changes. These charts cannot
            be combined with any other series objects. The data for this chart type can be defined using the
            FinancialChart or FinancialSeries binding property as a comma separated value in the
            following format: "highProperty, lowProperty, openProperty, closeProperty".
            </summary>
    </member>
    <member name="F:C1.Chart.Finance.FinancialChartType.Renko">
      <summary>
            Ignores time and focuses on price changes that meet a specified amount. These
            charts cannot be combined with any other series objects. The data for this chart type can be defined using the
            FinancialChart or FinancialSeries binding property as a comma separated value in the
            following format: "highProperty, lowProperty, openProperty, closeProperty".
            </summary>
    </member>
    <member name="F:C1.Chart.Finance.FinancialChartType.Kagi">
      <summary>
            Ignores time and focuses on price action. These charts cannot be combined with
            any other series objects. The data for this chart type can be defined using the
            FinancialChart or FinancialSeries binding property as a comma separated value in the
            following format: "highProperty, lowProperty, openProperty, closeProperty".
            </summary>
    </member>
    <member name="F:C1.Chart.Finance.FinancialChartType.ColumnVolume">
      <summary>
            Identical to the standard Column chart, except that the width of each bar is
            determined by the Volume value. The data for this chart type can be defined using the
            FinancialChart or FinancialSeries binding property as a comma separated value in the
            following format: "yProperty, volumeProperty". This chart type can only be used at
            the FinancialChart level, and should not be applied on
            FinancialSeries objects. Only one set of volume data is currently supported
            per FinancialChart.
            </summary>
    </member>
    <member name="F:C1.Chart.Finance.FinancialChartType.EquiVolume">
      <summary>
            Similar to the Candlestick chart, but shows the high and low values only.
            In addition, the width of each bar is determined by Volume value. The data for
            this chart type can be defined using the FinancialChart or FinancialSeries
            binding property as a comma separated value in the following format:
            "highProperty, lowProperty, openProperty, closeProperty, volumeProperty".
            This chart type can only be used at the FinancialChart level, and should not
            be applied on FinancialSeries objects. Only one set of volume data is currently
            supported per FinancialChart.
            </summary>
    </member>
    <member name="F:C1.Chart.Finance.FinancialChartType.CandleVolume">
      <summary>
            Identical to the standard Candlestick chart, except that the width of each
            bar is determined by Volume value. The data for
            this chart type can be defined using the FinancialChart or FinancialSeries
            binding property as a comma separated value in the following format:
            "highProperty, lowProperty, openProperty, closeProperty, volumeProperty".
            This chart type can only be used at the FinancialChart level, and should not
            be applied on FinancialSeries objects. Only one set of volume data is currently
            supported per FinancialChart.
            </summary>
    </member>
    <member name="F:C1.Chart.Finance.FinancialChartType.ArmsCandleVolume">
      <summary>
            Created by Richard Arms, this chart is a combination of EquiVolume and
            CandleVolume chart types. The data for
            this chart type can be defined using the FinancialChart or FinancialSeries
            binding property as a comma separated value in the following format:
            "highProperty, lowProperty, openProperty, closeProperty, volumeProperty".
            This chart type can only be used at the FinancialChart level, and should not
            be applied on FinancialSeries objects. Only one set of volume data is currently
            supported per FinancialChart.
            </summary>
    </member>
    <member name="T:C1.Chart.Finance.DataFields">
      <summary>
            Specifies which fields are to be used for calculation. Applies to Renko and Kagi chart types.
            </summary>
    </member>
    <member name="F:C1.Chart.Finance.DataFields.Close">
      <summary>
            Close values are used for calculations.
            </summary>
    </member>
    <member name="F:C1.Chart.Finance.DataFields.High">
      <summary>
            High values are used for calculations.
            </summary>
    </member>
    <member name="F:C1.Chart.Finance.DataFields.Low">
      <summary>
            Low values are used for calculations.
            </summary>
    </member>
    <member name="F:C1.Chart.Finance.DataFields.Open">
      <summary>
            Open values are used for calculations.
            </summary>
    </member>
    <member name="F:C1.Chart.Finance.DataFields.HighLow">
      <summary>
            High-Low method is used for calculations. DataFields.HighLow is currently not
            supported with Renko chart types.
            </summary>
    </member>
    <member name="F:C1.Chart.Finance.DataFields.HL2">
      <summary>
            Average of high and low values is used for calculations.
            </summary>
    </member>
    <member name="F:C1.Chart.Finance.DataFields.HLC3">
      <summary>
            Average of high, low, and close values is used for calculations.
            </summary>
    </member>
    <member name="F:C1.Chart.Finance.DataFields.HLOC4">
      <summary>
            Average of high, low, open, and close values is used for calculations.
            </summary>
    </member>
    <member name="T:C1.Chart.Finance.RangeMode">
      <summary>
            Specifies the unit for Kagi and Renko chart types.
            </summary>
    </member>
    <member name="F:C1.Chart.Finance.RangeMode.Fixed">
      <summary>
            Uses a fixed, positive number for the Kagi chart's reversal amount
            or Renko chart's box size.
            </summary>
    </member>
    <member name="F:C1.Chart.Finance.RangeMode.ATR">
      <summary>
            Uses the current Average True Range value for Kagi chart's reversal amount
            or Renko chart's box size. When ATR is used, the reversal amount or box size
            option of these charts must be an integer and will be used as the period for 
            the ATR calculation.
            </summary>
    </member>
    <member name="F:C1.Chart.Finance.RangeMode.Percentage">
      <summary>
            Uses a percentage for the Kagi chart's reversal amount. RangeMode.Percentage
            is currently not supported with Renko chart types.
            </summary>
    </member>
    <member name="T:C1.Chart.Finance.PointAndFigureScaling">
            Specifies the scaling mode for point and figure chart.
        </member>
    <member name="F:C1.Chart.Finance.PointAndFigureScaling.Traditional">
            Traditional scaling. The box size is calculated automatically based on price range.  
        </member>
    <member name="F:C1.Chart.Finance.PointAndFigureScaling.Fixed">
            Fixed scaling. The box size is defined by boxSize property. 
        </member>
    <member name="F:C1.Chart.Finance.PointAndFigureScaling.Dynamic">
            Dynamic(ATR) scaling. The box size is calculated based on ATR. 
        </member>
    <member name="T:C1.WPF.Chart.Finance.Fibonacci">
      <summary>
            Represents a Fibonacci Retracements tool for the FinancialChart.
            This tool enables the calculation and plotting of various alert levels that are
            useful in financial charts.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.Fibonacci.Low">
      <summary>
            Gets or sets the low value of Fibonacci tool.
            If not specified, the low value is calculated based on
            data values provided by ItemsSource.
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.Fibonacci.LowProperty">
      <summary>
            Identifies the Low dependency property.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.Fibonacci.High">
      <summary>
            Gets or sets the high value of Fibonacci tool.
            If not specified, the high value is calculated based on
            data values provided by the ItemsSource.
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.Fibonacci.HighProperty">
      <summary>
            Identifies the High dependency property.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.Fibonacci.LabelPosition">
      <summary>
            Gets or sets the label position for levels in Fibonacci tool.
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.Fibonacci.LabelPositionProperty">
      <summary>
            Identifies the LabelPosition dependency property.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.Fibonacci.Uptrend">
      <summary>
            Gets or sets a value indicating whether to create uptrending Fibonacci tool.
            Default value is true(uptrend). If the value is false, the downtrending levels are plotted.
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.Fibonacci.UptrendProperty">
      <summary>
            Identifies the Uptrend dependency property.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.Fibonacci.Levels">
      <summary>
            Gets or sets the array of levels for plotting.
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.Fibonacci.LevelsProperty">
      <summary>
            Identifies the Levels dependency property.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.Fibonacci.MaxX">
      <summary>
            Gets or sets the x maximum value of the Fibonacci tool.
            If not specified, current maximum of x-axis is used.
            The value can be specified as a number or Date object.
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.Fibonacci.MaxXProperty">
      <summary>
            Identifies the MaxX dependency property.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.Fibonacci.MinX">
      <summary>
            Gets or sets the x minimum value of the Fibonacci tool.
            If not specified, current minimum of x-axis is used.
            The value can be specified as a number or Date object.
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.Fibonacci.MinXProperty">
      <summary>
            Identifies the MinX dependency property.
            </summary>
    </member>
    <member name="T:C1.WPF.Chart.Finance.FibonacciArcs">
      <summary>
            Represents a Fibonacci Arcs tool for the FinancialChart.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.FibonacciArcs.StartX">
      <summary>
            Gets or sets the starting x data point for the FibonacciArcs.
            This value can be number or a Date object (for time-based data).
            Unlike some of the other Fibonacci tools, the starting x
            is not calculated automatically if undefined.
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.FibonacciArcs.StartXProperty">
      <summary>
            Identifies the StartX dependency property.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.FibonacciArcs.StartY">
      <summary>
            Gets or sets the ending y data point for the FibonacciArcs.
            Unlike some of the other Fibonacci tools, the ending y
            is not calculated automatically if undefined.
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.FibonacciArcs.StartYProperty">
      <summary>
            Identifies the StartY dependency property
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.FibonacciArcs.EndX">
      <summary>
            Gets or sets the ending x data point for the FibonacciArcs.
            This value can be number or a Date object (for time-based data).
            Unlike some of the other Fibonacci tools, the ending x
            is not calculated automatically if undefined.
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.FibonacciArcs.EndXProperty">
      <summary>
            Identifies the EndX dependency property.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.FibonacciArcs.EndY">
      <summary>
            Gets or sets the ending y data point for the FibonacciArcs.
            Unlike some of the other Fibonacci tools, the ending y
            is not calculated automatically if undefined.
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.FibonacciArcs.EndYProperty">
      <summary>
            Identifies the EndY dependency property.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.FibonacciArcs.Levels">
      <summary>
            Gets or sets the array of levels for plotting.
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.FibonacciArcs.LevelsProperty">
      <summary>
            Identifies the Levels dependency property.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.FibonacciArcs.LabelPosition">
      <summary>
            Gets or sets the LabelPosition for levels in FibonacciFans tool.
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.FibonacciArcs.LabelPositionProperty">
      <summary>
            Identifies the LabelPosition dependency property.
            </summary>
    </member>
    <member name="T:C1.WPF.Chart.Finance.FibonacciFans">
      <summary>
            Represents a Fibonacci Fan tool for the FinancialChart.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.FibonacciFans.StartX">
      <summary>
            Gets or sets the starting x data point for the FibonacciFans.
            This value can be number or a Date object (for time-based data).
            Unlike some of the other Fibonacci tools, the starting x
            is not calculated automatically if undefined.
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.FibonacciFans.StartXProperty">
      <summary>
            Identifies the StartX dependency property.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.FibonacciFans.StartY">
      <summary>
            Gets or sets the ending y data point for the FibonacciFans.
            Unlike some of the other Fibonacci tools, the ending y
            is not calculated automatically if undefined.
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.FibonacciFans.StartYProperty">
      <summary>
            Identifies the StartY dependency property
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.FibonacciFans.EndX">
      <summary>
            Gets or sets the ending x data point for the FibonacciFans.
            This value can be number or a Date object (for time-based data).
            Unlike some of the other Fibonacci tools, the ending x
            is not calculated automatically if undefined.
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.FibonacciFans.EndXProperty">
      <summary>
            Identifies the EndX dependency property.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.FibonacciFans.EndY">
      <summary>
            Gets or sets the ending y data point for the FibonacciFans.
            Unlike some of the other Fibonacci tools, the ending y
            is not calculated automatically if undefined.
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.FibonacciFans.EndYProperty">
      <summary>
            Identifies the EndY dependency property.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.FibonacciFans.Levels">
      <summary>
            Gets or sets the array of levels for plotting.
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.FibonacciFans.LevelsProperty">
      <summary>
            Identifies the Levels dependency property.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.FibonacciFans.LabelPosition">
      <summary>
            Gets or sets the LabelPosition for levels in FibonacciFans tool.
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.FibonacciFans.LabelPositionProperty">
      <summary>
            Identifies the LabelPosition dependency property.
            </summary>
    </member>
    <member name="T:C1.WPF.Chart.Finance.FibonacciTimeZones">
      <summary>
            Represents a Fibonacci Time Zones tool for the FinancialChart.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.FibonacciTimeZones.StartX">
      <summary>
            Gets or sets the starting x data point for the time zones.
            If not set, the starting x data point is calculated automatically.
            The value can be a number or a Date object (for time-base data).
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.FibonacciTimeZones.StartXProperty">
      <summary>
            Identifies the StartX dependency property.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.FibonacciTimeZones.EndX">
      <summary>
            Gets or sets the ending X data point for the time zones.
            If not set, the ending X data point is calculated automatically.
            The value can be a number or a Date object (for time-based data).
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.FibonacciTimeZones.EndXProperty">
      <summary>
            Identifies the EndX dependency property.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.FibonacciTimeZones.Levels">
      <summary>
            Gets or sets the array of levels for plotting.
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.FibonacciTimeZones.LevelsProperty">
      <summary>
            Identifies the Levels dependency property.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.FibonacciTimeZones.LabelPosition">
      <summary>
            Gets or sets the LabelPositin for levels in FibonacciTimeZones tool.
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.FibonacciTimeZones.LabelPositionProperty">
      <summary>
            Identifies the LabelPosition dependency property.
            </summary>
    </member>
    <member name="T:C1.WPF.Chart.Finance.C1FinancialChart">
      <summary>
            Represents financial charting control.
            </summary>
    </member>
    <member name="M:C1.WPF.Chart.Finance.C1FinancialChart.#ctor">
      <summary>
            Creates an instance of FinancialChart class.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.C1FinancialChart.ChartType">
      <summary>
            Gets or sets the financial chart type.
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.C1FinancialChart.ChartTypeProperty">
      <summary>
            Identifies the ChartType dependency property.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.C1FinancialChart.Options">
      <summary>
            Gets or sets the chart options.
            </summary>
    </member>
    <member name="T:C1.WPF.Chart.Finance.Quote">
      <summary>
             This class is used in design-time.
            </summary>
    </member>
    <member name="M:C1.WPF.Chart.Finance.Quote.#ctor">
      <summary>
            Creates an instance of <see cref="T:C1.WPF.Chart.Finance.Quote" />.
            </summary>
    </member>
    <member name="M:C1.WPF.Chart.Finance.Quote.#ctor(System.String,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Create an instance of <see cref="T:C1.WPF.Chart.Finance.Quote" /></summary>
      <param name="date">
      </param>
      <param name="open">
      </param>
      <param name="high">
      </param>
      <param name="low">
      </param>
      <param name="close">
      </param>
      <param name="volume">
      </param>
    </member>
    <member name="P:C1.WPF.Chart.Finance.Quote.Date">
      <summary>
            Gets or sets the value of Date property.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.Quote.High">
      <summary>
            Gets or sets the High property.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.Quote.Low">
      <summary>
            Gets or sets the Low property.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.Quote.Open">
      <summary>
            Gets or sets the Open property.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.Quote.Close">
      <summary>
            Gets or sets the Close property.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.Quote.Volume">
      <summary>
            Gets or sets the Volume property.
            </summary>
    </member>
    <member name="T:C1.WPF.Chart.Finance.QuoteCollection">
      <summary>
            Provides access to an ordered, strongly typed collection of <see cref="T:C1.WPF.Chart.Finance.Quote" /> objects.
            </summary>
    </member>
    <member name="T:C1.WPF.Chart.Finance.FinancialChartOptions">
      <summary>
            Represents options for FinancialChart.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.FinancialChartOptions.NewLineBreaks">
      <summary>
            Gets or sets the number of previous
            boxes that must be compared before a new box is drawn in
            Line Break charts. The default value is 3.
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.FinancialChartOptions.NewLineBreaksProperty">
      <summary>
            Identifies the NewLineBreaks dependency property.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.FinancialChartOptions.BoxSize">
      <summary>
            Specifies the box size for the Renko chart. The default value is 2.
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.FinancialChartOptions.BoxSizeProperty">
      <summary>
            Identifies the BoxSize dependency property.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.FinancialChartOptions.RangeMode">
      <summary>
            Specifies the <see cref="P:C1.WPF.Chart.Finance.FinancialChartOptions.RangeMode" />RangeMode for the Kagi and Renko charts. The default value is RangeMode.Fixed.
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.FinancialChartOptions.RangeModeProperty">
      <summary>
            Identifies the RangeMode dependency property.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.FinancialChartOptions.DataFields">
      <summary>
            Specifies the <see cref="P:C1.WPF.Chart.Finance.FinancialChartOptions.DataFields" />DataFields used for the Kagi and Renko charts. The default value is DataFields.Close.
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.FinancialChartOptions.DataFieldsProperty">
      <summary>
            Identifies the DataFields dependency property.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.FinancialChartOptions.ReversalAmount">
      <summary>
            Specifies the reversal amount for the Kagi chart. The default value is 14.
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.FinancialChartOptions.ReversalAmountProperty">
      <summary>
            Identifies the ReversalAmount dependency property.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.PointAndFigureOptions.Scaling">
      <summary>
            Specifies the scaling for PointAndFigure chart. The default value is traditional.
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.PointAndFigureOptions.PointAndFigureScalingProperty">
      <summary>
            Identifies the Scaling dependency property.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.PointAndFigureOptions.Period">
      <summary>
            Specifies the ATR period for PointAndFigure chart. The default value is 14.
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.PointAndFigureOptions.PeriodProperty">
      <summary>
            Identifies the Period dependency property.
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.PointAndFigureOptions.SquareGridProperty">
      <summary>
            Identifies the SquareGrid dependency property.
            </summary>
    </member>
    <member name="T:C1.WPF.Chart.Finance.FinancialSeries">
      <summary>
            Represents a series of data points to display in the chart.
            </summary>
      <remarks>
            The FinancialSeries class supports all basic chart types. You may define
            a different chart type on each FinancialSeries object that you add to the
            FinancialChart series collection. This overrides the FinancialChart.ChartType
            property set on the chart that is the default for all FinancialSeries objects
            in its collection.
            </remarks>
    </member>
    <member name="P:C1.WPF.Chart.Finance.FinancialSeries.ChartType">
      <summary>
            Gets or sets the chart type for the series.
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.FinancialSeries.ChartTypeProperty">
      <summary>
            Identifies the ChartType dependency property.
            </summary>
    </member>
    <member name="T:C1.WPF.Chart.Finance.IndicatorBase">
      <summary>
            Represents indicator base class.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.IndicatorBase.Period">
      <summary>
            Gets or sets the period.
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.IndicatorBase.PeriodProperty">
      <summary>
            Identifies the Period dependency property.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.IndicatorBase.ChartType">
      <summary>
            Gets the series type.
            </summary>
    </member>
    <member name="M:C1.WPF.Chart.Finance.IndicatorBase.OnItemsSourceChanged">
      <summary>
            Fires when data source was changes.
            </summary>
    </member>
    <member name="M:C1.WPF.Chart.Finance.IndicatorBase.GetValues(System.Int32)">
      <summary>
            Gets the array of data values.
            </summary>
      <param name="dim">Dimension.</param>
      <returns>Array of data values.</returns>
    </member>
    <member name="T:C1.WPF.Chart.Finance.ATR">
      <summary>
            Represents an Average True Range indicator series for the FinancialChart.
            </summary>
      <remarks>
            Average true range is used to measure the volatility of an asset. Average true range
            does not provide any indication of the price's trend, but rather the degree of price
            volatility.
            </remarks>
    </member>
    <member name="M:C1.WPF.Chart.Finance.ATR.#ctor">
      <summary>
            Creates an instance of ATR class.
            </summary>
    </member>
    <member name="T:C1.WPF.Chart.Finance.RSI">
      <summary>
            Represents a Relative Strength Index indicator series for the FinancialChart.
            </summary>
    </member>
    <member name="M:C1.WPF.Chart.Finance.RSI.#ctor">
      <summary>
            Creates an instance of RSI class.
            </summary>
    </member>
    <member name="T:C1.WPF.Chart.Finance.CCI">
      <summary>
            Represents a Commodity Channel Index indicator series for the FinancialChart.
            </summary>
      <remarks>
            The commodity channel index is an oscillator that measures an asset's current price
            level relative to an average price level over a specified period of time.
            </remarks>
    </member>
    <member name="M:C1.WPF.Chart.Finance.CCI.#ctor">
      <summary>
            Creates an instance of CCI class.
            </summary>
    </member>
    <member name="T:C1.WPF.Chart.Finance.WilliamsR">
      <summary>
            Represents a Williams %R indicator series for the FinancialChart.
            </summary>
      <remarks>
            Williams %R is a momentum indicator that is the inverse of a fast stochastic
            oscillator. The Williams %R indicator is designed to
            tell whether an asset is trading near the high or low of its trading range.
            </remarks>
    </member>
    <member name="M:C1.WPF.Chart.Finance.WilliamsR.#ctor">
      <summary>
            Creates an instance of WilliamsR class.
            </summary>
    </member>
    <member name="T:C1.WPF.Chart.Finance.MacdBase">
      <summary>
            Base class for Macd and MscdHistogram.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.MacdBase.FastPeriod">
      <summary>
            Gets or sets the fast exponential moving average period for the MACD line.
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.MacdBase.FastPeriodProperty">
      <summary>
            Identifies the FastPeriod dependency property.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.MacdBase.SlowPeriod">
      <summary>
            Gets or sets the slow exponential moving average period for the MACD line.
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.MacdBase.SlowPeriodProperty">
      <summary>
            Identifies the SlowPeriod dependency property.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.MacdBase.SmoothingPeriod">
      <summary>
            Gets or sets the exponential moving average period for the signal line.
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.MacdBase.SmoothingPeriodProperty">
      <summary>
            Identifies the SmoothingPeriod dependency property.
            </summary>
    </member>
    <member name="T:C1.WPF.Chart.Finance.Macd">
      <summary>
            Represents a moving Average Convergence/Divergence (MACD) indicator series.
            The MACD indicator is designed to reveal changes in strength, direction, momentum,
            and duration of an asset's price trend.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.Macd.MacdLineStyle">
      <summary>
            Gets or sets the macd line style.
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.Macd.MacdLineStyleProperty">
      <summary>
            Identifies the MacdStyle dependency property.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.Macd.SignalLineStyle">
      <summary>
            Gets or sets the signal line style.
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.Macd.SignalLineStyleProperty">
      <summary>
            Identifies the SignalLineStyle dependency property.
            </summary>
    </member>
    <member name="T:C1.WPF.Chart.Finance.MacdHistogram">
      <summary>
            Represents a Moving Average Convergence/Divergence (MACD) Histogram indicator series
            for FinancialChart.
            The MACD indicator is designed to reveal changes in strength, direction, momentum,
            and duration of an asset's price trend.
            </summary>
    </member>
    <member name="T:C1.WPF.Chart.Finance.Stochastic">
      <summary>
            Represents a Stochastic Oscillator indicator series for FinancialChart.
            Stochastic oscillators are momentum indicators designed to predict price turning
            points by comparing an asset's closing price to its high-low range.
            The Stochastic series can be used for fast (default), slow and full stochastic
            oscillators.To create a slow or full stochastic oscillator, set the SmoothingPeriod
            to an integer value greater than one; slow stochastic oscillators generally use a fixed
            SmoothingPeriod of three.To create or revert to a fast stochastic oscillator, set the
            SmoothingPeriod to an integer value of one.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.Stochastic.KPeriod">
      <summary>
            Gets or sets the period for the %K calculation.
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.Stochastic.KPeriodProperty">
      <summary>
            Identifies the KPeriod dependency property.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.Stochastic.DPeriod">
      <summary>
            Gets or sets the period for the %D simple moving average.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.Stochastic.SmoothingPeriod">
      <summary>
            Gets or sets the smoothing period for full %K.
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.Stochastic.SmoothingPeriodProperty">
      <summary>
            Identifies the SmoothingPeriod dependency property.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.Stochastic.KLineStyle">
      <summary>
            Gets or sets the style of k line.
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.Stochastic.KLineStyleProperty">
      <summary>
            Identifies the KLine dependency property.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.Stochastic.DLineStyle">
      <summary>
            Gets or sets the style of D line.
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.Stochastic.DLineStyleProperty">
      <summary>
            Identifies the DLine dependency property.
            </summary>
    </member>
    <member name="T:C1.WPF.Chart.Finance.MovingAverage">
      <summary>
            Represents a moving average trendline for FinancialChart.
            </summary>
      <remarks>
            It is a calculation to analyze data points by creating a series of averages of
            different subsets of the full data set. You may define a different type on each
            MovingAverage object by setting the type property on the MovingAverage itself.
            The MovingAverage class has a period property that allows you to set the number of
            periods for computing the average value.
            </remarks>
    </member>
    <member name="M:C1.WPF.Chart.Finance.MovingAverage.#ctor">
      <summary>
            Creates an instance of MovingAverage class.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.MovingAverage.Type">
      <summary>
            Gets or sets the moving average type.
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.MovingAverage.TypeProperty">
      <summary>
            Identifies the Type dependency property.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.MovingAverage.Period">
      <summary>
            Gets or sets the period of the moving average series.
            It should be set to integer value greater than 1. 
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.MovingAverage.PeriodProperty">
      <summary>
            Identifies the Period dependency property.
            </summary>
    </member>
    <member name="M:C1.WPF.Chart.Finance.MovingAverage.GetValues(System.Int32)">
      <summary>
            Gets the array of data values.
            </summary>
      <param name="dim">Dimension.</param>
      <returns>Array of data values.</returns>
    </member>
    <member name="P:C1.WPF.Chart.Finance.BollingerBands.Multiplier">
      <summary>
            Gets or sets the standard deviation multiplier.
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.BollingerBands.MultiplierProperty">
      <summary>
            Identifies the Multiplier dependency property.
            </summary>
    </member>
    <member name="T:C1.WPF.Chart.Finance.Envelopes">
      <summary>
            Represents a Moving Average Envelopes overlay series for the FinancialChart.
            Moving average envelopes are moving average set above and below a standard moving
            average. The amount above/blow the standard moving average is percentage based and
            dictated by the size property.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.Envelopes.Type">
      <summary>
            Gets or sets the moving average type for the envelopes.
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.Envelopes.TypeProperty">
      <summary>
            Identifies the Type dependency property.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.Envelopes.Size">
      <summary>
            Gets or sets the size of the moving average.
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.Envelopes.SizeProperty">
      <summary>
            Identifies the Size dependency property.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.IchimokuCloud.ConversionPeriod">
      <summary>
            Gets or sets the period of Conversion Period.
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.IchimokuCloud.ConversionPeriodProperty">
      <summary>
            Identifies the Conversion Period dependency property.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.IchimokuCloud.BasePeriod">
      <summary>
            Gets or sets the period of Base Period.
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.IchimokuCloud.BasePeriodProperty">
      <summary>
            Identifies the Base Period dependency property.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.IchimokuCloud.LeadingPeriod">
      <summary>
            Gets or sets the period of Leading Period.
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.IchimokuCloud.LeadingPeriodProperty">
      <summary>
            Identifies the Leading Period dependency property.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.IchimokuCloud.LaggingPeriod">
      <summary>
            Gets or sets the period of Lagging Period.
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.IchimokuCloud.LaggingPeriodProperty">
      <summary>
            Identifies the Lagging Period dependency property.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.IchimokuCloud.ConversionLineStyle">
      <summary>
            Gets or sets the Conversion line style.
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.IchimokuCloud.ConversionLineStyleProperty">
      <summary>
            Identifies the ConversionLineStyle dependency property.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.IchimokuCloud.BaseLineStyle">
      <summary>
            Gets or sets the Base line style.
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.IchimokuCloud.BaseLineStyleProperty">
      <summary>
            Identifies the BaseLineStyle dependency property.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.IchimokuCloud.LeadingSpanALineStyle">
      <summary>
            Gets or sets the Leading Span A line style.
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.IchimokuCloud.LeadingSpanALineStyleProperty">
      <summary>
            Identifies the LeadingSpanALineStyle dependency property.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.IchimokuCloud.LeadingSpanBLineStyle">
      <summary>
            Gets or sets the Leading Span B line style.
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.IchimokuCloud.LeadingSpanBLineStyleProperty">
      <summary>
            Identifies the LeadingSpanBLineStyle dependency property.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.IchimokuCloud.LaggingLineStyle">
      <summary>
            Gets or sets the Lagging line style.
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.IchimokuCloud.LaggingLineStyleProperty">
      <summary>
            Identifies the LaggingLineStyle dependency property.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.IchimokuCloud.BearishCloudColor">
      <summary>
            Gets or sets the Bearish Cloud Color
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.IchimokuCloud.BearishCloudColorProperty">
      <summary>
            Identifies the BearishCloudColor dependency property.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.IchimokuCloud.BullishCloudColor">
      <summary>
            Gets or sets the Bullish Cloud Color.
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.IchimokuCloud.BullishCloudColorProperty">
      <summary>
            Identifies the BullishCloudColor dependency property.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.Alligator.JawPeriod">
      <summary>
            Gets or sets the period of Alligator's jaw. 
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.Alligator.JawPeriodProperty">
      <summary>
            Identifies the JawPeriod dependency property.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.Alligator.TeethPeriod">
      <summary>
            Gets or sets the period of Alligator's teeth. 
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.Alligator.TeethPeriodProperty">
      <summary>
            Identifies the TeethPeriod dependency property.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.Alligator.LipsPeriod">
      <summary>
            Gets or sets the period of Alligator's lips. 
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.Alligator.LipsPeriodProperty">
      <summary>
            Identifies the LipsPeriod dependency property.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.Alligator.JawLineStyle">
      <summary>
            Gets or sets the Jaw line style.
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.Alligator.JawLineStyleProperty">
      <summary>
            Identifies the JawLineStyle dependency property.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.Alligator.TeethLineStyle">
      <summary>
            Gets or sets the Teeth line style.
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.Alligator.TeethLineStyleProperty">
      <summary>
            Identifies the TeethLineStyle dependency property.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.Alligator.LipsLineStyle">
      <summary>
            Gets or sets the Lips line style.
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.Alligator.LipsLineStyleProperty">
      <summary>
            Identifies the LipsLineStyle dependency property.
            </summary>
    </member>
    <member name="P:C1.WPF.Chart.Finance.ZigZag.Distance">
      <summary>
            Gets or sets distance between high and low. 
            </summary>
    </member>
    <member name="F:C1.WPF.Chart.Finance.ZigZag.DistanceProperty">
      <summary>
            Identifies the Distance dependency property.
            </summary>
    </member>
  </members>
</doc>