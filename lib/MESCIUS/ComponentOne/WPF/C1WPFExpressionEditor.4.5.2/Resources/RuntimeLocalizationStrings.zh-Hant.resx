<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Arguments.Acos.number" xml:space="preserve">
    <value>一個表示余弦的數字，取值範圍大於等於-1，小於等於1。</value>
    <comment>一个表示余弦的数字，取值范围大于等于-1，小于等于1。</comment>
  </data>
  <data name="Arguments.AddDays.days" xml:space="preserve">
    <value>天， 值可以是負數或正數。</value>
    <comment>天， 值可以是负数或正数。</comment>
  </data>
  <data name="Arguments.AddHours.hours" xml:space="preserve">
    <value>小時， 值可以是負數或正數。</value>
    <comment>小时， 值可以是负数或正数。</comment>
  </data>
  <data name="Arguments.AddMilliSeconds.milliseconds" xml:space="preserve">
    <value>毫秒， 值可以是負數或正數。</value>
    <comment>毫秒， 值可以是负数或正数。</comment>
  </data>
  <data name="Arguments.AddMinutes.minutes" xml:space="preserve">
    <value>分鐘， 值可以是負數或正數。</value>
    <comment>分钟， 值可以是负数或正数。</comment>
  </data>
  <data name="Arguments.AddMonths.months" xml:space="preserve">
    <value>月， 值可以是負數或正數。</value>
    <comment>月， 值可以是负数或正数。</comment>
  </data>
  <data name="Arguments.AddSeconds.seconds" xml:space="preserve">
    <value>秒， 值可以是負數或正數。</value>
    <comment>秒， 值可以是负数或正数。</comment>
  </data>
  <data name="Arguments.AddTicks.ticks" xml:space="preserve">
    <value>時鐘週期，值可以是負數或正數。</value>
    <comment>时钟周期，值可以是负数或正数。</comment>
  </data>
  <data name="Arguments.AddTimeSpan.timespan" xml:space="preserve">
    <value>時間跨度，值可以是負數或正數。</value>
    <comment>时间跨度，值可以是负数或正数。</comment>
  </data>
  <data name="Arguments.AddYears.years" xml:space="preserve">
    <value>年， 值可以是負數或正數。</value>
    <comment>年， 值可以是负数或正数。</comment>
  </data>
  <data name="Arguments.Asin.number" xml:space="preserve">
    <value>一個表示正弦的數字，取值範圍大於等於-1，小於等於1。</value>
    <comment>一个表示正弦的数字，取值范围大于等于-1，小于等于1。</comment>
  </data>
  <data name="Arguments.Atan.number" xml:space="preserve">
    <value>一個表示正切值的數字。</value>
    <comment>一个表示正切值的数字。</comment>
  </data>
  <data name="Arguments.Atan2.x" xml:space="preserve">
    <value>點的 x 坐標。</value>
    <comment>点的 x 坐标。</comment>
  </data>
  <data name="Arguments.Atan2.y" xml:space="preserve">
    <value>點的 y 坐標。</value>
    <comment>点的 y 坐标。</comment>
  </data>
  <data name="Arguments.Ceiling.number" xml:space="preserve">
    <value>一個小數或雙精度浮點數。</value>
    <comment>一个小数或双精度浮点数。</comment>
  </data>
  <data name="Arguments.Concat.value" xml:space="preserve">
    <value>要追加的字符串。</value>
    <comment>要追加的字符串。</comment>
  </data>
  <data name="Arguments.Convert.string" xml:space="preserve">
    <value>一個包含要轉換的值的字符串。</value>
    <comment>一个包含要转换的值的字符串。</comment>
  </data>
  <data name="Arguments.CType.type" xml:space="preserve">
    <value>要返回的對象的類型名稱。</value>
    <comment>要返回的对象的类型名称。</comment>
  </data>
  <data name="Arguments.CType.value" xml:space="preserve">
    <value>用於轉換的對象。</value>
    <comment>用于转换的对象。</comment>
  </data>
  <data name="Arguments.EndsWith.value" xml:space="preserve">
    <value>該字符串與源字符串尾部子字符串進行比較。</value>
    <comment>该字符串与源字符串尾部子字符串进行比较。</comment>
  </data>
  <data name="Arguments.Exp.power" xml:space="preserve">
    <value>底數 e 的指數。</value>
    <comment>底数 e 的指数。</comment>
  </data>
  <data name="Arguments.Floor.number" xml:space="preserve">
    <value>一個小數或雙精度浮點數。</value>
    <comment>一个小数或双精度浮点数。</comment>
  </data>
  <data name="Arguments.Iif.condition" xml:space="preserve">
    <value>條件。</value>
    <comment>条件。</comment>
  </data>
  <data name="Arguments.Iif.resultFalse" xml:space="preserve">
    <value>條件為False時執行的表達式。</value>
    <comment>条件为False时执行的表达式。</comment>
  </data>
  <data name="Arguments.Iif.resultTrue" xml:space="preserve">
    <value>條件為True時執行的表達式。</value>
    <comment>条件为True时执行的表达式。</comment>
  </data>
  <data name="Arguments.Insert.index" xml:space="preserve">
    <value>插入的起始位置。</value>
    <comment>插入的起始位置。</comment>
  </data>
  <data name="Arguments.Insert.value" xml:space="preserve">
    <value>插入的字符串。</value>
    <comment>插入的字符串。</comment>
  </data>
  <data name="Arguments.InStr.start" xml:space="preserve">
    <value>搜索的起始位置。</value>
    <comment>搜索的起始位置。</comment>
  </data>
  <data name="Arguments.Log.base" xml:space="preserve">
    <value>對數的底數。</value>
    <comment>对数的底数。</comment>
  </data>
  <data name="Arguments.Log.number" xml:space="preserve">
    <value>想要計算其對數的正實數。</value>
    <comment>想要计算其对数的正实数。</comment>
  </data>
  <data name="Arguments.LSet.3.length" xml:space="preserve">
    <value>結果字符串的長度，等於原始字符串長度加上其他填充字符的長度。</value>
    <comment>结果字符串的长度，等于原始字符串长度加上其他填充字符的长度。</comment>
  </data>
  <data name="Arguments.LSet.char" xml:space="preserve">
    <value>一個Unicode填充字符。</value>
    <comment>一个Unicode填充字符。</comment>
  </data>
  <data name="Arguments.LSet.length" xml:space="preserve">
    <value>結果字符串的長度，等於原始字符串長度加上空格填充的長度。</value>
    <comment>结果字符串的长度，等于原始字符串长度加上空格填充的长度。</comment>
  </data>
  <data name="Arguments.Mid.length" xml:space="preserve">
    <value>子字符串的長度。</value>
    <comment>子字符串的长度。</comment>
  </data>
  <data name="Arguments.Mid.start" xml:space="preserve">
    <value>指定字符串中子字符串的起始位置。</value>
    <comment>指定字符串中子字符串的起始位置。</comment>
  </data>
  <data name="Arguments.Pow.number" xml:space="preserve">
    <value>雙精度浮點型基數。</value>
    <comment>双精度浮点型基数。</comment>
  </data>
  <data name="Arguments.Pow.power" xml:space="preserve">
    <value>基數乘冪運算的雙精度浮點型指數。</value>
    <comment>基数乘幂运算的双精度浮点型指数。</comment>
  </data>
  <data name="Arguments.RandBetween.max" xml:space="preserve">
    <value>隨機數上限，maxValue必須大於等於minValue。</value>
    <comment>随机数上限，maxValue必须大于等于minValue。</comment>
  </data>
  <data name="Arguments.RandBetween.min" xml:space="preserve">
    <value>隨機數下限 。</value>
    <comment>随机数下限 。</comment>
  </data>
  <data name="Arguments.Remove.count" xml:space="preserve">
    <value>要刪除的字符數。</value>
    <comment>要删除的字符数。</comment>
  </data>
  <data name="Arguments.Remove.start" xml:space="preserve">
    <value>刪除字符的起始位置。</value>
    <comment>删除字符的起始位置。</comment>
  </data>
  <data name="Arguments.Replace.newValue" xml:space="preserve">
    <value>替換oldValue或null的字符串。</value>
    <comment>替换oldValue或null的字符串。</comment>
  </data>
  <data name="Arguments.Replace.oldValue" xml:space="preserve">
    <value>被替換的字符串。</value>
    <comment>被替换的字符串。</comment>
  </data>
  <data name="Arguments.RSet.3.length" xml:space="preserve">
    <value>結果字符串的長度，等於原始字符串長度加上其他填充字符的長度。</value>
    <comment>结果字符串的长度，等于原始字符串长度加上其他填充字符的长度。</comment>
  </data>
  <data name="Arguments.RSet.char" xml:space="preserve">
    <value>一個Unicode填充字符。</value>
    <comment>一个Unicode填充字符。</comment>
  </data>
  <data name="Arguments.RSet.length" xml:space="preserve">
    <value>結果字符串的長度，等於原始字符串長度加上空格填充的長度。</value>
    <comment>结果字符串的长度，等于原始字符串长度加上空格填充的长度。</comment>
  </data>
  <data name="Arguments.Seek.value" xml:space="preserve">
    <value>查詢的字符串。</value>
    <comment>查询的字符串。</comment>
  </data>
  <data name="Arguments.Sign.number" xml:space="preserve">
    <value>有符號數字。</value>
    <comment>有符号数字。</comment>
  </data>
  <data name="Arguments.Specified.angle" xml:space="preserve">
    <value>角度，以弧度表示。</value>
    <comment>角度，以弧度表示。</comment>
  </data>
  <data name="Arguments.Specified.date" xml:space="preserve">
    <value>日期時間。</value>
    <comment>日期时间。</comment>
  </data>
  <data name="Arguments.Specified.date1" xml:space="preserve">
    <value>第一個日期。</value>
    <comment>第一个日期。</comment>
  </data>
  <data name="Arguments.Specified.date2" xml:space="preserve">
    <value>第二個日期。</value>
    <comment>第二个日期。</comment>
  </data>
  <data name="Arguments.Specified.number" xml:space="preserve">
    <value>數字。</value>
    <comment>数字。</comment>
  </data>
  <data name="Arguments.Specified.string" xml:space="preserve">
    <value>字符串。</value>
    <comment>字符串。</comment>
  </data>
  <data name="Arguments.Specified.value" xml:space="preserve">
    <value>對象。</value>
    <comment>对象。</comment>
  </data>
  <data name="Arguments.StartsWith.value" xml:space="preserve">
    <value>要比較的字符串。</value>
    <comment>要比较的字符串。</comment>
  </data>
  <data name="Constants.False" xml:space="preserve">
    <value>假。</value>
    <comment>假。</comment>
  </data>
  <data name="Constants.Nothing" xml:space="preserve">
    <value>空。</value>
    <comment>空。</comment>
  </data>
  <data name="Constants.True" xml:space="preserve">
    <value>真。</value>
    <comment>真。</comment>
  </data>
  <data name="Errors.CanNotFindFinalBracket" xml:space="preserve">
    <value>找不到匹配的括號。</value>
    <comment>找不到匹配的括号。</comment>
  </data>
  <data name="Errors.CanNotFindFinalDateDelimiter" xml:space="preserve">
    <value>找不到日期分隔符('#')。</value>
    <comment>找不到日期分隔符('#')。</comment>
  </data>
  <data name="Errors.CanNotFindFinalQuote" xml:space="preserve">
    <value>找不到引用。</value>
    <comment>找不到引用。</comment>
  </data>
  <data name="Errors.CanNotFindFinalSquareBracket" xml:space="preserve">
    <value>找不到匹配的方括號。</value>
    <comment>找不到匹配的方括号。</comment>
  </data>
  <data name="Errors.ComparisonError" xml:space="preserve">
    <value>比較值時出錯。</value>
    <comment>比较值时出错。</comment>
  </data>
  <data name="Errors.ExpressionExpected" xml:space="preserve">
    <value>表達式錯誤。</value>
    <comment>表达式错误。</comment>
  </data>
  <data name="Errors.FieldOrVariableDidNotFound" xml:space="preserve">
    <value>找不到字段或變量。</value>
    <comment>找不到字段或变量。</comment>
  </data>
  <data name="Errors.IdentifierExpected" xml:space="preserve">
    <value>標識符錯誤。</value>
    <comment>标识符错误。</comment>
  </data>
  <data name="Errors.Message" xml:space="preserve">
    <value>欄 {0}：{1}</value>
    <comment>列 {0}：{1}</comment>
  </data>
  <data name="Errors.SyntaxError" xml:space="preserve">
    <value>語法錯誤。</value>
    <comment>语法错误。</comment>
  </data>
  <data name="Errors.TooFewParameters" xml:space="preserve">
    <value>缺少參數。</value>
    <comment>缺少参数。</comment>
  </data>
  <data name="Errors.TooManyParameters" xml:space="preserve">
    <value>太多參數。</value>
    <comment>太多参数。</comment>
  </data>
  <data name="Errors.UnbalancedParenthesis" xml:space="preserve">
    <value>括號不匹配。</value>
    <comment>括号不匹配。</comment>
  </data>
  <data name="Errors.UnexpectedError" xml:space="preserve">
    <value>意外的錯誤。</value>
    <comment>意外的错误。</comment>
  </data>
  <data name="Errors.UnexpectedIdentifier" xml:space="preserve">
    <value>意外的標識符。</value>
    <comment>意外的标识符。</comment>
  </data>
  <data name="Functions.Abs()" xml:space="preserve">
    <value>返回給定數值的絕對值。</value>
    <comment>返回给定数值的绝对值。</comment>
  </data>
  <data name="Functions.Acos()" xml:space="preserve">
    <value>返回一個弧度的反餘旋。</value>
    <comment>返回一个弧度的反余旋。</comment>
  </data>
  <data name="Functions.AddDays(,)" xml:space="preserve">
    <value>返回一個新的時間，它是在一個時間上添加天數。</value>
    <comment>返回一个新的时间，它是在一个时间上添加天数。</comment>
  </data>
  <data name="Functions.AddHours(,)" xml:space="preserve">
    <value>返回一個新的時間，它是在一個時間上添加小時數。</value>
    <comment>返回一个新的时间，它是在一个时间上添加小时数。</comment>
  </data>
  <data name="Functions.AddMilliSeconds(,)" xml:space="preserve">
    <value>返回一個新的時間，它是在一個時間上添加微秒數。</value>
    <comment>返回一个新的时间，它是在一个时间上添加微秒数。</comment>
  </data>
  <data name="Functions.AddMinutes(,)" xml:space="preserve">
    <value>返回一個新的時間，它是在一個時間上添加分鐘數。</value>
    <comment>返回一个新的时间，它是在一个时间上添加分钟数。</comment>
  </data>
  <data name="Functions.AddMonths(,)" xml:space="preserve">
    <value>返回一個新的時間，它是在一個時間上添加月數。</value>
    <comment>返回一个新的时间，它是在一个时间上添加月数。</comment>
  </data>
  <data name="Functions.AddSeconds(,)" xml:space="preserve">
    <value>返回一個新的時間，它是在一個時間上添加秒數。</value>
    <comment>返回一个新的时间，它是在一个时间上添加秒数。</comment>
  </data>
  <data name="Functions.AddTicks(,)" xml:space="preserve">
    <value>返回一個新的時間，它是在一個時間上添加時鐘週期。</value>
    <comment>返回一个新的时间，它是在一个时间上添加时钟周期。</comment>
  </data>
  <data name="Functions.AddTimeSpan(,)" xml:space="preserve">
    <value>返回一個新的時間，它是在一個時間上添加時間段。</value>
    <comment>返回一个新的时间，它是在一个时间上添加时间段。</comment>
  </data>
  <data name="Functions.AddYears(,)" xml:space="preserve">
    <value>返回一個新的時間，它是在一個時間上添加年份數。</value>
    <comment>返回一个新的时间，它是在一个时间上添加年份数。</comment>
  </data>
  <data name="Functions.Asc()" xml:space="preserve">
    <value>返回字符表達式最左側字符的ASCII碼值。</value>
    <comment>返回字符表达式最左侧字符的ASCII码值。</comment>
  </data>
  <data name="Functions.Asin()" xml:space="preserve">
    <value>返回數字的反正弦值。</value>
    <comment>返回数字的反正弦值。</comment>
  </data>
  <data name="Functions.Atan()" xml:space="preserve">
    <value>返回數字的反正切值。</value>
    <comment>返回数字的反正切值。</comment>
  </data>
  <data name="Functions.Atan2(,)" xml:space="preserve">
    <value>返回給定的2個數字的反正切值。</value>
    <comment>返回给定的2个数字的反正切值。</comment>
  </data>
  <data name="Functions.Average()" xml:space="preserve">
    <value>返回一組數據（或枚舉）的算術平均值。</value>
    <comment>返回一组数据（或枚举）的算术平均值。</comment>
  </data>
  <data name="Functions.CBool()" xml:space="preserve">
    <value>將字符串形式的邏輯值轉換為System.Boolean對象，如果字符串不等於“True”或“False”，則會引發異常。</value>
    <comment>将字符串形式的逻辑值转换为System.Boolean对象，如果字符串不等于“True”或“False”，则会引发异常。</comment>
  </data>
  <data name="Functions.CByte()" xml:space="preserve">
    <value>將字符串形式的數字轉換為System.Byte對象。</value>
    <comment>将字符串形式的数字转换为System.Byte对象。</comment>
  </data>
  <data name="Functions.CChar()" xml:space="preserve">
    <value>將指定字符串的值轉換為其等效的Unicode字符。</value>
    <comment>将指定字符串的值转换为其等效的Unicode字符。</comment>
  </data>
  <data name="Functions.CDate()" xml:space="preserve">
    <value>將字符串形式的日期和時間轉換為System.DateTime對象。</value>
    <comment>将字符串形式的日期和时间转换为System.DateTime对象。</comment>
  </data>
  <data name="Functions.CDbl()" xml:space="preserve">
    <value>將字符串形式的數字轉換為雙精度浮點數。</value>
    <comment>将字符串形式的数字转换为双精度浮点数。</comment>
  </data>
  <data name="Functions.CDec()" xml:space="preserve">
    <value>將字符串形式的數字轉換為System.Decimal對象。</value>
    <comment>将字符串形式的数字转换为System.Decimal对象。</comment>
  </data>
  <data name="Functions.Ceiling()" xml:space="preserve">
    <value>返回參數向上取整的值。</value>
    <comment>返回参数向上取整的值。</comment>
  </data>
  <data name="Functions.Chr()" xml:space="preserve">
    <value>將ASCII碼轉換為字符。</value>
    <comment>将ASCII码转换为字符。</comment>
  </data>
  <data name="Functions.CInt()" xml:space="preserve">
    <value>將字符串形式的數字轉換為32位有符號整數。</value>
    <comment>将字符串形式的数字转换为32位有符号整数。</comment>
  </data>
  <data name="Functions.CLng()" xml:space="preserve">
    <value>將字符串形式的數字轉換為64位有符號整數。</value>
    <comment>将字符串形式的数字转换为64位有符号整数。</comment>
  </data>
  <data name="Functions.CObj()" xml:space="preserve">
    <value>返回指定的元素為System.Object對象。</value>
    <comment>返回指定的元素为System.Object对象。</comment>
  </data>
  <data name="Functions.Concat(,)" xml:space="preserve">
    <value>返回一個字符串，它是連接兩個或多個字符串值的結果。</value>
    <comment>返回一个字符串，它是连接两个或多个字符串值的结果。</comment>
  </data>
  <data name="Functions.Contains(,)" xml:space="preserve">
    <value>返回字符串中是否包含指定的子字符串。</value>
    <comment>返回字符串中是否包含指定的子字符串。</comment>
  </data>
  <data name="Functions.Cos()" xml:space="preserve">
    <value>返回指定角度的餘弦值。</value>
    <comment>返回指定角度的余弦值。</comment>
  </data>
  <data name="Functions.Cosh()" xml:space="preserve">
    <value>返回指定角度的雙曲餘弦。</value>
    <comment>返回指定角度的双曲余弦。</comment>
  </data>
  <data name="Functions.Count()" xml:space="preserve">
    <value>獲取一組數據中元素的數量。</value>
    <comment>获取一组数据中元素的数量。</comment>
  </data>
  <data name="Functions.CSByte()" xml:space="preserve">
    <value>將字符串形式的數字轉換為8位有符號整數。</value>
    <comment>将字符串形式的数字转换为8位有符号整数。</comment>
  </data>
  <data name="Functions.CShort()" xml:space="preserve">
    <value>將字符串形式的數字轉換為16位有符號整數。</value>
    <comment>将字符串形式的数字转换为16位有符号整数。</comment>
  </data>
  <data name="Functions.CSng()" xml:space="preserve">
    <value>將字符串形式的數字轉換為單精度浮點數。</value>
    <comment>将字符串形式的数字转换为单精度浮点数。</comment>
  </data>
  <data name="Functions.CStr()" xml:space="preserve">
    <value>計算表達式的結果並返回字符串。</value>
    <comment>计算表达式的结果并返回字符串。</comment>
  </data>
  <data name="Functions.CType(,)" xml:space="preserve">
    <value>返回指定類型的對象。</value>
    <comment>返回指定类型的对象。</comment>
  </data>
  <data name="Functions.CUint()" xml:space="preserve">
    <value>將字符串形式的數字轉換為32位無符號整數。</value>
    <comment>将字符串形式的数字转换为32位无符号整数。</comment>
  </data>
  <data name="Functions.CULong()" xml:space="preserve">
    <value>將字符串形式的數字轉換為64位無符號整數。</value>
    <comment>将字符串形式的数字转换为64位无符号整数。</comment>
  </data>
  <data name="Functions.CUShort()" xml:space="preserve">
    <value>將字符串形式的數字轉換為16位無符號整數。</value>
    <comment>将字符串形式的数字转换为16位无符号整数。</comment>
  </data>
  <data name="Functions.DateDiffDay(,)" xml:space="preserve">
    <value>計算兩個不為空日期之間的天數。</value>
    <comment>计算两个不为空日期之间的天数。</comment>
  </data>
  <data name="Functions.DateDiffHour(,)" xml:space="preserve">
    <value>計算兩個不為空日期之間的小時數。</value>
    <comment>计算两个不为空日期之间的小时数。</comment>
  </data>
  <data name="Functions.DateDiffMilliSecond(,)" xml:space="preserve">
    <value>計算兩個不為空日期之間的毫秒數。</value>
    <comment>计算两个不为空日期之间的毫秒数。</comment>
  </data>
  <data name="Functions.DateDiffMinute(,)" xml:space="preserve">
    <value>計算兩個不為空日期之間的分鐘數。</value>
    <comment>计算两个不为空日期之间的分钟数。</comment>
  </data>
  <data name="Functions.DateDiffSecond(,)" xml:space="preserve">
    <value>計算兩個不為空日期之間的秒數。</value>
    <comment>计算两个不为空日期之间的秒数。</comment>
  </data>
  <data name="Functions.DateDiffTick(,)" xml:space="preserve">
    <value>計算兩個不為空日期之間的時鐘數。</value>
    <comment>计算两个不为空日期之间的时钟数。</comment>
  </data>
  <data name="Functions.EndsWith(,)" xml:space="preserve">
    <value>比較字符串結尾是否與指定字符串匹配。</value>
    <comment>比较字符串结尾是否与指定字符串匹配。</comment>
  </data>
  <data name="Functions.Exp()" xml:space="preserve">
    <value>返回e（自然對數的基數）的n次方。</value>
    <comment>返回e（自然对数的基数）的n次方。</comment>
  </data>
  <data name="Functions.First()" xml:space="preserve">
    <value>返回一組數據的第一個元素。</value>
    <comment>返回一组数据的第一个元素。</comment>
  </data>
  <data name="Functions.Floor()" xml:space="preserve">
    <value>返回參數向下取整的值。</value>
    <comment>返回参数向下取整的值。</comment>
  </data>
  <data name="Functions.GetDate()" xml:space="preserve">
    <value>獲取System.DateTime值的日期。</value>
    <comment>获取System.DateTime值的日期。</comment>
  </data>
  <data name="Functions.GetDay()" xml:space="preserve">
    <value>獲取System.DateTime值的月份中的日數。</value>
    <comment>获取System.DateTime值的月份中的日数。</comment>
  </data>
  <data name="Functions.GetDayOfWeek()" xml:space="preserve">
    <value>獲取System.DateTime值的星期數。</value>
    <comment>获取System.DateTime值的星期数。</comment>
  </data>
  <data name="Functions.GetDayOfYear()" xml:space="preserve">
    <value>獲取System.DateTime值的年中的第幾天。</value>
    <comment>获取System.DateTime值的年中的第几天。</comment>
  </data>
  <data name="Functions.GetHour()" xml:space="preserve">
    <value>獲取System.DateTime值中的小時。</value>
    <comment>获取System.DateTime值中的小时。</comment>
  </data>
  <data name="Functions.GetMilliSecond()" xml:space="preserve">
    <value>獲取System.DateTime值中的毫秒。</value>
    <comment>获取System.DateTime值中的毫秒。</comment>
  </data>
  <data name="Functions.GetMinute()" xml:space="preserve">
    <value>獲取System.DateTime值中的分鐘。</value>
    <comment>获取System.DateTime值中的分钟。</comment>
  </data>
  <data name="Functions.GetMonth()" xml:space="preserve">
    <value>獲取System.DateTime值中的月份。</value>
    <comment>获取System.DateTime值中的月份。</comment>
  </data>
  <data name="Functions.GetSecond()" xml:space="preserve">
    <value>獲取System.DateTime值中的秒。</value>
    <comment>获取System.DateTime值中的秒。</comment>
  </data>
  <data name="Functions.GetTimeOfDay()" xml:space="preserve">
    <value>獲取System.DateTime值中的時間。</value>
    <comment>获取System.DateTime值中的时间。</comment>
  </data>
  <data name="Functions.GetYear()" xml:space="preserve">
    <value>獲取System.DateTime值中的年。</value>
    <comment>获取System.DateTime值中的年。</comment>
  </data>
  <data name="Functions.Iif(,,)" xml:space="preserve">
    <value>根據條件返回兩個表達式之一的值。</value>
    <comment>根据条件返回两个表达式之一的值。</comment>
  </data>
  <data name="Functions.Insert(,,)" xml:space="preserve">
    <value>返回一個新的字符串，在源字符串中指定的索引位置插入指定的字符串。</value>
    <comment>返回一个新的字符串，在源字符串中指定的索引位置插入指定的字符串。</comment>
  </data>
  <data name="Functions.InStr(,)" xml:space="preserve">
    <value>在源字符串中查找子字符串並返回子字符串的起始位置。</value>
    <comment>在源字符串中查找子字符串并返回子字符串的起始位置。</comment>
  </data>
  <data name="Functions.InStr(,,)" xml:space="preserve">
    <value>在源字符串的某個位置開始查找子字符串並返回子字符串的起始位置。</value>
    <comment>在源字符串的某个位置开始查找子字符串并返回子字符串的起始位置。</comment>
  </data>
  <data name="Functions.IsNull()" xml:space="preserve">
    <value>如果指定的值為NULL，則返回True。</value>
    <comment>如果指定的值为NULL，则返回True。</comment>
  </data>
  <data name="Functions.Last()" xml:space="preserve">
    <value>返回一組數據的最後一個元素。</value>
    <comment>返回一组数据的最后一个元素。</comment>
  </data>
  <data name="Functions.LCase()" xml:space="preserve">
    <value>將字符串中大寫字符轉換為小寫字符。</value>
    <comment>将字符串中大写字符转换为小写字符。</comment>
  </data>
  <data name="Functions.Len()" xml:space="preserve">
    <value>返回字符串表達式的長度。</value>
    <comment>返回字符串表达式的长度。</comment>
  </data>
  <data name="Functions.Log()" xml:space="preserve">
    <value>返回指定數字的自然對數。</value>
    <comment>返回指定数字的自然对数。</comment>
  </data>
  <data name="Functions.Log(,)" xml:space="preserve">
    <value>根據給定基數返回指定數字的對數。</value>
    <comment>根据给定基数返回指定数字的对数。</comment>
  </data>
  <data name="Functions.Log10()" xml:space="preserve">
    <value>返回以10為底的對數。</value>
    <comment>返回以10为底的对数。</comment>
  </data>
  <data name="Functions.LSet(,)" xml:space="preserve">
    <value>返回一個指定長度的新字符串，其中當前字符串的開頭用空格填充。</value>
    <comment>返回一个指定长度的新字符串，其中当前字符串的开头用空格填充。</comment>
  </data>
  <data name="Functions.LSet(,,)" xml:space="preserve">
    <value>返回一個指定長度的新字符串，其中當前字符串的開頭用指定字符填充。</value>
    <comment>返回一个指定长度的新字符串，其中当前字符串的开头用指定字符填充。</comment>
  </data>
  <data name="Functions.Max()" xml:space="preserve">
    <value>返回一組數據中的最大值。</value>
    <comment>返回一组数据中的最大值。</comment>
  </data>
  <data name="Functions.Mid(,)" xml:space="preserve">
    <value>返回字符串中從指定位置後的字符串。</value>
    <comment>返回字符串中从指定位置后的字符串。</comment>
  </data>
  <data name="Functions.Mid(,,)" xml:space="preserve">
    <value>返回字符串中從指定位置後指定長度的字符串。</value>
    <comment>返回字符串中从指定位置后指定长度的字符串。</comment>
  </data>
  <data name="Functions.Min()" xml:space="preserve">
    <value>返回一組數據中的最小值。</value>
    <comment>返回一组数据中的最小值。</comment>
  </data>
  <data name="Functions.Now()" xml:space="preserve">
    <value>獲取一個System.DateTime對象，該對象設置為此計算機上的當前日期和時間，以本地時間表示。</value>
    <comment>获取一个System.DateTime对象，该对象设置为此计算机上的当前日期和时间，以本地时间表示。</comment>
  </data>
  <data name="Functions.Pow(,)" xml:space="preserve">
    <value>返回數字乘冪的結果。</value>
    <comment>返回数字乘幂的结果。</comment>
  </data>
  <data name="Functions.Rand()" xml:space="preserve">
    <value>返回非負數隨機數。</value>
    <comment>返回非负数随机数。</comment>
  </data>
  <data name="Functions.RandBetween()" xml:space="preserve">
    <value>返回指定範圍內的隨機數。</value>
    <comment>返回指定范围内的随机数。</comment>
  </data>
  <data name="Functions.Remove(,)" xml:space="preserve">
    <value>刪除字符串中所有指定字符。</value>
    <comment>删除字符串中所有指定字符。</comment>
  </data>
  <data name="Functions.Remove(,,)" xml:space="preserve">
    <value>從指定位置開始刪除字符串中所有指定字符。</value>
    <comment>从指定位置开始删除字符串中所有指定字符。</comment>
  </data>
  <data name="Functions.Replace(,,)" xml:space="preserve">
    <value>將源字符串中需要被替換的字符串替換為指定的字符串。</value>
    <comment>将源字符串中需要被替换的字符串替换为指定的字符串。</comment>
  </data>
  <data name="Functions.RSet(,)" xml:space="preserve">
    <value>返回一個指定長度的新字符串，其中當前字符串的末尾用空格填充。</value>
    <comment>返回一个指定长度的新字符串，其中当前字符串的末尾用空格填充。</comment>
  </data>
  <data name="Functions.RSet(,,)" xml:space="preserve">
    <value>返回一個指定長度的新字符串，其中當前字符串的末尾用指定的字符填充。</value>
    <comment>返回一个指定长度的新字符串，其中当前字符串的末尾用指定的字符填充。</comment>
  </data>
  <data name="Functions.Sign()" xml:space="preserve">
    <value>返回表示數字符號的整數值。</value>
    <comment>返回表示数字符号的整数值。</comment>
  </data>
  <data name="Functions.Sin()" xml:space="preserve">
    <value>返回指定角度的正弦值。</value>
    <comment>返回指定角度的正弦值。</comment>
  </data>
  <data name="Functions.Sinh()" xml:space="preserve">
    <value>返回指定角度的雙曲正弦。</value>
    <comment>返回指定角度的双曲正弦。</comment>
  </data>
  <data name="Functions.Sqrt()" xml:space="preserve">
    <value>返回指定數字的平方根。</value>
    <comment>返回指定数字的平方根。</comment>
  </data>
  <data name="Functions.StartsWith(,)" xml:space="preserve">
    <value>比較字符串開始是否與指定字符串匹配。</value>
    <comment>比较字符串开始是否与指定字符串匹配。</comment>
  </data>
  <data name="Functions.StrReverse()" xml:space="preserve">
    <value>字符串反轉。</value>
    <comment>字符串反转。</comment>
  </data>
  <data name="Functions.Sum()" xml:space="preserve">
    <value>返回一組數據的和。</value>
    <comment>返回一组数据的和。</comment>
  </data>
  <data name="Functions.Tan()" xml:space="preserve">
    <value>返回指定角度的切線。</value>
    <comment>返回指定角度的切线。</comment>
  </data>
  <data name="Functions.Tanh()" xml:space="preserve">
    <value>返回指定角度的雙曲正切值。</value>
    <comment>返回指定角度的双曲正切值。</comment>
  </data>
  <data name="Functions.Today()" xml:space="preserve">
    <value>獲取當前日期。</value>
    <comment>获取当前日期。</comment>
  </data>
  <data name="Functions.Trim()" xml:space="preserve">
    <value>移除字符串中的空格或其他指定的字符。</value>
    <comment>移除字符串中的空格或其他指定的字符。</comment>
  </data>
  <data name="Functions.UCase()" xml:space="preserve">
    <value>將字符串中小寫字符轉換為大寫字符。</value>
    <comment>将字符串中小写字符转换为大写字符。</comment>
  </data>
  <data name="Functions.UtcNow()" xml:space="preserve">
    <value>獲取本地當前日期和時間的System.DateTime對象，以協調世界時（UTC）表示。</value>
    <comment>获取本地当前日期和时间的System.DateTime对象，以协调世界时（UTC）表示。</comment>
  </data>
  <data name="Operators.And" xml:space="preserve">
    <value>邏輯與。</value>
    <comment>逻辑与。</comment>
  </data>
  <data name="Operators.Concat" xml:space="preserve">
    <value>連接字符串。</value>
    <comment>连接字符串。</comment>
  </data>
  <data name="Operators.Divide" xml:space="preserve">
    <value>除。</value>
    <comment>除。</comment>
  </data>
  <data name="Operators.Equal" xml:space="preserve">
    <value>等於。</value>
    <comment>等于。</comment>
  </data>
  <data name="Operators.GreaterOrEqual" xml:space="preserve">
    <value>大於等於。</value>
    <comment>大于等于。</comment>
  </data>
  <data name="Operators.GreaterThan" xml:space="preserve">
    <value>大於。</value>
    <comment>大于。</comment>
  </data>
  <data name="Operators.LessOrEqual" xml:space="preserve">
    <value>小於等於。</value>
    <comment>小于等于。</comment>
  </data>
  <data name="Operators.LessThan" xml:space="preserve">
    <value>小於。</value>
    <comment>小于。</comment>
  </data>
  <data name="Operators.Minus" xml:space="preserve">
    <value>減。</value>
    <comment>减。</comment>
  </data>
  <data name="Operators.Modulus" xml:space="preserve">
    <value>取模。</value>
    <comment>取模。</comment>
  </data>
  <data name="Operators.Multiply" xml:space="preserve">
    <value>乘。</value>
    <comment>乘。</comment>
  </data>
  <data name="Operators.Not" xml:space="preserve">
    <value>非。</value>
    <comment>非。</comment>
  </data>
  <data name="Operators.NotEqual" xml:space="preserve">
    <value>不等於。</value>
    <comment>不等于。</comment>
  </data>
  <data name="Operators.Or" xml:space="preserve">
    <value>邏輯或。</value>
    <comment>逻辑或。</comment>
  </data>
  <data name="Operators.Plus" xml:space="preserve">
    <value>加。</value>
    <comment>加。</comment>
  </data>
  <data name="Arguments.Round.digits" xml:space="preserve">
    <value>The number of fractional digits in the return value.</value>
    <comment>The number of fractional digits in the return value.</comment>
  </data>
  <data name="Arguments.Round.value" xml:space="preserve">
    <value>A double-precision floating-point number to be rounded.</value>
    <comment>A double-precision floating-point number to be rounded.</comment>
  </data>
  <data name="Functions.Round()" xml:space="preserve">
    <value>Rounds a double-precision floating-point value to a specified number of fractional digits.</value>
    <comment>Rounds a double-precision floating-point value to a specified number of fractional digits.</comment>
  </data>
  <data name="Categories.Aggregate" xml:space="preserve">
    <value>Aggregate</value>
    <comment>Aggregate</comment>
  </data>
  <data name="Categories.Constants" xml:space="preserve">
    <value>Constants</value>
    <comment>Constants</comment>
  </data>
  <data name="Categories.Convert" xml:space="preserve">
    <value>Convert</value>
    <comment>Convert</comment>
  </data>
  <data name="Categories.DateTime" xml:space="preserve">
    <value>DateTime</value>
    <comment>DateTime</comment>
  </data>
  <data name="Categories.Fields" xml:space="preserve">
    <value>Fields</value>
    <comment>Fields</comment>
  </data>
  <data name="Categories.Functions" xml:space="preserve">
    <value>Functions</value>
    <comment>Functions</comment>
  </data>
  <data name="Categories.Logical" xml:space="preserve">
    <value>Logical</value>
    <comment>Logical</comment>
  </data>
  <data name="Categories.Math" xml:space="preserve">
    <value>Math</value>
    <comment>Math</comment>
  </data>
  <data name="Categories.Operators" xml:space="preserve">
    <value>Operators</value>
    <comment>Operators</comment>
  </data>
  <data name="Categories.Text" xml:space="preserve">
    <value>Text</value>
    <comment>Text</comment>
  </data>
</root>