<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Arguments.Acos.number" xml:space="preserve">
    <value>コサイン（余弦）を表す数値。-1～1 の範囲内でなければなりません。</value>
    <comment>a number representing a cosine, where it must be greater than or equal to -1, but less than or equal to 1.</comment>
  </data>
  <data name="Arguments.AddDays.days" xml:space="preserve">
    <value>整数部と小数部から成る日数。value パラメータは正または負の値を取ることができます。</value>
    <comment>a number of whole and fractional days. The value parameter can be negative or positive.</comment>
  </data>
  <data name="Arguments.AddHours.hours" xml:space="preserve">
    <value>整数部と小数部から成る時間数。value パラメータは正または負の値を取ることができます。</value>
    <comment>a number of whole and fractional hours. The value parameter can be negative or positive.</comment>
  </data>
  <data name="Arguments.AddMilliSeconds.milliseconds" xml:space="preserve">
    <value>整数部と小数部から成るミリ秒数。value パラメータは正または負の値を取ることができます。</value>
    <comment>a number of whole and fractional milliseconds. The value parameter can be negative or positive.</comment>
  </data>
  <data name="Arguments.AddMinutes.minutes" xml:space="preserve">
    <value>整数部と小数部から成る分数。value パラメータは正または負の値を取ることができます。</value>
    <comment>a number of whole and fractional minutes. The value parameter can be negative or positive.</comment>
  </data>
  <data name="Arguments.AddMonths.months" xml:space="preserve">
    <value>整数部と小数部から成る月数。value パラメータは正または負の値を取ることができます。</value>
    <comment>a number of whole and fractional months. The value parameter can be negative or positive.</comment>
  </data>
  <data name="Arguments.AddSeconds.seconds" xml:space="preserve">
    <value>整数部と小数部から成る秒数。value パラメータは正または負の値を取ることができます。</value>
    <comment>a number of whole and fractional seconds. The value parameter can be negative or positive.</comment>
  </data>
  <data name="Arguments.AddTicks.ticks" xml:space="preserve">
    <value>整数部と小数部から成るタイマー刻み数。value パラメータは正または負の値を取ることができます。</value>
    <comment>a number of whole and fractional ticks. The value parameter can be negative or positive.</comment>
  </data>
  <data name="Arguments.AddTimeSpan.timespan" xml:space="preserve">
    <value>整数部と小数部から成る時間スパン数。value パラメータは正または負の値を取ることができます。</value>
    <comment>a number of whole and fractional time span. The value parameter can be negative or positive.</comment>
  </data>
  <data name="Arguments.AddYears.years" xml:space="preserve">
    <value>整数部と小数部から成る年数。value パラメータは正または負の値を取ることができます。</value>
    <comment>a number of whole and fractional years. The value parameter can be negative or positive.</comment>
  </data>
  <data name="Arguments.Asin.number" xml:space="preserve">
    <value>サイン（正弦）を表す数値。-1～1 の範囲内でなければなりません。</value>
    <comment>a number representing a sine, where it must be greater than or equal to -1, but less than or equal to 1.</comment>
  </data>
  <data name="Arguments.Atan.number" xml:space="preserve">
    <value>タンジェント（正接）を表す数値。</value>
    <comment>a number representing a tangent.</comment>
  </data>
  <data name="Arguments.Atan2.x" xml:space="preserve">
    <value>ポイントの x 座標。</value>
    <comment>the x coordinate of a point.</comment>
  </data>
  <data name="Arguments.Atan2.y" xml:space="preserve">
    <value>ポイントの y 座標。</value>
    <comment>the y coordinate of a point.</comment>
  </data>
  <data name="Arguments.Ceiling.number" xml:space="preserve">
    <value>指定される 10 進数または倍精度浮動小数点数。</value>
    <comment>a specified decimal or double-precision floating-point number.</comment>
  </data>
  <data name="Arguments.Concat.value" xml:space="preserve">
    <value>追加する文字列。</value>
    <comment>the string to append.</comment>
  </data>
  <data name="Arguments.Convert.string" xml:space="preserve">
    <value>変換する値を含む文字列。</value>
    <comment>a string containing the value to convert.</comment>
  </data>
  <data name="Arguments.CType.type" xml:space="preserve">
    <value>戻り値のオブジェクトの型名。</value>
    <comment>the type name of object to return.</comment>
  </data>
  <data name="Arguments.CType.value" xml:space="preserve">
    <value>指定された変換対象のオブジェクト。</value>
    <comment>the specified object for conversion.</comment>
  </data>
  <data name="Arguments.EndsWith.value" xml:space="preserve">
    <value>このインスタンスの最後にある部分文字列と比較する文字列。</value>
    <comment>the string to compare to the substring at the end of this instance.</comment>
  </data>
  <data name="Arguments.Exp.power" xml:space="preserve">
    <value>指数を指定する数字。</value>
    <comment>a number specifying a power.</comment>
  </data>
  <data name="Arguments.Floor.number" xml:space="preserve">
    <value>指定される 10 進数または倍精度浮動小数点数。</value>
    <comment>a specified decimal or double-precision floating-point number.</comment>
  </data>
  <data name="Arguments.Iif.condition" xml:space="preserve">
    <value>指定される条件。</value>
    <comment>the specified condition.</comment>
  </data>
  <data name="Arguments.Iif.resultFalse" xml:space="preserve">
    <value>条件の結果が False の場合に実行される式。</value>
    <comment>the expression which will be executed if the result of the condition is False.</comment>
  </data>
  <data name="Arguments.Iif.resultTrue" xml:space="preserve">
    <value>条件の結果が True の場合に実行される式。</value>
    <comment>the expression which will be executed if the result of the condition is True.</comment>
  </data>
  <data name="Arguments.Insert.index" xml:space="preserve">
    <value>このインスタンス内の挿入が開始される位置。</value>
    <comment>the position in this instance where insertion begins.</comment>
  </data>
  <data name="Arguments.Insert.value" xml:space="preserve">
    <value>挿入する文字列。</value>
    <comment>the string to insert.</comment>
  </data>
  <data name="Arguments.InStr.start" xml:space="preserve">
    <value>検索開始位置。</value>
    <comment>the search starting position.</comment>
  </data>
  <data name="Arguments.Log.base" xml:space="preserve">
    <value>対数の底。</value>
    <comment>the base of the logarithm.</comment>
  </data>
  <data name="Arguments.Log.number" xml:space="preserve">
    <value>対数を求める数。</value>
    <comment>a number whose logarithm is to be found.</comment>
  </data>
  <data name="Arguments.LSet.3.length" xml:space="preserve">
    <value>結果の文字列の文字数。元の文字数に追加のパディング文字を加えたものに等しくなります。</value>
    <comment>the number of characters in the resulting string, equal to the number of original characters plus any additional padding characters.</comment>
  </data>
  <data name="Arguments.LSet.char" xml:space="preserve">
    <value>Unicode パディング文字。</value>
    <comment>a Unicode padding character.</comment>
  </data>
  <data name="Arguments.LSet.length" xml:space="preserve">
    <value>結果の文字列の文字数。元の文字数に追加のスペースを加えたものに等しくなります。</value>
    <comment>the number of characters in the resulting string, equal to the number of original characters plus any additional spaces.</comment>
  </data>
  <data name="Arguments.Mid.length" xml:space="preserve">
    <value>部分文字列内の文字数。</value>
    <comment>the number of characters in the substring.</comment>
  </data>
  <data name="Arguments.Mid.start" xml:space="preserve">
    <value>指定された文字列内の部分文字列のゼロから始まる文字位置。</value>
    <comment>the zero-based starting character position of a substring in the specified string.</comment>
  </data>
  <data name="Arguments.Pow.number" xml:space="preserve">
    <value>べき乗の底となる倍精度浮動小数点数。</value>
    <comment>a double-precision floating-point number to be raised to a power.</comment>
  </data>
  <data name="Arguments.Pow.power" xml:space="preserve">
    <value>べき乗の指数となる倍精度浮動小数点数。</value>
    <comment>a double-precision floating-point number that specifies a power.</comment>
  </data>
  <data name="Arguments.RandBetween.max" xml:space="preserve">
    <value>返される乱数の排他的な上限。maxValue は minValue 以上でなければなりません。</value>
    <comment>the exclusive upper bound of the random number returned. maxValue must be greater than or equal to minValue.</comment>
  </data>
  <data name="Arguments.RandBetween.min" xml:space="preserve">
    <value>返される乱数の包括的な下限。</value>
    <comment>the inclusive lower bound of the random number returned.</comment>
  </data>
  <data name="Arguments.Remove.count" xml:space="preserve">
    <value>削除する文字数。</value>
    <comment>the number of characters to delete.</comment>
  </data>
  <data name="Arguments.Remove.start" xml:space="preserve">
    <value>文字の削除を開始するゼロベースの位置。</value>
    <comment>the zero-based position to begin deleting characters.</comment>
  </data>
  <data name="Arguments.Replace.oldValue" xml:space="preserve">
    <value>置き換える文字列。</value>
    <comment>the string to replace.</comment>
  </data>
  <data name="Arguments.Replace.newValue" xml:space="preserve">
    <value>oldValue を置き換える文字列または null。</value>
    <comment>the string that replaces oldValue, or null.</comment>
  </data>
  <data name="Arguments.RSet.3.length" xml:space="preserve">
    <value>結果の文字列の文字数。元の文字数に追加のパディング文字を加えたものに等しくなります。</value>
    <comment>the number of characters in the resulting string, equal to the number of original characters plus any additional padding characters.</comment>
  </data>
  <data name="Arguments.RSet.char" xml:space="preserve">
    <value>Unicode パディング文字。</value>
    <comment>a Unicode padding character.</comment>
  </data>
  <data name="Arguments.RSet.length" xml:space="preserve">
    <value>結果の文字列の文字数。元の文字数に追加のスペースを加えたものに等しくなります。</value>
    <comment>the number of characters in the resulting string, equal to the number of original characters plus any additional spaces.</comment>
  </data>
  <data name="Arguments.Seek.value" xml:space="preserve">
    <value>検索する文字列。</value>
    <comment>the string to seek.</comment>
  </data>
  <data name="Arguments.Sign.number" xml:space="preserve">
    <value>符号付き数値。</value>
    <comment>a signed number.</comment>
  </data>
  <data name="Arguments.Specified.angle" xml:space="preserve">
    <value>角度（ラジアン単位）。</value>
    <comment>an angle, measured in radians.</comment>
  </data>
  <data name="Arguments.Specified.date" xml:space="preserve">
    <value>指定された Date-Time。</value>
    <comment>the specified Date-Time.</comment>
  </data>
  <data name="Arguments.Specified.date1" xml:space="preserve">
    <value>最初の日付。</value>
    <comment>the first date.</comment>
  </data>
  <data name="Arguments.Specified.date2" xml:space="preserve">
    <value>２番目の日付。</value>
    <comment>the second date.</comment>
  </data>
  <data name="Arguments.Specified.number" xml:space="preserve">
    <value>指定された数値。</value>
    <comment>the specified number.</comment>
  </data>
  <data name="Arguments.Specified.string" xml:space="preserve">
    <value>指定された文字列。</value>
    <comment>the specified string.</comment>
  </data>
  <data name="Arguments.Specified.value" xml:space="preserve">
    <value>指定されたオブジェクト。</value>
    <comment>the specified object.</comment>
  </data>
  <data name="Arguments.StartsWith.value" xml:space="preserve">
    <value>比較する文字列。</value>
    <comment>the string to compare.</comment>
  </data>
  <data name="Constants.False" xml:space="preserve">
    <value>False を返します。</value>
    <comment>Returns False.</comment>
  </data>
  <data name="Constants.Nothing" xml:space="preserve">
    <value>Null を返します。</value>
    <comment>Returns Null.</comment>
  </data>
  <data name="Constants.True" xml:space="preserve">
    <value>True を返します。</value>
    <comment>Returns True.</comment>
  </data>
  <data name="Errors.CanNotFindFinalBracket" xml:space="preserve">
    <value>最後の括弧が見つかりません。</value>
    <comment>Can't find final bracket.</comment>
  </data>
  <data name="Errors.CanNotFindFinalDateDelimiter" xml:space="preserve">
    <value>最後の日付区切り（'#'）が見つかりません。</value>
    <comment>Can't find final date delimiter ('#').</comment>
  </data>
  <data name="Errors.CanNotFindFinalQuote" xml:space="preserve">
    <value>最後のクォートが見つかりません。</value>
    <comment>Can't find final quote.</comment>
  </data>
  <data name="Errors.CanNotFindFinalSquareBracket" xml:space="preserve">
    <value>最後の角括弧が見つかりません。</value>
    <comment>Can't find final square bracket.</comment>
  </data>
  <data name="Errors.ExpressionExpected" xml:space="preserve">
    <value>式が必要です。</value>
    <comment>Expression expected.</comment>
  </data>
  <data name="Errors.FieldOrVariableDidNotFound" xml:space="preserve">
    <value>フィールドまたは変数が見つかりません。</value>
    <comment>Field or variable did not found.</comment>
  </data>
  <data name="Errors.IdentifierExpected" xml:space="preserve">
    <value>識別子が必要です。</value>
    <comment>Identifier expected.</comment>
  </data>
  <data name="Errors.Message" xml:space="preserve">
    <value>列 {0}: {1}</value>
    <comment>Col {0}: {1}</comment>
  </data>
  <data name="Errors.SyntaxError" xml:space="preserve">
    <value>構文エラーです。</value>
    <comment>Syntax error.</comment>
  </data>
  <data name="Errors.TooFewParameters" xml:space="preserve">
    <value>パラメータが少なすぎます。</value>
    <comment>Too few parameters.</comment>
  </data>
  <data name="Errors.TooManyParameters" xml:space="preserve">
    <value>パラメータが多すぎます。</value>
    <comment>Too many parameters.</comment>
  </data>
  <data name="Errors.UnbalancedParenthesis" xml:space="preserve">
    <value>括弧が一致しません。</value>
    <comment>Unbalanced parenthesis.</comment>
  </data>
  <data name="Errors.UnexpectedError" xml:space="preserve">
    <value>予期しないエラーです。</value>
    <comment>Unexpected error.</comment>
  </data>
  <data name="Errors.UnexpectedIdentifier" xml:space="preserve">
    <value>予期しない識別子です。</value>
    <comment>Unexpected identifier.</comment>
  </data>
  <data name="Functions.Abs()" xml:space="preserve">
    <value>数値の絶対値を返します。</value>
    <comment>Returns the absolute value of a number.</comment>
  </data>
  <data name="Functions.Acos()" xml:space="preserve">
    <value>数値のアークコサイン (逆余弦) を返します。</value>
    <comment>Returns the angle whose cosine is the specified number.</comment>
  </data>
  <data name="Functions.AddDays(,)" xml:space="preserve">
    <value>指定された System.DateTime 値に指定された日数を加算し、新しい System.DateTime を返します。</value>
    <comment>Returns a new System.DateTime that adds the specified number of days to the specified System.DateTime value.</comment>
  </data>
  <data name="Functions.AddHours(,)" xml:space="preserve">
    <value>指定された System.DateTime 値に指定された時間数を加算し、新しい System.DateTime を返します。</value>
    <comment>Returns a new System.DateTime that adds the specified number of hours to the  specified System.DateTime value.</comment>
  </data>
  <data name="Functions.AddMilliSeconds(,)" xml:space="preserve">
    <value>指定された System.DateTime 値に指定されたミリ秒数を加算し、新しい System.DateTime を返します。</value>
    <comment>Returns a new System.DateTime that adds the specified number of milliseconds to the specified System.DateTime value.</comment>
  </data>
  <data name="Functions.AddMinutes(,)" xml:space="preserve">
    <value>指定された System.DateTime 値に指定された分数を加算し、新しい System.DateTime を返します。</value>
    <comment>Returns a new System.DateTime that adds the specified number of minutes to the specified System.DateTime value.</comment>
  </data>
  <data name="Functions.AddMonths(,)" xml:space="preserve">
    <value>指定された System.DateTime 値に指定された月数を加算し、新しい System.DateTime を返します。</value>
    <comment>Returns a new System.DateTime that adds the specified number of months to the specified System.DateTime value.</comment>
  </data>
  <data name="Functions.AddSeconds(,)" xml:space="preserve">
    <value>指定された System.DateTime 値に指定された秒数を加算し、新しい System.DateTime を返します。</value>
    <comment>Returns a new System.DateTime that adds the specified number of seconds to the specified System.DateTime value.</comment>
  </data>
  <data name="Functions.AddTicks(,)" xml:space="preserve">
    <value>指定された System.DateTime 値に指定されたタイマー刻み数を加算し、新しい System.DateTime を返します。</value>
    <comment>Returns a new System.DateTime that adds the specified number of ticks to the specified System.DateTime value.</comment>
  </data>
  <data name="Functions.AddTimeSpan(,)" xml:space="preserve">
    <value>指定された System.DateTime 値に指定された時間スパン数を加算し、新しい System.DateTime を返します。</value>
    <comment>Returns a new System.DateTime that adds the specified number of System.TimeSpan to the specified System.DateTime value.</comment>
  </data>
  <data name="Functions.AddYears(,)" xml:space="preserve">
    <value>指定された System.DateTime 値に指定された年数を加算し、新しい System.DateTime を返します。</value>
    <comment>Returns a new System.DateTime that adds the specified number of years to the specified System.DateTime value.</comment>
  </data>
  <data name="Functions.Asc()" xml:space="preserve">
    <value>文字式の左端の文字の ASCII コード値を返します。</value>
    <comment>Returns the ASCII code value of the leftmost character of a character expression.</comment>
  </data>
  <data name="Functions.Asin()" xml:space="preserve">
    <value>数値のアークサイン（逆正弦）を返します。</value>
    <comment>Returns the angle whose sine is the specified number.</comment>
  </data>
  <data name="Functions.Atan()" xml:space="preserve">
    <value>数値のアークタンジェント（逆正接）を返します。</value>
    <comment>Returns the angle whose tangent is the specified number.</comment>
  </data>
  <data name="Functions.Atan2(,)" xml:space="preserve">
    <value>指定された２つの値のアークタンジェント（逆正接）を返します。</value>
    <comment>Returns the angle whose tangent is the quotient of two specified numbers.</comment>
  </data>
  <data name="Functions.Average()" xml:space="preserve">
    <value>指定された一連の数値（または列挙）の平均を計算します。</value>
    <comment>Computes the average of a specified sequence of numbers (or enumerable).</comment>
  </data>
  <data name="Functions.CBool()" xml:space="preserve">
    <value>指定された文字列をに相当する System.Boolean 値に変換します。文字列が System.Boolean.TrueString あるいは System.Boolean.FalseString と等価でない場合は例外がスローされます。</value>
    <comment>Converts the specified string representation of a logical value to its System.Boolean equivalent, or throws an exception if the string is not equivalent to the value of System.Boolean.TrueString or System.Boolean.FalseString.</comment>
  </data>
  <data name="Functions.CByte()" xml:space="preserve">
    <value>指定された文字列を、それに相当する  System.Byte 値に変換します。</value>
    <comment>Converts the string representation of a number to its System.Byte equivalent.</comment>
  </data>
  <data name="Functions.CChar()" xml:space="preserve">
    <value>指定された文字列の値を、それに相当する Unicode 文字に変換します。</value>
    <comment>Converts the value of the specified string to its equivalent Unicode character.</comment>
  </data>
  <data name="Functions.CDate()" xml:space="preserve">
    <value>指定された文字列を、それに相当する System.DateTime 値に変換します。</value>
    <comment>Converts the specified string representation of a date and time to its System.DateTime equivalent.</comment>
  </data>
  <data name="Functions.CDbl()" xml:space="preserve">
    <value>指定された文字列を、それに相当する倍精度浮動小数点値に変換します。</value>
    <comment>Converts the string representation of a number to its double-precision floating-point number equivalent.</comment>
  </data>
  <data name="Functions.CDec()" xml:space="preserve">
    <value>指定された文字列を、それに相当する System.Decimal 値に変換します。</value>
    <comment>Converts the string representation of a number to its System.Decimal equivalent.</comment>
  </data>
  <data name="Functions.Ceiling()" xml:space="preserve">
    <value>指定された decimal 値あるいは double 値より大きいか等しい最小の整数を返します。</value>
    <comment>Returns the smallest integral value that's greater than or equal to the specified decimal or double.</comment>
  </data>
  <data name="Functions.Chr()" xml:space="preserve">
    <value>ASCII コードを文字に変換します。</value>
    <comment>Converts an int ASCII code to a character.</comment>
  </data>
  <data name="Functions.CInt()" xml:space="preserve">
    <value>指定された文字列を、それに相当する 32-bit 符号付き整数値に変換します。</value>
    <comment>Converts the string representation of a number to its 32-bit signed integer equivalent.</comment>
  </data>
  <data name="Functions.CLng()" xml:space="preserve">
    <value>指定された文字列を、それに相当する 64-bit 符号付き整数値に変換します。</value>
    <comment>Converts the string representation of a number to its 64-bit signed integer equivalent.</comment>
  </data>
  <data name="Functions.CObj()" xml:space="preserve">
    <value>指定された要素を System.Object として返します。</value>
    <comment>Returns the specified element as System.Object.</comment>
  </data>
  <data name="Functions.Concat(,)" xml:space="preserve">
    <value>複数の文字列を結合し、１つの文字列として返します。</value>
    <comment>Returns a string that is the result of concatenating two or more string values.</comment>
  </data>
  <data name="Functions.Contains(,)" xml:space="preserve">
    <value>指定された部分文字列がこの文字列内に存在するかどうかを示す値を返します。</value>
    <comment>Returns a value indicating whether a specified substring occurs within this string.</comment>
  </data>
  <data name="Functions.Cos()" xml:space="preserve">
    <value>数値のコサイン (余弦) を返します。</value>
    <comment>Returns the cosine of the specified angle.</comment>
  </data>
  <data name="Functions.Cosh()" xml:space="preserve">
    <value>数値のハイパーボリックコサイン（双曲線余弦）を返します。</value>
    <comment>Returns the hyperbolic cosine of the specified angle.</comment>
  </data>
  <data name="Functions.Count()" xml:space="preserve">
    <value>指定されたシーケンスに実際に含まれる要素の数を取得します。</value>
    <comment>Gets the number of elements actually contained in a specified sequence</comment>
  </data>
  <data name="Functions.CSByte()" xml:space="preserve">
    <value>指定された文字列を、それに相当する 8-bit 符号付き整数値に変換します。</value>
    <comment>Converts the string representation of a number to its 8-bit signed integer equivalent.</comment>
  </data>
  <data name="Functions.CShort()" xml:space="preserve">
    <value>指定された文字列を、それに相当する 16-bit 符号付き整数値に変換します。</value>
    <comment>Converts the string representation of a number to its 16-bit signed integer equivalent.</comment>
  </data>
  <data name="Functions.CSng()" xml:space="preserve">
    <value>指定された文字列を、それに相当する単精度浮動小数点値に変換します。</value>
    <comment>Converts the string representation of a number to its single-precision floating-point number equivalent.</comment>
  </data>
  <data name="Functions.CStr()" xml:space="preserve">
    <value>指定された式を評価し、結果を文字列として返します。</value>
    <comment>Tries to evaluate the specified expression and return result as a sting.</comment>
  </data>
  <data name="Functions.CType(,)" xml:space="preserve">
    <value>値指定されたオブジェクトと等価である、指定された型のオブジェクトを返します。</value>
    <comment>Returns an object of the specified type and whose value is equivalent to the specified object.</comment>
  </data>
  <data name="Functions.CUint()" xml:space="preserve">
    <value>指定された文字列を、それに相当する 32-bit 符号なし整数値に変換します。</value>
    <comment>Converts the string representation of a number to its 32-bit unsigned integer equivalent.</comment>
  </data>
  <data name="Functions.CULong()" xml:space="preserve">
    <value>指定された文字列を、それに相当する 64-bit 符号なし整数値に変換します。</value>
    <comment>Converts the string representation of a number to its 64-bit unsigned integer equivalent.</comment>
  </data>
  <data name="Functions.CUShort()" xml:space="preserve">
    <value>指定された文字列を、それに相当する 16-bit 符号なし整数値に変換します。</value>
    <comment>Converts the string representation of a number to its 16-bit unsigned integer equivalent.</comment>
  </data>
  <data name="Functions.DateDiffDay(,)" xml:space="preserve">
    <value>２つの null 非許容の日付の間での日付の境界の数をカウントします。</value>
    <comment>Counts the number of day boundaries between two non-nullable dates.</comment>
  </data>
  <data name="Functions.DateDiffHour(,)" xml:space="preserve">
    <value>２つの null 非許容の日付間の時間の境界の数をカウントします。</value>
    <comment>Counts the number of hour boundaries between two non-nullable dates.</comment>
  </data>
  <data name="Functions.DateDiffMilliSecond(,)" xml:space="preserve">
    <value>２つの null 非許容の日付間のマイクロ秒単位の境界の数をカウントします。</value>
    <comment>Counts the number of milliseconds boundaries between two non-nullable dates.</comment>
  </data>
  <data name="Functions.DateDiffMinute(,)" xml:space="preserve">
    <value>２つの null 非許容の日付間の分単位の境界の数をカウントします。</value>
    <comment>Counts the number of minutes boundaries between two non-nullable dates.</comment>
  </data>
  <data name="Functions.DateDiffSecond(,)" xml:space="preserve">
    <value>２つの null 非許容の日付間の秒単位の境界の数をカウントします。</value>
    <comment>Counts the number of seconds boundaries between two non-nullable dates.</comment>
  </data>
  <data name="Functions.DateDiffTick(,)" xml:space="preserve">
    <value>２つの null 非許容の日付間のタイマー刻み単位の境界の数をカウントします。</value>
    <comment>Counts the number of ticks boundaries between two non-nullable dates.</comment>
  </data>
  <data name="Functions.EndsWith(,)" xml:space="preserve">
    <value>この文字列インスタンスの末尾が、指定した文字列と一致するかどうかを判断します。</value>
    <comment>Determines whether the end of this string instance matches a specified string.</comment>
  </data>
  <data name="Functions.Exp()" xml:space="preserve">
    <value>e（自然対数の底）を底とする数値のべき乗を返します。</value>
    <comment>Returns e (the base of natural logarithms) raised to the specified power.</comment>
  </data>
  <data name="Functions.First()" xml:space="preserve">
    <value>指定されたシーケンスの最初の要素を返します。</value>
    <comment>Returns the first element of a specified  sequence.</comment>
  </data>
  <data name="Functions.Floor()" xml:space="preserve">
    <value>指定された decimal 値あるいは double 値より小さいか等しい最大の整数を返します。</value>
    <comment>Returns the largest integer that's less than or equal to the specified decimal or double number.</comment>
  </data>
  <data name="Functions.GetDate()" xml:space="preserve">
    <value>指定された System.DateTime 値の日付構成要素を取得します。</value>
    <comment>Gets the date component of specified System.DateTime value.</comment>
  </data>
  <data name="Functions.GetDay()" xml:space="preserve">
    <value>指定された System.DateTime 値によって表される月の最初の日からの日数を取得します。</value>
    <comment>Gets the day of the month represented by specified System.DateTime value.</comment>
  </data>
  <data name="Functions.GetDayOfWeek()" xml:space="preserve">
    <value>指定された System.DateTime 値で表される曜日を取得します。</value>
    <comment>Gets the day of the week represented by the specified System.DateTime value.</comment>
  </data>
  <data name="Functions.GetDayOfYear()" xml:space="preserve">
    <value>指定された System.DateTime 値で表される年の最初の日からの日数を取得します。</value>
    <comment>Gets the day of the year represented by the specified System.DateTime value.</comment>
  </data>
  <data name="Functions.GetHour()" xml:space="preserve">
    <value>指定された System.DateTime 値の時間構成要素を取得します。</value>
    <comment>Gets the hour component of the specified System.DateTime value.</comment>
  </data>
  <data name="Functions.GetMilliSecond()" xml:space="preserve">
    <value>指定された System.DateTime 値のミリ秒構成要素を取得します。</value>
    <comment>Gets the milliSecond component of the specified System.DateTime value.</comment>
  </data>
  <data name="Functions.GetMinute()" xml:space="preserve">
    <value>指定された System.DateTime 値の分構成要素を取得します。</value>
    <comment>Gets the minute component of the specified System.DateTime value.</comment>
  </data>
  <data name="Functions.GetMonth()" xml:space="preserve">
    <value>指定された System.DateTime 値の月構成要素を取得します。</value>
    <comment>Gets the month component of the specified System.DateTime value.</comment>
  </data>
  <data name="Functions.GetSecond()" xml:space="preserve">
    <value>指定された System.DateTime 値の秒構成要素を取得します。</value>
    <comment>Gets the seconds component of the specified System.DateTime value.</comment>
  </data>
  <data name="Functions.GetTimeOfDay()" xml:space="preserve">
    <value>指定された System.DateTime 値の時刻を取得します。</value>
    <comment>Gets the time of day for the specified System.DateTime value.</comment>
  </data>
  <data name="Functions.GetYear()" xml:space="preserve">
    <value>指定された System.DateTime 値の年構成要素を取得します。</value>
    <comment>Gets the year component of the specified System.DateTime value.</comment>
  </data>
  <data name="Functions.Iif(,,)" xml:space="preserve">
    <value>条件に応じて、２つの式のうちの１つの評価を返します。</value>
    <comment>Returns the evaluation of one of two expressions, depending on the condition.</comment>
  </data>
  <data name="Functions.Insert(,,)" xml:space="preserve">
    <value>このインスタンスの指定された位置に指定された部分文字列を挿入し、新しい文字列を返します。</value>
    <comment>Returns a new string in which a specified string is inserted at a specified index position in this instance.</comment>
  </data>
  <data name="Functions.InStr(,)" xml:space="preserve">
    <value>他の式の中から指定された式を検索し、最初の見つかった文字列の開始位置を返します。</value>
    <comment>Searches an expression for another expression and returns its starting position if found.</comment>
  </data>
  <data name="Functions.InStr(,,)" xml:space="preserve">
    <value>他の式の中の指定された位置から指定された式を検索し、最初に見つかった文字列の開始位置を返します。</value>
    <comment>Searches an expression for another expression and returns its starting position if found, starting from the specified position.</comment>
  </data>
  <data name="Functions.IsNull()" xml:space="preserve">
    <value>指定された値が NULL の場合は True を返します。</value>
    <comment>Returns True if the specified Value is NULL.</comment>
  </data>
  <data name="Functions.Last()" xml:space="preserve">
    <value>指定されたシーケンスの最後の要素を返します。</value>
    <comment>Returns the last element of a specified  sequence.</comment>
  </data>
  <data name="Functions.LCase()" xml:space="preserve">
    <value>大文字の文字データを小文字に変換した後の文字式を返します。</value>
    <comment>Returns a character expression after converting uppercase character data to lowercase.</comment>
  </data>
  <data name="Functions.Len()" xml:space="preserve">
    <value>指定された文字列式の文字数を返します。</value>
    <comment>Returns the number of characters of the specified string expression.</comment>
  </data>
  <data name="Functions.Log()" xml:space="preserve">
    <value>指定された数値の自然（底 e）対数を返します。</value>
    <comment>Returns the natural (base e) logarithm of a specified number.</comment>
  </data>
  <data name="Functions.Log(,)" xml:space="preserve">
    <value>指定された数値の指定された底での対数を返します。</value>
    <comment>Returns the logarithm of a specified number in a specified base.</comment>
  </data>
  <data name="Functions.Log10()" xml:space="preserve">
    <value>指定した数の底 10 の対数を返します。</value>
    <comment>Returns the base 10 logarithm of a specified number.</comment>
  </data>
  <data name="Functions.LSet(,)" xml:space="preserve">
    <value>現在の文字列の先頭にスペースが埋め込まれた、指定された長さの新しい文字列を返します。</value>
    <comment>Returns a new string of a specified length in which the beginning of the current string is padded with spaces.</comment>
  </data>
  <data name="Functions.LSet(,,)" xml:space="preserve">
    <value>現在の文字列の先頭に指定された文字が埋め込まれた、指定された長さの新しい文字列を返します。</value>
    <comment>Returns a new string of a specified length in which the beginning of the current string is padded with a specified character.</comment>
  </data>
  <data name="Functions.Max()" xml:space="preserve">
    <value>指定された数値の列（または列挙）の最大値を返します。</value>
    <comment>Returns the maximum value in a specified sequence of numbers (or enumerable).</comment>
  </data>
  <data name="Functions.Mid(,)" xml:space="preserve">
    <value>文字列内の指定された位置から始まるすべての文字を含む文字列を返します。</value>
    <comment>Returns a string that contains all the characters starting from a specified position in a string.</comment>
  </data>
  <data name="Functions.Mid(,,)" xml:space="preserve">
    <value>文字列内の指定された位置から始まる指定された文字数を含む文字列を返します。</value>
    <comment>Returns a string that contains a specified number of characters starting from a specified position in a string.</comment>
  </data>
  <data name="Functions.Min()" xml:space="preserve">
    <value>指定された数値の列（または列挙）の最小値を返します。</value>
    <comment>Returns the minimum value in a specified sequence of numbers (or enumerable).</comment>
  </data>
  <data name="Functions.Now()" xml:space="preserve">
    <value>このコンピューターの現在の日付と時刻に設定された System.DateTime オブジェクトをローカル時刻として取得します。</value>
    <comment>Gets a System.DateTime object that is set to the current date and time on this computer, expressed as the local time.</comment>
  </data>
  <data name="Functions.Pow(,)" xml:space="preserve">
    <value>指定された数値を指定された値で累乗した値を返します。</value>
    <comment>Returns a specified number raised to the specified power.</comment>
  </data>
  <data name="Functions.Rand()" xml:space="preserve">
    <value>非負値の乱数を返します。</value>
    <comment>Returns a nonnegative random number.</comment>
  </data>
  <data name="Functions.RandBetween()" xml:space="preserve">
    <value>指定された範囲内の乱数を返します。</value>
    <comment>Returns a random number within a specified range.</comment>
  </data>
  <data name="Functions.Remove(,)" xml:space="preserve">
    <value>指定された文字列から指定されたすべての文字を削除します。</value>
    <comment>Deletes all specified characters specified string.</comment>
  </data>
  <data name="Functions.Remove(,,)" xml:space="preserve">
    <value>指定された文字列の指定された開始位置から指定されたすべての文字を削除します。</value>
    <comment>Deletes all specified characters specified string, beginning at a specified position.</comment>
  </data>
  <data name="Functions.Replace(,,)" xml:space="preserve">
    <value>指定された文字列のすべての発生個所を他の文字列に置換します。</value>
    <comment>Replaces all occurrences of a specified string value with another string value.</comment>
  </data>
  <data name="Functions.RSet(,)" xml:space="preserve">
    <value>現在の文字列の末尾にスペースが埋め込まれた、指定された長さの新しい文字列を返します。</value>
    <comment>Returns a new string of a specified length in which the end of the current string is padded with spaces.</comment>
  </data>
  <data name="Functions.RSet(,,)" xml:space="preserve">
    <value>現在の文字列の末尾に指定された文字が埋め込まれた、指定された長さの新しい文字列を返します。</value>
    <comment>Returns a new string of a specified length in which the end of the current string is padded with a specified character.</comment>
  </data>
  <data name="Functions.Sign()" xml:space="preserve">
    <value>数値の符号を示す整数値を返します。</value>
    <comment>Returns an integer value indicating the sign of a number.</comment>
  </data>
  <data name="Functions.Sin()" xml:space="preserve">
    <value>数値のサイン（正弦）を返します。</value>
    <comment>Returns the sine of the specified angle.</comment>
  </data>
  <data name="Functions.Sinh()" xml:space="preserve">
    <value>数値のハイパーボリックサイン（双曲線正弦）を返します。</value>
    <comment>Returns the hyperbolic sine of the specified angle.</comment>
  </data>
  <data name="Functions.Sqrt()" xml:space="preserve">
    <value>指定された数値の平方根を返します。</value>
    <comment>Returns the square root of a specified number.</comment>
  </data>
  <data name="Functions.StartsWith(,)" xml:space="preserve">
    <value>この文字列インスタンスの先頭が指定された文字列と一致するかどうかを判定します。</value>
    <comment>Determines whether the beginning of this string instance matches a specified string.</comment>
  </data>
  <data name="Functions.StrReverse()" xml:space="preserve">
    <value>文字列値の逆順を返します。</value>
    <comment>Returns the reverse order of a string value.</comment>
  </data>
  <data name="Functions.Sum()" xml:space="preserve">
    <value>指定された数字（または列挙）の合計を計算します。</value>
    <comment>Computes the sum of a specified  sequence of numbers  (or enumerable).</comment>
  </data>
  <data name="Functions.Tan()" xml:space="preserve">
    <value>指定された角度の正接を返します。</value>
    <comment>Returns the tangent of the specified angle.</comment>
  </data>
  <data name="Functions.Tanh()" xml:space="preserve">
    <value>指定された角度の双曲線正接を返します。</value>
    <comment>Returns the hyperbolic tangent of the specified angle.</comment>
  </data>
  <data name="Functions.Today()" xml:space="preserve">
    <value>現在の日付を取得します。</value>
    <comment>Gets the current date.</comment>
  </data>
  <data name="Functions.Trim()" xml:space="preserve">
    <value>文字列の先頭または末尾の空白文字（char(32)）または他の指定された文字を削除します。</value>
    <comment>Removes the space character char(32) or other specified characters from the start or end of a string.</comment>
  </data>
  <data name="Functions.UCase()" xml:space="preserve">
    <value>小文字の文字データを大文字に変換した文字式を返します。</value>
    <comment>Returns a character expression with lowercase character data converted to uppercase.</comment>
  </data>
  <data name="Functions.UtcNow()" xml:space="preserve">
    <value>このコンピューターの現在の日付と時刻に設定されている System.DateTime オブジェクトを取得します。これは協定世界時（UTC）で表されます。</value>
    <comment>Gets a System.DateTime object that is set to the current date and time on this computer, expressed as the Coordinated Universal Time (UTC).</comment>
  </data>
  <data name="Operators.And" xml:space="preserve">
    <value>２つの式を論理的に結合します。</value>
    <comment>Performs a logical conjunction on two expressions.</comment>
  </data>
  <data name="Operators.Concat" xml:space="preserve">
    <value>２つの式の文字列連結を生成します。</value>
    <comment>Generates a string concatenation of two expressions.</comment>
  </data>
  <data name="Operators.Divide" xml:space="preserve">
    <value>２つの数値を除算し、浮動小数点の結果を返します。</value>
    <comment>Divides two numbers and returns a floating-point result.</comment>
  </data>
  <data name="Operators.Equal" xml:space="preserve">
    <value>左と右の式が等しいかどうかを示すブール値を返します。</value>
    <comment>Returns a Boolean value that indicates whether the left and right expressions are equal.</comment>
  </data>
  <data name="Operators.GreaterOrEqual" xml:space="preserve">
    <value>左の式が右の式以上かどうかを示すブール値を返します。</value>
    <comment>Returns a Boolean value that indicates whether the left expression is greater than right expression or equal.</comment>
  </data>
  <data name="Operators.GreaterThan" xml:space="preserve">
    <value>左の式が右の式よりも大きいかどうかを示すブール値を返します。</value>
    <comment>Returns a Boolean value that indicates whether the left expression is greater than right expression.</comment>
  </data>
  <data name="Operators.LessOrEqual" xml:space="preserve">
    <value>左の式が右の式以下かどうかを示すブール値を返します。</value>
    <comment>Returns a Boolean value that indicates whether the left expression is less than right expression or equal.</comment>
  </data>
  <data name="Operators.LessThan" xml:space="preserve">
    <value>左の式が右の式よりも小さいかどうかを示すブール値を返します。</value>
    <comment>Returns a Boolean value that indicates whether the left expression is less than right expression.</comment>
  </data>
  <data name="Operators.Minus" xml:space="preserve">
    <value>２つの数値を減算したり、数値式の負の値を示します。</value>
    <comment>Finds the difference between two numbers or indicates the negative value of a numeric expression.</comment>
  </data>
  <data name="Operators.Modulus" xml:space="preserve">
    <value>２つの数値を除算し、その余りを返します。</value>
    <comment>Divides two numbers and returns only the remainder.</comment>
  </data>
  <data name="Operators.Multiply" xml:space="preserve">
    <value>２つの数値を乗算します。</value>
    <comment>Multiplies two numbers.</comment>
  </data>
  <data name="Operators.Not" xml:space="preserve">
    <value>式に対して論理否定を実行します。</value>
    <comment>Performs logical negation on an expression.</comment>
  </data>
  <data name="Operators.NotEqual" xml:space="preserve">
    <value>左と右の式が等しくないかどうかを示すブール値を返します。</value>
    <comment>Returns a Boolean value that indicates whether the left and right expressions are not equal.</comment>
  </data>
  <data name="Operators.Or" xml:space="preserve">
    <value>２つの式に対して論理和を実行します。</value>
    <comment>Performs a logical disjunction on two expressions.</comment>
  </data>
  <data name="Operators.Plus" xml:space="preserve">
    <value>２つの数値を加算します。</value>
    <comment>Sums two numbers.</comment>
  </data>
  <data name="Errors.ComparisonError" xml:space="preserve">
    <value>An error occurred when comparing values.</value>
    <comment>An error occurred when comparing values.</comment>
  </data>
  <data name="Errors.DuplicateAliasError" xml:space="preserve">
    <value>An error occurred when added a duplicate of alias.</value>
    <comment>An error occurred when added a duplicate of alias.</comment>
  </data>
  <data name="Errors.IncorrectAliasError" xml:space="preserve">
    <value>An error occurred when the alias coincided with a field from DataSource.</value>
    <comment>An error occurred when the alias coincided with a field from DataSource.</comment>
  </data>
  <data name="Errors.IncorrectDateFormat" xml:space="preserve">
    <value>Incorrect date format.</value>
    <comment>Incorrect date format.</comment>
  </data>
  <data name="Arguments.Round.digits" xml:space="preserve">
    <value>The number of fractional digits in the return value.</value>
    <comment>The number of fractional digits in the return value.</comment>
  </data>
  <data name="Arguments.Round.value" xml:space="preserve">
    <value>A double-precision floating-point number to be rounded.</value>
    <comment>A double-precision floating-point number to be rounded.</comment>
  </data>
  <data name="Functions.Round()" xml:space="preserve">
    <value>Rounds a double-precision floating-point value to a specified number of fractional digits.</value>
    <comment>Rounds a double-precision floating-point value to a specified number of fractional digits.</comment>
  </data>
  <data name="Categories.Aggregate" xml:space="preserve">
    <value>Aggregate</value>
    <comment>Aggregate</comment>
  </data>
  <data name="Categories.Constants" xml:space="preserve">
    <value>Constants</value>
    <comment>Constants</comment>
  </data>
  <data name="Categories.Convert" xml:space="preserve">
    <value>Convert</value>
    <comment>Convert</comment>
  </data>
  <data name="Categories.DateTime" xml:space="preserve">
    <value>DateTime</value>
    <comment>DateTime</comment>
  </data>
  <data name="Categories.Fields" xml:space="preserve">
    <value>Fields</value>
    <comment>Fields</comment>
  </data>
  <data name="Categories.Functions" xml:space="preserve">
    <value>Functions</value>
    <comment>Functions</comment>
  </data>
  <data name="Categories.Logical" xml:space="preserve">
    <value>Logical</value>
    <comment>Logical</comment>
  </data>
  <data name="Categories.Math" xml:space="preserve">
    <value>Math</value>
    <comment>Math</comment>
  </data>
  <data name="Categories.Operators" xml:space="preserve">
    <value>Operators</value>
    <comment>Operators</comment>
  </data>
  <data name="Categories.Text" xml:space="preserve">
    <value>Text</value>
    <comment>Text</comment>
  </data>
</root>