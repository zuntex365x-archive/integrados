<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Arguments.Acos.number" xml:space="preserve">
    <value>число, представляющее косинус. Оно должно быть больше или равно -1, но меньше или равен 1.</value>
    <comment>a number representing a cosine, where it must be greater than or equal to -1, but less than or equal to 1.</comment>
  </data>
  <data name="Arguments.AddDays.days" xml:space="preserve">
    <value>количество полных и неполных дней. Значение может быть отрицательным или положительным.</value>
    <comment>a number of whole and fractional days. The value parameter can be negative or positive.</comment>
  </data>
  <data name="Arguments.AddHours.hours" xml:space="preserve">
    <value>количество полных и неполных часов. Значение может быть отрицательным или положительным.</value>
    <comment>a number of whole and fractional hours. The value parameter can be negative or positive.</comment>
  </data>
  <data name="Arguments.AddMilliSeconds.milliseconds" xml:space="preserve">
    <value>количество полных и неполных миллисекунд. Значение может быть отрицательным или положительным.</value>
    <comment>a number of whole and fractional milliseconds. The value parameter can be negative or positive.</comment>
  </data>
  <data name="Arguments.AddMinutes.minutes" xml:space="preserve">
    <value>количество полных и неполных минут. Значение может быть отрицательным или положительным.</value>
    <comment>a number of whole and fractional minutes. The value parameter can be negative or positive.</comment>
  </data>
  <data name="Arguments.AddMonths.months" xml:space="preserve">
    <value>количество полных и неполных месяцев. Значение может быть отрицательным или положительным.</value>
    <comment>a number of whole and fractional months. The value parameter can be negative or positive.</comment>
  </data>
  <data name="Arguments.AddSeconds.seconds" xml:space="preserve">
    <value>количество полных и неполных секунд. Значение может быть отрицательным или положительным.</value>
    <comment>a number of whole and fractional seconds. The value parameter can be negative or positive.</comment>
  </data>
  <data name="Arguments.AddTicks.ticks" xml:space="preserve">
    <value>количество полных и неполных тактов. Значение может быть отрицательным или положительным.</value>
    <comment>a number of whole and fractional ticks. The value parameter can be negative or positive.</comment>
  </data>
  <data name="Arguments.AddTimeSpan.timespan" xml:space="preserve">
    <value>количество полных и неполных тактов. Значение может быть отрицательным или положительным.</value>
    <comment>a number of whole and fractional time span. The value parameter can be negative or positive.</comment>
  </data>
  <data name="Arguments.AddYears.years" xml:space="preserve">
    <value>количество полных и неполных лет. Значение может быть отрицательным или положительным.</value>
    <comment>a number of whole and fractional years. The value parameter can be negative or positive.</comment>
  </data>
  <data name="Arguments.Asin.number" xml:space="preserve">
    <value>число, представляющее синус. Оно должно быть больше или равно -1, но меньше или равен 1.</value>
    <comment>a number representing a sine, where it must be greater than or equal to -1, but less than or equal to 1.</comment>
  </data>
  <data name="Arguments.Atan.number" xml:space="preserve">
    <value>число, представляющее тангенс.</value>
    <comment>a number representing a tangent.</comment>
  </data>
  <data name="Arguments.Atan2.x" xml:space="preserve">
    <value>координата X точки.</value>
    <comment>the x coordinate of a point.</comment>
  </data>
  <data name="Arguments.Atan2.y" xml:space="preserve">
    <value>координата Y точки.</value>
    <comment>the y coordinate of a point.</comment>
  </data>
  <data name="Arguments.Ceiling.number" xml:space="preserve">
    <value>указанное десятичное число или число двойной точности с плавающей запятой.</value>
    <comment>a specified decimal or double-precision floating-point number.</comment>
  </data>
  <data name="Arguments.Concat.value" xml:space="preserve">
    <value>строка для добавления.</value>
    <comment>the string to append.</comment>
  </data>
  <data name="Arguments.Convert.string" xml:space="preserve">
    <value>строка содержащая значение для преобразования.</value>
    <comment>a string containing the value to convert.</comment>
  </data>
  <data name="Arguments.CType.type" xml:space="preserve">
    <value>имя типа возвращаемого объекта.</value>
    <comment>the type name of object to return.</comment>
  </data>
  <data name="Arguments.CType.value" xml:space="preserve">
    <value>указанный объект для преобразования.</value>
    <comment>the specified object for conversion.</comment>
  </data>
  <data name="Arguments.EndsWith.value" xml:space="preserve">
    <value>строка для сравнения с подстрокой в конце данного экземпляра.</value>
    <comment>the string to compare to the substring at the end of this instance.</comment>
  </data>
  <data name="Arguments.Exp.power" xml:space="preserve">
    <value>число, представляющее степень.</value>
    <comment>a number specifying a power.</comment>
  </data>
  <data name="Arguments.Floor.number" xml:space="preserve">
    <value>указанное десятичное число или число двойной точности с плавающей запятой.</value>
    <comment>a specified decimal or double-precision floating-point number.</comment>
  </data>
  <data name="Arguments.Iif.condition" xml:space="preserve">
    <value>заданное условие.</value>
    <comment>the specified condition.</comment>
  </data>
  <data name="Arguments.Iif.resultFalse" xml:space="preserve">
    <value>выражение, которое будет выполнятся, если условие ложное.</value>
    <comment>the expression which will be executed if the result of the condition is False.</comment>
  </data>
  <data name="Arguments.Iif.resultTrue" xml:space="preserve">
    <value>выражение, которое будет выполнятся, если условие истенно.</value>
    <comment>the expression which will be executed if the result of the condition is True.</comment>
  </data>
  <data name="Arguments.Insert.index" xml:space="preserve">
    <value>позиция в экземпляре, где начинается вставка.</value>
    <comment>the position in this instance where insertion begins.</comment>
  </data>
  <data name="Arguments.Insert.value" xml:space="preserve">
    <value>строка для вставки.</value>
    <comment>the string to insert.</comment>
  </data>
  <data name="Arguments.InStr.start" xml:space="preserve">
    <value>позиция начала поиска.</value>
    <comment>the search starting position.</comment>
  </data>
  <data name="Arguments.Log.base" xml:space="preserve">
    <value>основанием логарифма.</value>
    <comment>the base of the logarithm.</comment>
  </data>
  <data name="Arguments.Log.number" xml:space="preserve">
    <value>число, логарифм которого должен быть найден.</value>
    <comment>a number whose logarithm is to be found.</comment>
  </data>
  <data name="Arguments.LSet.3.length" xml:space="preserve">
    <value>количество символов в результирующей строке, равное количеству оригинальных символов плюс любые дополнительные знаки заполнения.</value>
    <comment>the number of characters in the resulting string, equal to the number of original characters plus any additional padding characters.</comment>
  </data>
  <data name="Arguments.LSet.char" xml:space="preserve">
    <value>символ заполнения в Unicode.</value>
    <comment>a Unicode padding character.</comment>
  </data>
  <data name="Arguments.LSet.length" xml:space="preserve">
    <value>количество символов в результирующей строке, равное количеству оригинальных символов плюс любые дополнительные пробелы.</value>
    <comment>the number of characters in the resulting string, equal to the number of original characters plus any additional spaces.</comment>
  </data>
  <data name="Arguments.Mid.length" xml:space="preserve">
    <value>количество символов в подстроке.</value>
    <comment>the number of characters in the substring.</comment>
  </data>
  <data name="Arguments.Mid.start" xml:space="preserve">
    <value>начальная позиция первого символа подстроки в заданной строке. Начиная с 0.</value>
    <comment>the zero-based starting character position of a substring in the specified string.</comment>
  </data>
  <data name="Arguments.Pow.number" xml:space="preserve">
    <value>число двойной точности с плавающей запятой, которое будет возведено в степень.</value>
    <comment>a double-precision floating-point number to be raised to a power.</comment>
  </data>
  <data name="Arguments.Pow.power" xml:space="preserve">
    <value>число двойной точности с плавающей запятой, определяющее степень.</value>
    <comment>a double-precision floating-point number that specifies a power.</comment>
  </data>
  <data name="Arguments.RandBetween.max" xml:space="preserve">
    <value>верхняя граница возвращаемого случайного числа (не включительно). Должна быть больше или равна минимальной границы.</value>
    <comment>the exclusive upper bound of the random number returned. maxValue must be greater than or equal to minValue.</comment>
  </data>
  <data name="Arguments.RandBetween.min" xml:space="preserve">
    <value>нижняя граница возвращаемого случайного числа (включительно).</value>
    <comment>the inclusive lower bound of the random number returned.</comment>
  </data>
  <data name="Arguments.Remove.count" xml:space="preserve">
    <value>количество удаляемых символов.</value>
    <comment>the number of characters to delete.</comment>
  </data>
  <data name="Arguments.Remove.start" xml:space="preserve">
    <value>начальная позиция первого символа с которого будет произведено удаление. Начиная с 0.</value>
    <comment>the zero-based position to begin deleting characters.</comment>
  </data>
  <data name="Arguments.Replace.oldValue" xml:space="preserve">
    <value>строка, на которую происходит замена.</value>
    <comment>the string that replaces oldValue, or null.</comment>
  </data>
  <data name="Arguments.Replace.newValue" xml:space="preserve">
    <value>строку, которую заменяет, или NULL.</value>
    <comment>the string to replace.</comment>
  </data>
  <data name="Arguments.RSet.3.length" xml:space="preserve">
    <value>количество символов в результирующей строке, равное количеству оригинальных символов плюс любые дополнительные знаки заполнения.</value>
    <comment>the number of characters in the resulting string, equal to the number of original characters plus any additional padding characters.</comment>
  </data>
  <data name="Arguments.RSet.char" xml:space="preserve">
    <value>символ заполнения в Unicode.</value>
    <comment>a Unicode padding character.</comment>
  </data>
  <data name="Arguments.RSet.length" xml:space="preserve">
    <value>количество символов в результирующей строке, равное количеству оригинальных символов плюс любые дополнительные пробелы.</value>
    <comment>the number of characters in the resulting string, equal to the number of original characters plus any additional spaces.</comment>
  </data>
  <data name="Arguments.Seek.value" xml:space="preserve">
    <value>строка, которую следует найти.</value>
    <comment>the string to seek.</comment>
  </data>
  <data name="Arguments.Sign.number" xml:space="preserve">
    <value>знаковое число.</value>
    <comment>a signed number.</comment>
  </data>
  <data name="Arguments.Specified.angle" xml:space="preserve">
    <value>угол, измеренный в радианах.</value>
    <comment>an angle, measured in radians.</comment>
  </data>
  <data name="Arguments.Specified.date" xml:space="preserve">
    <value>указанное значение  Date-Time.</value>
    <comment>the specified Date-Time.</comment>
  </data>
  <data name="Arguments.Specified.date1" xml:space="preserve">
    <value>первая дата.</value>
    <comment>the first date.</comment>
  </data>
  <data name="Arguments.Specified.date2" xml:space="preserve">
    <value>вторая дата.</value>
    <comment>the second date.</comment>
  </data>
  <data name="Arguments.Specified.number" xml:space="preserve">
    <value>указанное число.</value>
    <comment>the specified number.</comment>
  </data>
  <data name="Arguments.Specified.string" xml:space="preserve">
    <value>указанная строка.</value>
    <comment>the specified string.</comment>
  </data>
  <data name="Arguments.Specified.value" xml:space="preserve">
    <value>указанный объект.</value>
    <comment>the specified object.</comment>
  </data>
  <data name="Arguments.StartsWith.value" xml:space="preserve">
    <value>строка для сравнения.</value>
    <comment>the string to compare.</comment>
  </data>
  <data name="Constants.False" xml:space="preserve">
    <value>Возвращает False.</value>
    <comment>Returns False.</comment>
  </data>
  <data name="Constants.Nothing" xml:space="preserve">
    <value>Возвращает Null.</value>
    <comment>Returns Null.</comment>
  </data>
  <data name="Constants.True" xml:space="preserve">
    <value>ВозвращаетTrue.</value>
    <comment>Returns True.</comment>
  </data>
  <data name="Errors.CanNotFindFinalDateDelimiter" xml:space="preserve">
    <value>Не могу найти оконечный разделитель даты ('#').</value>
    <comment>Can't find final date delimiter ('#').</comment>
  </data>
  <data name="Errors.CanNotFindFinalQuote" xml:space="preserve">
    <value>Не могу найти закрывающую ковычку.</value>
    <comment>Can't find final quote.</comment>
  </data>
  <data name="Errors.CanNotFindFinalSquareBracket" xml:space="preserve">
    <value>Не могу найти закрывающую квадратную скобку.</value>
    <comment>Can't find final square bracket.</comment>
  </data>
  <data name="Errors.ExpressionExpected" xml:space="preserve">
    <value>Ожидается выражение.</value>
    <comment>Expression expected.</comment>
  </data>
  <data name="Errors.FieldOrVariableDidNotFound" xml:space="preserve">
    <value>Поле или переменная не найдена.</value>
    <comment>Field or variable did not found.</comment>
  </data>
  <data name="Errors.IdentifierExpected" xml:space="preserve">
    <value>Ожидается идентификатор.</value>
    <comment>Identifier expected.</comment>
  </data>
  <data name="Errors.Message" xml:space="preserve">
    <value>Col {0}: {1}</value>
    <comment>Col {0}: {1}</comment>
  </data>
  <data name="Errors.SyntaxError" xml:space="preserve">
    <value>Синтаксическая ошибка.</value>
    <comment>Syntax error.</comment>
  </data>
  <data name="Errors.TooFewParameters" xml:space="preserve">
    <value>Слишком мало параметров.</value>
    <comment>Too few parameters.</comment>
  </data>
  <data name="Errors.TooManyParameters" xml:space="preserve">
    <value>Слишком много параметров.</value>
    <comment>Too many parameters.</comment>
  </data>
  <data name="Errors.UnbalancedParenthesis" xml:space="preserve">
    <value>Несбалансированные скобки.</value>
    <comment>Unbalanced parenthesis.</comment>
  </data>
  <data name="Errors.UnexpectedError" xml:space="preserve">
    <value>Неожиданная ошибка.</value>
    <comment>Unexpected error.</comment>
  </data>
  <data name="Errors.UnexpectedIdentifier" xml:space="preserve">
    <value>Неожиданный идентификатор.</value>
    <comment>Unexpected identifier.</comment>
  </data>
  <data name="Functions.Abs()" xml:space="preserve">
    <value>Возвращает абсолютное значение числа.</value>
    <comment>Returns the absolute value of a number.</comment>
  </data>
  <data name="Functions.Acos()" xml:space="preserve">
    <value>Возвращает угол, косинус которого равен заданному числу.</value>
    <comment>Returns the angle whose cosine is the specified number.</comment>
  </data>
  <data name="Functions.AddDays(,)" xml:space="preserve">
    <value>Возвращает новое значение System.DateTime, добавляющий заданное число дней к указанному значению System.DateTime.</value>
    <comment>Returns a new System.DateTime that adds the specified number of days to the specified System.DateTime value.</comment>
  </data>
  <data name="Functions.AddHours(,)" xml:space="preserve">
    <value>Возвращает новое значение System.DateTime, добавляющий заданное число часов к указанному значению System.DateTime.</value>
    <comment>Returns a new System.DateTime that adds the specified number of hours to the  specified System.DateTime value.</comment>
  </data>
  <data name="Functions.AddMilliSeconds(,)" xml:space="preserve">
    <value>Возвращает новое значение System.DateTime, добавляющий заданное число миллисекунд к указанному значению System.DateTime.</value>
    <comment>Returns a new System.DateTime that adds the specified number of milliseconds to the specified System.DateTime value.</comment>
  </data>
  <data name="Functions.AddMinutes(,)" xml:space="preserve">
    <value>Возвращает новое значение System.DateTime, добавляющий заданное число минут к указанному значению System.DateTime.</value>
    <comment>Returns a new System.DateTime that adds the specified number of minutes to the specified System.DateTime value.</comment>
  </data>
  <data name="Functions.AddMonths(,)" xml:space="preserve">
    <value>Возвращает новое значение System.DateTime, добавляющий заданное число месяцев к указанному значению System.DateTime.</value>
    <comment>Returns a new System.DateTime that adds the specified number of months to the specified System.DateTime value.</comment>
  </data>
  <data name="Functions.AddSeconds(,)" xml:space="preserve">
    <value>Возвращает новое значение System.DateTime, добавляющий заданное число секунд к указанному значению System.DateTime.</value>
    <comment>Returns a new System.DateTime that adds the specified number of seconds to the specified System.DateTime value.</comment>
  </data>
  <data name="Functions.AddTicks(,)" xml:space="preserve">
    <value>Возвращает новое значение System.DateTime, добавляющий заданное число тактов к указанному значению System.DateTime.</value>
    <comment>Returns a new System.DateTime that adds the specified number of ticks to the specified System.DateTime value.</comment>
  </data>
  <data name="Functions.AddTimeSpan(,)" xml:space="preserve">
    <value>Возвращает новое значение System.DateTime, добавляющий заданное число System.TimeSpan к указанному значению System.DateTime.</value>
    <comment>Returns a new System.DateTime that adds the specified number of System.TimeSpan to the specified System.DateTime value.</comment>
  </data>
  <data name="Functions.AddYears(,)" xml:space="preserve">
    <value>Возвращает новое значение System.DateTime, добавляющий заданное число лет к указанному значению System.DateTime.</value>
    <comment>Returns a new System.DateTime that adds the specified number of years to the specified System.DateTime value.</comment>
  </data>
  <data name="Functions.Asc()" xml:space="preserve">
    <value>Возвращает код ASCII первого символа в символьном выражении.</value>
    <comment>Returns the ASCII code value of the leftmost character of a character expression.</comment>
  </data>
  <data name="Functions.Asin()" xml:space="preserve">
    <value>Возвращает угол, синус которого равен заданному числу.</value>
    <comment>Returns the angle whose sine is the specified number.</comment>
  </data>
  <data name="Functions.Atan()" xml:space="preserve">
    <value>Возвращает угол, тангенс которого равен заданному числу.</value>
    <comment>Returns the angle whose tangent is the specified number.</comment>
  </data>
  <data name="Functions.Atan2(,)" xml:space="preserve">
    <value>Возвращает угол, тангенс которого равен отношению двух указанных чисел.</value>
    <comment>Returns the angle whose tangent is the quotient of two specified numbers.</comment>
  </data>
  <data name="Functions.Average()" xml:space="preserve">
    <value>Вычисляет среднее для последовательности чисел (или перечислиния).</value>
    <comment>Computes the average of a specified sequence of numbers (or enumerable).</comment>
  </data>
  <data name="Functions.CBool()" xml:space="preserve">
    <value>Преобразует заданное строковое представление логического значения к своему System.Boolean эквиваленту, или бросает исключение, если строка не эквивалентна значениям System.Boolean.TrueString  или System.Boolean.FalseString.</value>
    <comment>Converts the specified string representation of a logical value to its System.Boolean equivalent, or throws an exception if the string is not equivalent to the value of System.Boolean.TrueString or System.Boolean.FalseString.</comment>
  </data>
  <data name="Functions.CByte()" xml:space="preserve">
    <value>Преобразует строковое представление числа в его System.Byte эквивалент.</value>
    <comment>Converts the string representation of a number to its System.Byte equivalent.</comment>
  </data>
  <data name="Functions.CChar()" xml:space="preserve">
    <value>Преобразует значение заданной строки в эквивалентный Unicode символ.</value>
    <comment>Converts the value of the specified string to its equivalent Unicode character.</comment>
  </data>
  <data name="Functions.CDate()" xml:space="preserve">
    <value>Преобразует заданное строковое представление даты и времени в его System.DateTime эквивалент.</value>
    <comment>Converts the specified string representation of a date and time to its System.DateTime equivalent.</comment>
  </data>
  <data name="Functions.CDbl()" xml:space="preserve">
    <value>Преобразует строковое представление числа в его эквивалент двойной точности с плавающей запятой.</value>
    <comment>Converts the string representation of a number to its double-precision floating-point number equivalent.</comment>
  </data>
  <data name="Functions.CDec()" xml:space="preserve">
    <value>Преобразует строковое представление числа в его System.Decimal эквивалент.</value>
    <comment>Converts the string representation of a number to its System.Decimal equivalent.</comment>
  </data>
  <data name="Functions.Ceiling()" xml:space="preserve">
    <value>Возвращает наименьшее целое значение, которое больше или равно заданному decimal или Double числу.</value>
    <comment>Returns the smallest integral value that's greater than or equal to the specified decimal or double.</comment>
  </data>
  <data name="Functions.Chr()" xml:space="preserve">
    <value>Преобразует код ASCII в символ.</value>
    <comment>Converts an int ASCII code to a character.</comment>
  </data>
  <data name="Functions.CInt()" xml:space="preserve">
    <value>Преобразует строковое представление числа в эквивалентное ему знаковое 32-битовое целое число.</value>
    <comment>Converts the string representation of a number to its 32-bit signed integer equivalent.</comment>
  </data>
  <data name="Functions.CLng()" xml:space="preserve">
    <value>Преобразует строковое представление числа в эквивалентное ему знаковое 64-битовое целое число.</value>
    <comment>Converts the string representation of a number to its 64-bit signed integer equivalent.</comment>
  </data>
  <data name="Functions.CObj()" xml:space="preserve">
    <value>Возвращает указанный элемент как System.Object.</value>
    <comment>Returns the specified element as System.Object.</comment>
  </data>
  <data name="Functions.Concat(,)" xml:space="preserve">
    <value>Возвращает строку, являющуюся результатом конкатенации двух или более строковых значений.</value>
    <comment>Returns a string that is the result of concatenating two or more string values.</comment>
  </data>
  <data name="Functions.Contains(,)" xml:space="preserve">
    <value>Возвращает значение, указывающее входит ли указанная подстрока в текущую строку.</value>
    <comment>Returns a value indicating whether a specified substring occurs within this string.</comment>
  </data>
  <data name="Functions.Cos()" xml:space="preserve">
    <value>Возвращает косинус заданного угла.</value>
    <comment>Returns the cosine of the specified angle.</comment>
  </data>
  <data name="Functions.Cosh()" xml:space="preserve">
    <value>Возвращает гиперболический косинус заданного угла.</value>
    <comment>Returns the hyperbolic cosine of the specified angle.</comment>
  </data>
  <data name="Functions.Count()" xml:space="preserve">
    <value>Получает число элементов, содержащихся в указанной последовательности</value>
    <comment>Gets the number of elements actually contained in a specified sequence</comment>
  </data>
  <data name="Functions.CSByte()" xml:space="preserve">
    <value>Преобразует строковое представление числа в эквивалентное ему знаковое 8-битовое целое число.</value>
    <comment>Converts the string representation of a number to its 8-bit signed integer equivalent.</comment>
  </data>
  <data name="Functions.CShort()" xml:space="preserve">
    <value>Преобразует строковое представление числа в эквивалентное ему знаковое 16-битовое целое число.</value>
    <comment>Converts the string representation of a number to its 16-bit signed integer equivalent.</comment>
  </data>
  <data name="Functions.CSng()" xml:space="preserve">
    <value>Преобразует строковое представление числа в эквивалентное ему чсило одиночной точности с плавающей запятой.</value>
    <comment>Converts the string representation of a number to its single-precision floating-point number equivalent.</comment>
  </data>
  <data name="Functions.CStr()" xml:space="preserve">
    <value>Пытается вычислить указанное выражение и возвращает результат в виде строки.</value>
    <comment>Tries to evaluate the specified expression and return result as a string.</comment>
  </data>
  <data name="Functions.CType(,)" xml:space="preserve">
    <value>Возвращает объект указанного типа, значение которого эквивалентна указанному объекту.</value>
    <comment>Returns an object of the specified type and whose value is equivalent to the specified object.</comment>
  </data>
  <data name="Functions.CUint()" xml:space="preserve">
    <value>Преобразует строковое представление числа в эквивалентное ему беззнаковое 32-битовое целое число.</value>
    <comment>Converts the string representation of a number to its 32-bit unsigned integer equivalent.</comment>
  </data>
  <data name="Functions.CULong()" xml:space="preserve">
    <value>Преобразует строковое представление числа в эквивалентное ему беззнаковое 64-битовое целое число.</value>
    <comment>Converts the string representation of a number to its 64-bit unsigned integer equivalent.</comment>
  </data>
  <data name="Functions.CUShort()" xml:space="preserve">
    <value>Преобразует строковое представление числа в эквивалентное ему беззнаковое16-битовое целое число.</value>
    <comment>Converts the string representation of a number to its 16-bit unsigned integer equivalent.</comment>
  </data>
  <data name="Functions.DateDiffDay(,)" xml:space="preserve">
    <value>Подсчитывает количество дней между двумя не пустыми датами.</value>
    <comment>Counts the number of day boundaries between two non-nullable dates.</comment>
  </data>
  <data name="Functions.DateDiffHour(,)" xml:space="preserve">
    <value>Подсчитывает количество часов между двумя не пустыми датами.</value>
    <comment>Counts the number of hour boundaries between two non-nullable dates.</comment>
  </data>
  <data name="Functions.DateDiffMilliSecond(,)" xml:space="preserve">
    <value>Подсчитывает количество миллисекунд между двумя не пустыми датами.</value>
    <comment>Counts the number of milliseconds boundaries between two non-nullable dates.</comment>
  </data>
  <data name="Functions.DateDiffMinute(,)" xml:space="preserve">
    <value>Подсчитывает количество минут между двумя не пустыми датами.</value>
    <comment>Counts the number of minutes boundaries between two non-nullable dates.</comment>
  </data>
  <data name="Functions.DateDiffSecond(,)" xml:space="preserve">
    <value>Подсчитывает количество секунд между двумя не пустыми датами.</value>
    <comment>Counts the number of seconds boundaries between two non-nullable dates.</comment>
  </data>
  <data name="Functions.DateDiffTick(,)" xml:space="preserve">
    <value>Подсчитывает количество тактов между двумя не пустыми датами.</value>
    <comment>Counts the number of ticks boundaries between two non-nullable dates.</comment>
  </data>
  <data name="Functions.EndsWith(,)" xml:space="preserve">
    <value>Определяет, совпадает ли конец этой строки с указанной строкой.</value>
    <comment>Determines whether the end of this string instance matches a specified string.</comment>
  </data>
  <data name="Functions.Exp()" xml:space="preserve">
    <value>Возвращает e (основание натуральных логарифмов), возведенное в указанную степень.</value>
    <comment>Returns e (the base of natural logarithms) raised to the specified power.</comment>
  </data>
  <data name="Functions.First()" xml:space="preserve">
    <value>Возвращает первый элемент указанной последовательности.</value>
    <comment>Returns the first element of a specified  sequence.</comment>
  </data>
  <data name="Functions.Floor()" xml:space="preserve">
    <value>Возвращает наибольшее целое число, которое меньше или равно заданному десятичному или double числу.</value>
    <comment>Returns the largest integer that's less than or equal to the specified decimal or double number.</comment>
  </data>
  <data name="Functions.GetDate()" xml:space="preserve">
    <value>Получает дату представленную указанным значением System.DateTime.</value>
    <comment>Gets the date component of the specified System.DateTime value.</comment>
  </data>
  <data name="Functions.GetDay()" xml:space="preserve">
    <value>Получает день месяца представленный указанным значением System.DateTime.</value>
    <comment>Gets the day of the month represented by specified System.DateTime value.</comment>
  </data>
  <data name="Functions.GetDayOfWeek()" xml:space="preserve">
    <value>Получает день недели представленный указанным значением System.DateTime.</value>
    <comment>Gets the day of the week represented by the specified System.DateTime value.</comment>
  </data>
  <data name="Functions.GetDayOfYear()" xml:space="preserve">
    <value>Получает день в году представленный указанным значением System.DateTime.</value>
    <comment>Gets the day of the year represented by the specified System.DateTime value.</comment>
  </data>
  <data name="Functions.GetHour()" xml:space="preserve">
    <value>Получает компанент часов представленный указанным значением System.DateTime.</value>
    <comment>Gets the hour component of the specified System.DateTime value.</comment>
  </data>
  <data name="Functions.GetMilliSecond()" xml:space="preserve">
    <value>Получает компанент миллисекунд представленный указанным значением System.DateTime.</value>
    <comment>Gets the milliSecond component of the specified System.DateTime value.</comment>
  </data>
  <data name="Functions.GetMinute()" xml:space="preserve">
    <value>Получает компанент минут представленный указанным значением System.DateTime.</value>
    <comment>Gets the minute component of the specified System.DateTime value.</comment>
  </data>
  <data name="Functions.GetMonth()" xml:space="preserve">
    <value>Получает месяц представленный указанным значением System.DateTime.</value>
    <comment>Gets the month component of the specified System.DateTime value.</comment>
  </data>
  <data name="Functions.GetSecond()" xml:space="preserve">
    <value>Получает компанент секунд представленный указанным значением System.DateTime.</value>
    <comment>Gets the seconds component of the specified System.DateTime value.</comment>
  </data>
  <data name="Functions.GetTimeOfDay()" xml:space="preserve">
    <value>Получает время дня представленное указанным значением System.DateTime.</value>
    <comment>Gets the time of day for the specified System.DateTime value.</comment>
  </data>
  <data name="Functions.GetYear()" xml:space="preserve">
    <value>Получает год представленный указанным значением System.DateTime.</value>
    <comment>Gets the year component of the specified System.DateTime value.</comment>
  </data>
  <data name="Functions.Iif(,,)" xml:space="preserve">
    <value>Возвращает оценку одного из двух выражений, в зависимости от условия.</value>
    <comment>Returns the evaluation of one of two expressions, depending on the condition.</comment>
  </data>
  <data name="Functions.Insert(,,)" xml:space="preserve">
    <value>Возвращает новую строку, в которой указанная строка вставляется в текущую строку в указанной позиции.</value>
    <comment>Returns a new string in which a specified string is inserted at a specified index position in this instance.</comment>
  </data>
  <data name="Functions.InStr(,)" xml:space="preserve">
    <value>Проверяет выражение на наличие в нем другого выражения и возвращает начальную позицию, если такое нашлось.</value>
    <comment>Searches an expression for another expression and returns its starting position if found.</comment>
  </data>
  <data name="Functions.InStr(,,)" xml:space="preserve">
    <value>Проверяет выражение, начиная с заданной позиции, на наличие в нем другого выражения и возвращает начальную позицию, если такое нашлось.</value>
    <comment>Searches an expression for another expression and returns its starting position if found, starting from the specified position.</comment>
  </data>
  <data name="Functions.IsNull()" xml:space="preserve">
    <value>Возвращает значение True, если указанное значение является нулем.</value>
    <comment>Returns True if the specified Value is NULL.</comment>
  </data>
  <data name="Functions.Last()" xml:space="preserve">
    <value>Возвращает последний элемент в указанной последовательности.</value>
    <comment>Returns the last element of a specified  sequence.</comment>
  </data>
  <data name="Functions.LCase()" xml:space="preserve">
    <value>Возвращает символьное выражение после преобразования символов верхнего регистра в символы нижнего регистра.</value>
    <comment>Returns a character expression after converting uppercase character data to lowercase.</comment>
  </data>
  <data name="Functions.Len()" xml:space="preserve">
    <value>Возвращает количество символов в указанном строковом выражении.</value>
    <comment>Returns the number of characters of the specified string expression.</comment>
  </data>
  <data name="Functions.Log()" xml:space="preserve">
    <value>Возвращает натуральный (по основанию е) логарифм заданного числа.</value>
    <comment>Returns the natural (base e) logarithm of a specified number.</comment>
  </data>
  <data name="Functions.Log(,)" xml:space="preserve">
    <value>Возвращает логарифм заданного числа с указанным основанием логарифма.</value>
    <comment>Returns the logarithm of a specified number in a specified base.</comment>
  </data>
  <data name="Functions.Log10()" xml:space="preserve">
    <value>Возвращает десятичный логарифм указанного числа.</value>
    <comment>Returns the base 10 logarithm of a specified number.</comment>
  </data>
  <data name="Functions.LSet(,)" xml:space="preserve">
    <value>Возвращает новую строку указанной длины, в которых начало текущей строки заполняется пробелами.</value>
    <comment>Returns a new string of a specified length in which the beginning of the current string is padded with spaces.</comment>
  </data>
  <data name="Functions.LSet(,,)" xml:space="preserve">
    <value>Возвращает новую строку указанной длины, в которых начало текущей строки заполняется указанным символом.</value>
    <comment>Returns a new string of a specified length in which the beginning of the current string is padded with a specified character.</comment>
  </data>
  <data name="Functions.Max()" xml:space="preserve">
    <value>Возвращает максимальное значение в указанной последовательности чисел (или перечисления).</value>
    <comment>Returns the maximum value in a specified sequence of numbers (or enumerable).</comment>
  </data>
  <data name="Functions.Mid(,)" xml:space="preserve">
    <value>Возвращает строку, содержащую все символы, начиная с указанной позиции в строке.</value>
    <comment>Returns a string that contains all the characters starting from a specified position in a string.</comment>
  </data>
  <data name="Functions.Mid(,,)" xml:space="preserve">
    <value>Возвращает строку, содержащую указанное количество символов, начиная с указанной позиции в строке.</value>
    <comment>Returns a string that contains a specified number of characters starting from a specified position in a string.</comment>
  </data>
  <data name="Functions.Min()" xml:space="preserve">
    <value>Возвращает минимальное значение в заданной последовательности чисел (или перечисления).</value>
    <comment>Returns the minimum value in a specified sequence of numbers (or enumerable).</comment>
  </data>
  <data name="Functions.Now()" xml:space="preserve">
    <value>Получает объект System.DateTime, который устанавливается на текущую дату и время данного компьютера (местное время).</value>
    <comment>Gets a System.DateTime object that is set to the current date and time on this computer, expressed as the local time.</comment>
  </data>
  <data name="Functions.Pow(,)" xml:space="preserve">
    <value>Возвращает указанное число, возведенное в указанную степень.</value>
    <comment>Returns a specified number raised to the specified power.</comment>
  </data>
  <data name="Functions.Rand()" xml:space="preserve">
    <value>Возвращает неотрицательное случайное число.</value>
    <comment>Returns a nonnegative random number.</comment>
  </data>
  <data name="Functions.RandBetween()" xml:space="preserve">
    <value>Возвращает случайное число в заданном диапазоне.</value>
    <comment>Returns a random number within a specified range.</comment>
  </data>
  <data name="Functions.Remove(,)" xml:space="preserve">
    <value>Удаляет все указанные символы заданной строки.</value>
    <comment>Deletes all specified characters specified string.</comment>
  </data>
  <data name="Functions.Remove(,,)" xml:space="preserve">
    <value>Удаляет все указанные символы заданной строки, начиная с указанной позиции.</value>
    <comment>Deletes all specified characters specified string, beginning at a specified position.</comment>
  </data>
  <data name="Functions.Replace(,,)" xml:space="preserve">
    <value>Заменяет все вхождения заданной строки на указанную строку.</value>
    <comment>Replaces all occurrences of a specified string value with another string value.</comment>
  </data>
  <data name="Functions.RSet(,)" xml:space="preserve">
    <value>Возвращает новую строку указанной длины, в которой конец текущей строки заполняются пробелами.</value>
    <comment>Returns a new string of a specified length in which the end of the current string is padded with spaces.</comment>
  </data>
  <data name="Functions.RSet(,,)" xml:space="preserve">
    <value>Возвращает новую строку указанной длины, в которой конец текущей строки заполняются указанным символом.</value>
    <comment>Returns a new string of a specified length in which the end of the current string is padded with a specified character.</comment>
  </data>
  <data name="Functions.Sign()" xml:space="preserve">
    <value>Возвращает целочисленное значение, указывающее знак числа.</value>
    <comment>Returns an integer value indicating the sign of a number.</comment>
  </data>
  <data name="Functions.Sin()" xml:space="preserve">
    <value>Возвращает синус заданного угла.</value>
    <comment>Returns the sine of the specified angle.</comment>
  </data>
  <data name="Functions.Sinh()" xml:space="preserve">
    <value>Возвращает гиперболический синус заданного угла.</value>
    <comment>Returns the hyperbolic sine of the specified angle.</comment>
  </data>
  <data name="Functions.Sqrt()" xml:space="preserve">
    <value>Возвращает квадратный корень из указанного числа.</value>
    <comment>Returns the square root of a specified number.</comment>
  </data>
  <data name="Functions.StartsWith(,)" xml:space="preserve">
    <value>Определяет, совпадает ли начало данного экземпляра строки с указанной строкой.</value>
    <comment>Determines whether the beginning of this string instance matches a specified string.</comment>
  </data>
  <data name="Functions.StrReverse()" xml:space="preserve">
    <value>Возвращает строковое значение в обратном порядке.</value>
    <comment>Returns the reverse order of a string value.</comment>
  </data>
  <data name="Functions.Sum()" xml:space="preserve">
    <value>Вычисляет сумму заданной последовательности чисел (или перечисления).</value>
    <comment>Computes the sum of a specified  sequence of numbers  (or enumerable).</comment>
  </data>
  <data name="Functions.Tan()" xml:space="preserve">
    <value>Возвращает тангенс заданного угла.</value>
    <comment>Returns the tangent of the specified angle.</comment>
  </data>
  <data name="Functions.Tanh()" xml:space="preserve">
    <value>Возвращает гиперболический тангенс заданного угла.</value>
    <comment>Returns the hyperbolic tangent of the specified angle.</comment>
  </data>
  <data name="Functions.Today()" xml:space="preserve">
    <value>Получает текущую дату.</value>
    <comment>Gets the current date.</comment>
  </data>
  <data name="Functions.Trim()" xml:space="preserve">
    <value>Удаляет пробельный символ типа char(32) или другие указанные символы с начала или конца строки.</value>
    <comment>Removes the space character char(32) or other specified characters from the start or end of a string.</comment>
  </data>
  <data name="Functions.UCase()" xml:space="preserve">
    <value>Возвращает символьное выражение со строчными символами преобразованное в верхний регистр.</value>
    <comment>Returns a character expression with lowercase character data converted to uppercase.</comment>
  </data>
  <data name="Functions.UtcNow()" xml:space="preserve">
    <value>Получает System.DateTime, который устанавливается на текущую дату и время данного компьютера, выраженные как всемирное Координированное время (UTC).</value>
    <comment>Gets a System.DateTime object that is set to the current date and time on this computer, expressed as the Coordinated Universal Time (UTC).</comment>
  </data>
  <data name="Operators.And" xml:space="preserve">
    <value>Выполняет логическую конъюнкцию двух выражений.</value>
    <comment>Performs a logical conjunction on two expressions.</comment>
  </data>
  <data name="Operators.Concat" xml:space="preserve">
    <value>Создает строку конкатенацию двух выражений.</value>
    <comment>Generates a string concatenation of two expressions.</comment>
  </data>
  <data name="Operators.Divide" xml:space="preserve">
    <value>Делит два числа и возвращает результат с плавающей точкой.</value>
    <comment>Divides two numbers and returns a floating-point result.</comment>
  </data>
  <data name="Operators.Equal" xml:space="preserve">
    <value>Возвращает логическое значение, которое указывает, равны ли левое и правое выражения.</value>
    <comment>Returns a Boolean value that indicates whether the left and right expressions are equal.</comment>
  </data>
  <data name="Operators.GreaterOrEqual" xml:space="preserve">
    <value>Возвращает логическое значение, которое указывает, является ли левое выражение больше чем правое выражение или равно ему.</value>
    <comment>Returns a Boolean value that indicates whether the left expression is greater than right expression or equal.</comment>
  </data>
  <data name="Operators.GreaterThan" xml:space="preserve">
    <value>Возвращает логическое значение, которое указывает, является ли левое выражение больше чем правое выражение.</value>
    <comment>Returns a Boolean value that indicates whether the left expression is greater than right expression.</comment>
  </data>
  <data name="Operators.LessOrEqual" xml:space="preserve">
    <value>Возвращает логическое значение, которое указывает, является ли левое выражение меньше чем правое выражение или равно ему.</value>
    <comment>Returns a Boolean value that indicates whether the left expression is less than right expression or equal.</comment>
  </data>
  <data name="Operators.LessThan" xml:space="preserve">
    <value>Возвращает логическое значение, которое указывает, является ли левое выражение меньше чем правое выражение.</value>
    <comment>Returns a Boolean value that indicates whether the left expression is less than right expression.</comment>
  </data>
  <data name="Operators.Minus" xml:space="preserve">
    <value>Находит разницу между двумя числами или указывает на отрицательное значение числового выражения.</value>
    <comment>Finds the difference between two numbers or indicates the negative value of a numeric expression.</comment>
  </data>
  <data name="Operators.Modulus" xml:space="preserve">
    <value>Возвращает остаток от деления двух чисел.</value>
    <comment>Divides two numbers and returns only the remainder.</comment>
  </data>
  <data name="Operators.Multiply" xml:space="preserve">
    <value>Умножает два числа.</value>
    <comment>Multiplies two numbers.</comment>
  </data>
  <data name="Operators.Not" xml:space="preserve">
    <value>Выполняет логическое отрицание для выражения.</value>
    <comment>Performs logical negation on an expression.</comment>
  </data>
  <data name="Operators.NotEqual" xml:space="preserve">
    <value>Возвращает логическое значение, которое указывает, является ли левое и правое выражения не равными.</value>
    <comment>Returns a Boolean value that indicates whether the left and right expressions are not equal.</comment>
  </data>
  <data name="Operators.Or" xml:space="preserve">
    <value>Выполняет логическую дизъюнкцию двух выражений.</value>
    <comment>Performs a logical disjunction on two expressions.</comment>
  </data>
  <data name="Operators.Plus" xml:space="preserve">
    <value>Складывает два числа.</value>
    <comment>Sums two numbers.</comment>
  </data>
  <data name="Errors.CanNotFindFinalBracket" xml:space="preserve">
    <value>Не могу найти закрывающую скобку.</value>
    <comment>Can't find final bracket.</comment>
  </data>
  <data name="Errors.ComparisonError" xml:space="preserve">
    <value>An error occurred when comparing values.</value>
    <comment>An error occurred when comparing values.</comment>
  </data>
  <data name="Errors.DuplicateAliasError" xml:space="preserve">
    <value>An error occurred when added a duplicate of alias.</value>
    <comment>An error occurred when added a duplicate of alias.</comment>
  </data>
  <data name="Errors.IncorrectAliasError" xml:space="preserve">
    <value>An error occurred when the alias coincided with a field from DataSource.</value>
    <comment>An error occurred when the alias coincided with a field from DataSource.</comment>
  </data>
  <data name="Errors.IncorrectDateFormat" xml:space="preserve">
    <value>Неверный формат даты.</value>
    <comment>Incorrect date format.</comment>
  </data>
  <data name="Arguments.Round.digits" xml:space="preserve">
    <value>The number of fractional digits in the return value.</value>
    <comment>The number of fractional digits in the return value.</comment>
  </data>
  <data name="Arguments.Round.value" xml:space="preserve">
    <value>A double-precision floating-point number to be rounded.</value>
    <comment>A double-precision floating-point number to be rounded.</comment>
  </data>
  <data name="Functions.Round()" xml:space="preserve">
    <value>Rounds a double-precision floating-point value to a specified number of fractional digits.</value>
    <comment>Rounds a double-precision floating-point value to a specified number of fractional digits.</comment>
  </data>
  <data name="Categories.Aggregate" xml:space="preserve">
    <value>Агрегатные</value>
    <comment>Aggregate</comment>
  </data>
  <data name="Categories.Constants" xml:space="preserve">
    <value>Константы</value>
    <comment>Constants</comment>
  </data>
  <data name="Categories.Convert" xml:space="preserve">
    <value>Преобразования</value>
    <comment>Convert</comment>
  </data>
  <data name="Categories.DateTime" xml:space="preserve">
    <value>Дата-время</value>
    <comment>DateTime</comment>
  </data>
  <data name="Categories.Fields" xml:space="preserve">
    <value>Поля</value>
    <comment>Fields</comment>
  </data>
  <data name="Categories.Functions" xml:space="preserve">
    <value>Функции</value>
    <comment>Functions</comment>
  </data>
  <data name="Categories.Logical" xml:space="preserve">
    <value>Логические</value>
    <comment>Logical</comment>
  </data>
  <data name="Categories.Math" xml:space="preserve">
    <value>Математические</value>
    <comment>Math</comment>
  </data>
  <data name="Categories.Operators" xml:space="preserve">
    <value>Операторы</value>
    <comment>Operators</comment>
  </data>
  <data name="Categories.Text" xml:space="preserve">
    <value>Текстовые</value>
    <comment>Text</comment>
  </data>
</root>