<ResourceDictionary mc:Ignorable="PresentationOptions" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:c1sched="clr-namespace:C1.WPF.Schedule" 
                    xmlns:sys="clr-namespace:System;assembly=mscorlib" 
                    xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options" 
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006">

	<!-- Font settings -->
	<FontFamily x:Key="C1Calendar_Font">Segoe UI</FontFamily>
	<sys:Double x:Key="C1Calendar_FontSize">11</sys:Double>
	<SolidColorBrush x:Key="C1Calendar_Foreground_Brush" Color="Black" PresentationOptions:Freeze="true" />
	<SolidColorBrush x:Key="C1Calendar_Background" Color="White" PresentationOptions:Freeze="true" />
    <!-- Month Header resources -->
    <FontFamily x:Key="C1Calendar_MonthHeader_Font">Calibri</FontFamily>
	<sys:Double x:Key="C1Calendar_MonthHeader_FontSize">13</sys:Double>
	<SolidColorBrush x:Key="C1Calendar_MonthHeader_Brush" Color="#FFBDDBFF" PresentationOptions:Freeze="true" />
	<SolidColorBrush x:Key="C1Calendar_MonthHeaderText_Brush" Color="Black" PresentationOptions:Freeze="true" />
	<FontWeight x:Key="C1Calendar_MonthHeader_FontWeight">Bold</FontWeight>
    
	<SolidColorBrush x:Key="C1Calendar_NavArrow_Brush" Color="#FF6F9DD9" PresentationOptions:Freeze="true" />
	<!-- DaysOfWeekPresenter border -->
	<Thickness x:Key="C1Calendar_DaysOfWeekBorder_Thickness">0,0,0,0.5</Thickness>
    <Thickness x:Key="C1Calendar_WeekNumbersBorder_Thickness">0,0,0.5,0</Thickness>
    <SolidColorBrush x:Key="C1Calendar_DaysOfWeekBorder_Brush" Color="#FF9CC7FF" PresentationOptions:Freeze="true" />
    <!-- Calendar days -->
	<SolidColorBrush x:Key="C1Calendar_SelectedDate_Brush" Color="#FFFBC84F" PresentationOptions:Freeze="true" />
	<SolidColorBrush x:Key="C1Calendar_Today_Brush" Color="#FFBB5503" PresentationOptions:Freeze="true" />
	<Thickness x:Key="C1Calendar_TodayBorder_Thickness">2,1,2,1</Thickness>
	<SolidColorBrush x:Key="C1Calendar_AdjucentDateText_Brush" Color="LightGray" PresentationOptions:Freeze="true" />
	<SolidColorBrush x:Key="C1Calendar_Weekend_Brush" Color="Black" PresentationOptions:Freeze="true" />
	<SolidColorBrush x:Key="C1Calendar_Border_Brush" Color="#FF5A8ECE" />

	<Style x:Key="ICwoPaddingStyle" TargetType="{x:Type ItemsControl}">
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ItemsControl}">
					<Border Background="{TemplateBinding Background}" x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
						<ItemsPresenter x:Name="ItemsPresenter" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="LBwoPaddingStyle" TargetType="{x:Type ListBox}" BasedOn="{StaticResource ICwoPaddingStyle}">
		<Style.Resources>
			<Style TargetType="{x:Type ListBoxItem}">
				<Setter Property="Padding" Value="0" />
			</Style>
		</Style.Resources>

	</Style>
	<Style TargetType="{x:Type c1sched:C1CalendarItemPresenter}" BasedOn="{StaticResource LBwoPaddingStyle}" />

	<Style TargetType="{x:Type c1sched:DaySlotPresenter}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type c1sched:DaySlotPresenter}">
					<ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type c1sched:DayOfWeekSlotPresenter}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type c1sched:DayOfWeekSlotPresenter}">
					<ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
    
    <Style TargetType="{x:Type c1sched:DaysOfWeekPresenter}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type c1sched:DaysOfWeekPresenter}">
					<ItemsPresenter />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <Style TargetType="{x:Type c1sched:WeekNumberSlotPresenter}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c1sched:WeekNumberSlotPresenter}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="{Binding Path=WeekNumberSlot.IsEmpty, RelativeSource={RelativeSource TemplatedParent},           ConverterParameter=Invert, Converter={x:Static c1sched:BooleanToVisibilityConverter.Default}}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type c1sched:WeekNumbersPresenter}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c1sched:WeekNumbersPresenter}">
                    <ItemsPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <UniformGrid Rows="6" Columns="1" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- C1CalendarItem -->
	<Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type c1sched:C1CalendarItem},   ResourceId=BaseMonthCalendarStyle}" TargetType="{x:Type c1sched:C1CalendarItem}">
		<Style.Resources>
			<ControlTemplate x:Key="looklessButton" TargetType="{x:Type ToggleButton}">
				<Border>
					<ContentPresenter />
				</Border>
			</ControlTemplate>
            <Style TargetType="{x:Type RepeatButton}" x:Key="NavigationButtonStyle">
                <Setter Property="Focusable" Value="False" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Margin" Value="5,2,5,2" />
            </Style>
            <Style x:Key="listSelectionCombo" TargetType="{x:Type ComboBox}">
				<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
				<Setter Property="Background" Value="Transparent" />
				<Setter Property="Margin" Value="2" />
				<Setter Property="Padding" Value="1" />
				<Setter Property="Focusable" Value="False" />
				<Setter Property="VerticalAlignment" Value="Center" />
				<Setter Property="VerticalContentAlignment" Value="Center" />
				<Setter Property="HorizontalContentAlignment" Value="Center" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ComboBox}">
							<Border Background="{TemplateBinding Background}" x:Name="brd" KeyboardNavigation.DirectionalNavigation="None" KeyboardNavigation.TabNavigation="None" Margin="{TemplateBinding Margin}" SnapsToDevicePixels="true">
								<Grid>
									<Popup AllowsTransparency="true" Name="PART_Popup" Placement="Center" PlacementTarget="{Binding ElementName=SelectedItemBorder}" IsOpen="{TemplateBinding IsDropDownOpen}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
										<Border x:Name="DropDownBorder" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderThickness="1" TextBlock.Foreground="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}">
											<ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
										</Border>
									</Popup>
									<ToggleButton x:Name="SelectedItemBorder" Margin="{TemplateBinding Padding}" Background="Transparent" Focusable="False" IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Release" Foreground="{TemplateBinding Foreground}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Template="{StaticResource looklessButton}">
                                        <ContentPresenter TextBlock.FontFamily="{TemplateBinding FontFamily}"
                                                          TextBlock.FontSize="{TemplateBinding FontSize}" TextBlock.FontWeight="{TemplateBinding FontWeight}"
                                            Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
									</ToggleButton>
								</Grid>
							</Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="SelectedItemBorder" Property="Opacity" Value="0.7" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
					</Setter.Value>
				</Setter>
				<Setter Property="ItemContainerStyle">
					<Setter.Value>
						<Style TargetType="{x:Type ListBoxItem}">
							<Setter Property="Focusable" Value="False" />
						</Style>
					</Setter.Value>
				</Setter>
			</Style>
		</Style.Resources>
		<Setter Property="Height" Value="159" />
		<Setter Property="Width" Value="182" />
		<Setter Property="VerticalAlignment" Value="Top" />
		<Setter Property="HorizontalAlignment" Value="Left" />
		<Setter Property="Margin" Value="2" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type c1sched:C1CalendarItem}">
					<Border BorderBrush="{TemplateBinding BorderBrush}" Margin="{TemplateBinding Margin}" BorderThickness="{TemplateBinding BorderThickness}">
						<Grid Background="{TemplateBinding Background}">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="20" />
								<RowDefinition />
							</Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>

                            <DockPanel Background="{Binding Path=C1Calendar.MonthHeaderBackground}" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2">
                                <RepeatButton Name="prevMonth" DockPanel.Dock="Left" AutomationProperties.HelpText="Previous Month" Visibility="{Binding ShowPreviousButton, Converter={x:Static c1sched:BooleanToVisibilityConverter.Default}}" Command="c1sched:C1Calendar.PreviousMonthCommand" Foreground="{Binding Path=C1Calendar.NavigationButtonBrush}" Style="{StaticResource NavigationButtonStyle}">
                                    <RepeatButton.Template>
                                        <ControlTemplate>
                                            <Border Padding="{TemplateBinding Margin}" Background="Transparent">
                                                <Polygon x:Name="pol" Points="6,0 0,5 6,10" Fill="{TemplateBinding Foreground}" />
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter TargetName="pol" Property="Opacity" Value="0.6" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </RepeatButton.Template>
                                </RepeatButton>
                                <RepeatButton Name="nextMonth" DockPanel.Dock="Right" AutomationProperties.HelpText="Next Month" Visibility="{Binding ShowNextButton, Converter={x:Static c1sched:BooleanToVisibilityConverter.Default}}" Command="c1sched:C1Calendar.NextMonthCommand" Foreground="{Binding Path=C1Calendar.NavigationButtonBrush}" Style="{StaticResource NavigationButtonStyle}">
                                    <RepeatButton.Template>
                                        <ControlTemplate>
                                            <Border Padding="{TemplateBinding Margin}" Background="Transparent">
                                                <Polygon x:Name="pol" Points="0,0 6,5 0,10" Fill="{TemplateBinding Foreground}" />
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter TargetName="pol" Property="Opacity" Value="0.6" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </RepeatButton.Template>
                                </RepeatButton>
                                <StackPanel Name="inMmcRoot" Orientation="Horizontal" 
                                             HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <ComboBox x:Name="PART_MonthsComboBox" Style="{StaticResource listSelectionCombo}" 
                                              FontFamily="{Binding Path=C1Calendar.MonthHeaderFontFamily}" FontSize="{Binding Path=C1Calendar.MonthHeaderFontSize}" FontWeight="{Binding Path=C1Calendar.MonthHeaderFontWeight}"
                                              HorizontalAlignment="Right" Foreground="{Binding Path=C1Calendar.MonthHeaderForeground}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate DataType="{x:Type c1sched:DateTimeInfo}">
                                                <TextBlock Text="{Binding Path=MonthFullName}" />
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>
                                    <ComboBox x:Name="PART_YearsComboBox" Style="{StaticResource listSelectionCombo}" 
                                              FontFamily="{Binding Path=C1Calendar.MonthHeaderFontFamily}" FontSize="{Binding Path=C1Calendar.MonthHeaderFontSize}" FontWeight="{Binding Path=C1Calendar.MonthHeaderFontWeight}"
                                              HorizontalAlignment="Left" Foreground="{Binding Path=C1Calendar.MonthHeaderForeground}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate DataType="{x:Type c1sched:DateTimeInfo}">
                                                <TextBlock Text="{Binding Path=Year}" />
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>
                                </StackPanel>
                            </DockPanel>

                            <Border BorderThickness="{DynamicResource C1Calendar_DaysOfWeekBorder_Thickness}" Grid.Row="1" Grid.Column="1" BorderBrush="{Binding Path=C1Calendar.DaysOfWeekBorderBrush}" Margin="10,0,10,0">
								<c1sched:DaysOfWeekPresenter Margin="0,0,-5,0" />
							</Border>
                            <Border Grid.Row="2" Grid.Column="0" Margin="0,0,-10,0" BorderThickness="{DynamicResource C1Calendar_WeekNumbersBorder_Thickness}" BorderBrush="{Binding Path=C1Calendar.DaysOfWeekBorderBrush}" Visibility="{Binding Path=C1Calendar.ShowWeekNumbers, Converter={x:Static c1sched:BooleanToVisibilityConverter.Default}}">
                                <!-- display week numbers -->
                                <c1sched:WeekNumbersPresenter Margin="5,0,5,0" FontSize="8" />
                            </Border>
                            <c1sched:C1CalendarItemPresenter Grid.Row="2" Grid.Column="1" Margin="10,0,5,0" />
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="DaysPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<UniformGrid Columns="7" Rows="6">
						<UniformGrid.InputBindings>
							<KeyBinding Key="Home" Command="ComponentCommands.MoveToHome" />
							<KeyBinding Key="Left" Command="ComponentCommands.MoveLeft" CommandParameter="-1" />
							<KeyBinding Key="Right" Command="ComponentCommands.MoveRight" CommandParameter="1" />
							<KeyBinding Key="Down" Command="ComponentCommands.MoveDown" CommandParameter="7" />
							<KeyBinding Key="Up" Command="ComponentCommands.MoveUp" CommandParameter="-7" />
							<KeyBinding Key="Left" Modifiers="Shift" Command="ComponentCommands.ExtendSelectionLeft" CommandParameter="-1" />
							<KeyBinding Key="Right" Modifiers="Shift" Command="ComponentCommands.ExtendSelectionRight" CommandParameter="1" />
							<KeyBinding Key="Down" Modifiers="Shift" Command="ComponentCommands.ExtendSelectionDown" CommandParameter="7" />
							<KeyBinding Key="Up" Modifiers="Shift" Command="ComponentCommands.ExtendSelectionUp" CommandParameter="-7" />
						</UniformGrid.InputBindings>
					</UniformGrid>
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="DaysOfWeekPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<UniformGrid Columns="7" Rows="1" />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="DayOfWeekSlotTemplate">
			<Setter.Value>
				<DataTemplate>
					<TextBlock x:Name="DayOfWeekSlot" Text="{Binding Path=DayShortestName}" HorizontalAlignment="Center" VerticalAlignment="Center" />
					<DataTemplate.Triggers>
						<DataTrigger Binding="{Binding Path=IsWeekend}" Value="True">
							<Setter TargetName="DayOfWeekSlot" Property="Foreground" Value="{Binding Path=Owner.C1Calendar.WeekendBrush}" />
						</DataTrigger>
					</DataTemplate.Triggers>
				</DataTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="DaySlotTemplate">
			<Setter.Value>
				<DataTemplate>
					<Border x:Name="NotEmptySlot" Background="Transparent">
						<TextBlock x:Name="NotEmptySlotText" Text="{Binding Path=Date.Day}" HorizontalAlignment="Center" VerticalAlignment="Center" />
					</Border>
					<DataTemplate.Triggers>
						<DataTrigger Binding="{Binding Path=IsWeekend}" Value="True">
							<Setter TargetName="NotEmptySlotText" Property="Foreground" Value="{Binding Path=Owner.C1Calendar.WeekendBrush}" />
						</DataTrigger>
						<DataTrigger Binding="{Binding Path=IsBolded}" Value="True">
							<Setter TargetName="NotEmptySlotText" Property="FontWeight" Value="Bold" />
						</DataTrigger>
						<DataTrigger Binding="{Binding Path=IsToday}" Value="True">
							<Setter TargetName="NotEmptySlot" Property="BorderBrush" Value="{Binding Path=Owner.C1Calendar.TodayBrush}" />
							<Setter TargetName="NotEmptySlot" Property="BorderThickness" Value="{DynamicResource C1Calendar_TodayBorder_Thickness}" />
						</DataTrigger>
						<DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
							<Setter TargetName="NotEmptySlot" Property="Background" Value="{Binding Path=Owner.C1Calendar.SelectedDayBrush}" />
                        </DataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding Path=Empty}" Value="false" />
								<Condition Binding="{Binding Path=IsAdjacent}" Value="true" />
							</MultiDataTrigger.Conditions>
							<Setter TargetName="NotEmptySlotText" Property="Foreground" Value="{Binding Path=Owner.C1Calendar.AdjacentMonthDayBrush}" />
						</MultiDataTrigger>
                        <DataTrigger Binding="{Binding Path=IsEnabled}" Value="False">
                            <Setter TargetName="NotEmptySlotText" Property="Foreground" Value="{Binding Path=Owner.C1Calendar.DisabledDayBrush}" />
                        </DataTrigger>
                    </DataTemplate.Triggers>
				</DataTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type c1sched:C1CalendarItem}" BasedOn="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type c1sched:C1CalendarItem},      ResourceId=BaseMonthCalendarStyle}}">
	</Style>

	<!-- End of C1CalendarItem -->

	<!-- C1Calendar -->
	<Style TargetType="{x:Type c1sched:C1Calendar}">
        <Setter Property="Foreground" Value="{DynamicResource C1Calendar_Foreground_Brush}" />
        <Setter Property="Background" Value="{DynamicResource C1Calendar_Background}" />
        <Setter Property="MonthHeaderBackground" Value="{DynamicResource C1Calendar_MonthHeader_Brush}" />
        <Setter Property="MonthHeaderForeground" Value="{DynamicResource C1Calendar_MonthHeaderText_Brush}" />
        <Setter Property="MonthHeaderFontFamily" Value="{DynamicResource C1Calendar_MonthHeader_Font}" />
        <Setter Property="MonthHeaderFontSize" Value="{DynamicResource C1Calendar_MonthHeader_FontSize}" />
        <Setter Property="MonthHeaderFontWeight" Value="{DynamicResource C1Calendar_MonthHeader_FontWeight}" />
        <Setter Property="NavigationButtonBrush" Value="{DynamicResource C1Calendar_NavArrow_Brush}" />
        <Setter Property="DaysOfWeekBorderBrush" Value="{DynamicResource C1Calendar_DaysOfWeekBorder_Brush}" />
        <Setter Property="AdjacentMonthDayBrush" Value="{DynamicResource C1Calendar_AdjucentDateText_Brush}" />
        <Setter Property="DisabledDayBrush" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
        <Setter Property="SelectedDayBrush" Value="{DynamicResource C1Calendar_SelectedDate_Brush}" />
        <Setter Property="TodayBrush" Value="{DynamicResource C1Calendar_Today_Brush}" />
        <Setter Property="WeekendBrush" Value="{DynamicResource C1Calendar_Weekend_Brush}" />
        <Setter Property="FontFamily" Value="{DynamicResource C1Calendar_Font}" />
        <Setter Property="FontSize" Value="{DynamicResource C1Calendar_FontSize}" />
		<Setter Property="Padding" Value="2" />
		<Setter Property="BorderBrush" Value="{DynamicResource C1Calendar_Border_Brush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type c1sched:C1Calendar}">
                    <Grid>
                        <Grid.Resources>
                            <SolidColorBrush x:Key="DisabledBrush" Color="#8CFFFFFF" />
                        </Grid.Resources>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                            <c1sched:C1CalendarPresenter Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}" />
                        </Border>
                        <Rectangle x:Name="DisabledVisual" Stretch="Fill" RadiusX="2" Visibility="{Binding IsEnabled, Converter={x:Static c1sched:BooleanToVisibilityConverter.Default}, ConverterParameter=Invert, RelativeSource={RelativeSource TemplatedParent}}" RadiusY="2" StrokeThickness="1" Stroke="{StaticResource DisabledBrush}" Fill="{StaticResource DisabledBrush}" Margin="0,2,0,2" />
                    </Grid>				
                </ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!-- End of C1Calendar -->

</ResourceDictionary>