<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="FilterTypes" xml:space="preserve">
    <value>Numerischer Filter|Datums-/Zeitfilter|Textfilter</value>
  </data>
  <data name="Conditions" xml:space="preserve">
    <value>Keine|Gleich|Ungleich|Größer als|Kleiner als|Größer oder gleich|Kleiner oder gleich|Enthält|Enthält nicht|Beginnt mit|Endet mit</value>
  </data>
  <data name="SubtotalFuncs" xml:space="preserve">
    <value>Summe|Anzahl|Durchschnitt|Maximum|Minimum|Erster|Letzter|Varianz|Standardabweichung|Varianz Grundgesamtheit|Standardabweichung Grundgesamtheit</value>
  </data>
  <data name="ShowTotalsColumn" xml:space="preserve">
    <value>Gesamtsummen Spalten anzeigen</value>
  </data>
  <data name="ShowTotalsRow" xml:space="preserve">
    <value>Gesamtsummen Zeilen anzeigen</value>
  </data>
  <data name="ShowZeros" xml:space="preserve">
    <value>Nullwerte anzeigen</value>
  </data>
  <data name="ShowDetailOnRightClick" xml:space="preserve">
    <value>Details bei Rechtsklick anzeigen</value>
  </data>
  <data name="ShowSelectionStatus" xml:space="preserve">
    <value>Auswahlstatus anzeigen</value>
  </data>
  <data name="ChartOptions" xml:space="preserve">
    <value>Diagrammoptionen</value>
  </data>
  <data name="GridOptions" xml:space="preserve">
    <value>Gitteroptionen</value>
  </data>
  <data name="ChartType" xml:space="preserve">
    <value>Diagrammtyp</value>
  </data>
  <data name="Palette" xml:space="preserve">
    <value>Palette</value>
  </data>
  <data name="ShowGridLines" xml:space="preserve">
    <value>Gitternetzlinien anzeigen</value>
  </data>
  <data name="ShowTitle" xml:space="preserve">
    <value>Titel anzeigen</value>
  </data>
  <data name="Stacked" xml:space="preserve">
    <value>Gestapelt</value>
  </data>
  <data name="ShowLegend" xml:space="preserve">
    <value>Legende anzeigen</value>
  </data>
  <data name="RawDataOptions" xml:space="preserve">
    <value>Rohdatenoptionen</value>
  </data>
  <data name="ShowRawData" xml:space="preserve">
    <value>Rohdaten anzeigen</value>
  </data>
  <data name="DateFormats" xml:space="preserve">
    <value>MMMM dd, yyyy|d|d/M/yy|dd/MM/yy|dd/MM/yyyy|MMM yyyy|MMMM yyyy|d-MMM-yy|d-MMM-yyyy|Benutzerdefiniert</value>
  </data>
  <data name="NumberFormats" xml:space="preserve">
    <value>Zahl|Währung|Prozent|Wissenschaftlich|Benutzerdefiniert</value>
  </data>
  <data name="None" xml:space="preserve">
    <value>Kein</value>
  </data>
  <data name="ChartTypes" xml:space="preserve">
    <value>Balken|Säule|Fläche|Linie|Punkt|Pie</value>
  </data>
  <data name="DecimalPlaces" xml:space="preserve">
    <value>Dezimalstellen:</value>
  </data>
  <data name="InvalidFormat" xml:space="preserve">
    <value>Ungültiges Format</value>
  </data>
  <data name="Sample" xml:space="preserve">
    <value>Beispiel</value>
  </data>
  <data name="UseThousandSeparator" xml:space="preserve">
    <value>1000er-Trennzeichen verwenden</value>
  </data>
  <data name="CustomFormat" xml:space="preserve">
    <value>Benutzerdefiniertes Format:</value>
  </data>
  <data name="BeginsWith" xml:space="preserve">
    <value>Beginnt mit ...</value>
  </data>
  <data name="Between" xml:space="preserve">
    <value>Zwischen ...</value>
  </data>
  <data name="ClearFilter" xml:space="preserve">
    <value>Filter entfernen</value>
  </data>
  <data name="Contains" xml:space="preserve">
    <value>Enthält ...</value>
  </data>
  <data name="CustomFilter" xml:space="preserve">
    <value>Benutzerdefninierter Filter ...</value>
  </data>
  <data name="DoesNotContain" xml:space="preserve">
    <value>Enthält nicht ...</value>
  </data>
  <data name="DoesNotEqual" xml:space="preserve">
    <value>Ungleich ...</value>
  </data>
  <data name="EndsWith" xml:space="preserve">
    <value>Endet mit ...</value>
  </data>
  <data name="Filter" xml:space="preserve">
    <value>Filter</value>
  </data>
  <data name="GreaterThan" xml:space="preserve">
    <value>Größer als ...</value>
  </data>
  <data name="GreaterThanOrEqualTo" xml:space="preserve">
    <value>Größer oder gleich ...</value>
  </data>
  <data name="LessThan" xml:space="preserve">
    <value>Kleiner als ...</value>
  </data>
  <data name="LessThanOrEqualTo" xml:space="preserve">
    <value>Kleiner oder gleich ...</value>
  </data>
  <data name="MnuEquals" xml:space="preserve">
    <value>Gleich ...</value>
  </data>
  <data name="SelectAll" xml:space="preserve">
    <value>(Alle auswählen)</value>
  </data>
  <data name="ActualSize" xml:space="preserve">
    <value>Tatsächliche Größe</value>
  </data>
  <data name="And" xml:space="preserve">
    <value>Und</value>
  </data>
  <data name="Bottom" xml:space="preserve">
    <value>Unten:</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Abbrechen</value>
  </data>
  <data name="Display" xml:space="preserve">
    <value>Anzeige</value>
  </data>
  <data name="FitToOnePage" xml:space="preserve">
    <value>An eine Seite anpassen</value>
  </data>
  <data name="FitToPageWidth" xml:space="preserve">
    <value>An Seitenbreite anpassen</value>
  </data>
  <data name="Format" xml:space="preserve">
    <value>Format</value>
  </data>
  <data name="HighValues" xml:space="preserve">
    <value>Obere Werte</value>
  </data>
  <data name="IncludeInReport" xml:space="preserve">
    <value>In Bericht aufnehmen</value>
  </data>
  <data name="Left" xml:space="preserve">
    <value>Links:</value>
  </data>
  <data name="LowValues" xml:space="preserve">
    <value>Untere Werte</value>
  </data>
  <data name="Margin" xml:space="preserve">
    <value>Rand:</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="OlapChart" xml:space="preserve">
    <value>Diagramm</value>
  </data>
  <data name="OlapGrid" xml:space="preserve">
    <value>Gitter</value>
  </data>
  <data name="Or" xml:space="preserve">
    <value>Oder</value>
  </data>
  <data name="Padding" xml:space="preserve">
    <value>Abstand</value>
  </data>
  <data name="RawData" xml:space="preserve">
    <value>Rohdaten</value>
  </data>
  <data name="Right" xml:space="preserve">
    <value>Rechts:</value>
  </data>
  <data name="Scaling" xml:space="preserve">
    <value>Skalierung:</value>
  </data>
  <data name="ShowItems" xml:space="preserve">
    <value>Elemente anzeigen mit dem Wert:</value>
  </data>
  <data name="Subtotals" xml:space="preserve">
    <value>Teilergebnisse</value>
  </data>
  <data name="Top" xml:space="preserve">
    <value>Oben:</value>
  </data>
  <data name="WeighBy" xml:space="preserve">
    <value>Wiegen nach:</value>
  </data>
  <data name="ChooseFields" xml:space="preserve">
    <value>Der Tabelle hinzuzufügende Felder auswählen:</value>
  </data>
  <data name="ColumnFields" xml:space="preserve">
    <value>Spaltenfelder</value>
  </data>
  <data name="CurrentDate" xml:space="preserve">
    <value>Aktuelles Datum</value>
  </data>
  <data name="CurrentTime" xml:space="preserve">
    <value>Aktuelle Uhrzeit</value>
  </data>
  <data name="DeferUpdates" xml:space="preserve">
    <value>Updates verschieben</value>
  </data>
  <data name="DragFields" xml:space="preserve">
    <value>Felder zwischen den Bereichen unten ziehen.:</value>
  </data>
  <data name="Footer" xml:space="preserve">
    <value>Fußzeile:</value>
  </data>
  <data name="Header" xml:space="preserve">
    <value>Kopfzeile:</value>
  </data>
  <data name="HeaderFooter" xml:space="preserve">
    <value>Kopf-/Fußzeile</value>
  </data>
  <data name="MoveDown" xml:space="preserve">
    <value>Nach unten</value>
  </data>
  <data name="MoveToBeginning" xml:space="preserve">
    <value>An den Anfang</value>
  </data>
  <data name="MoveToColumnFields" xml:space="preserve">
    <value>Zu den Spaltenfeldern</value>
  </data>
  <data name="MoveToEnd" xml:space="preserve">
    <value>Ans Ende</value>
  </data>
  <data name="MoveToFilterFields" xml:space="preserve">
    <value>Zu den Filterfeldern</value>
  </data>
  <data name="MoveToRowFields" xml:space="preserve">
    <value>Zu den Zeilenfeldern</value>
  </data>
  <data name="MoveToValueFields" xml:space="preserve">
    <value>Zu den Wertfeldern</value>
  </data>
  <data name="MoveUp" xml:space="preserve">
    <value>Nach oben</value>
  </data>
  <data name="Page" xml:space="preserve">
    <value>Seite</value>
  </data>
  <data name="PageNumber" xml:space="preserve">
    <value>Seitenzahl</value>
  </data>
  <data name="RemoveField" xml:space="preserve">
    <value>Feld entfernen</value>
  </data>
  <data name="ReportContent" xml:space="preserve">
    <value>Berichtsinhalt</value>
  </data>
  <data name="RowFields" xml:space="preserve">
    <value>Zeilenfelder</value>
  </data>
  <data name="Separator" xml:space="preserve">
    <value>Trennzeichen</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Titel</value>
  </data>
  <data name="TotalPageCount" xml:space="preserve">
    <value>Gesamtseitenzahl</value>
  </data>
  <data name="Values" xml:space="preserve">
    <value>Werte</value>
  </data>
  <data name="FieldSettings" xml:space="preserve">
    <value>Feldeinstellungen ...</value>
  </data>
  <data name="Chart" xml:space="preserve">
    <value>Diagramm</value>
  </data>
  <data name="CustomizeGridView" xml:space="preserve">
    <value>Gitteransicht anpassen</value>
  </data>
  <data name="GrandTotals" xml:space="preserve">
    <value>Gesamtergebnisse</value>
  </data>
  <data name="LoadViewFromFile" xml:space="preserve">
    <value>Olap-Ansicht aus Datei laden</value>
  </data>
  <data name="Options" xml:space="preserve">
    <value>Optionen ...</value>
  </data>
  <data name="Print" xml:space="preserve">
    <value>Drucken</value>
  </data>
  <data name="Redo" xml:space="preserve">
    <value>Wiederholen</value>
  </data>
  <data name="Report" xml:space="preserve">
    <value>Bericht</value>
  </data>
  <data name="SaveViewToFile" xml:space="preserve">
    <value>OLAP-Ansicht in Datei speichern</value>
  </data>
  <data name="TotalColumns" xml:space="preserve">
    <value>Gesamtsumme Spalten</value>
  </data>
  <data name="TotalRows" xml:space="preserve">
    <value>Gesamtsumme Zeilen</value>
  </data>
  <data name="TotalsOnly" xml:space="preserve">
    <value>Nur Gesamtsummen</value>
  </data>
  <data name="Undo" xml:space="preserve">
    <value>Rückgängig</value>
  </data>
  <data name="GenerateReports" xml:space="preserve">
    <value>Berichte auf der Basis der aktuellen Ansicht erstellen.</value>
  </data>
  <data name="Absolute" xml:space="preserve">
    <value>Absolut</value>
  </data>
  <data name="ApplyToValuesAbove" xml:space="preserve">
    <value>Auf oben stehende Werte anwenden</value>
  </data>
  <data name="Background" xml:space="preserve">
    <value>Hintergrund:</value>
  </data>
  <data name="Bold" xml:space="preserve">
    <value>Fett:</value>
  </data>
  <data name="Caption" xml:space="preserve">
    <value>Beschriftung</value>
  </data>
  <data name="Clear" xml:space="preserve">
    <value>Löschen</value>
  </data>
  <data name="Foreground" xml:space="preserve">
    <value>Vordergrund:</value>
  </data>
  <data name="NotSet" xml:space="preserve">
    <value>Nicht festgelegt</value>
  </data>
  <data name="Percentage" xml:space="preserve">
    <value>Prozentsatz</value>
  </data>
  <data name="Style" xml:space="preserve">
    <value>Stil</value>
  </data>
  <data name="ApplyToValuesBelow" xml:space="preserve">
    <value>Auf unten stehende Werte anwenden</value>
  </data>
  <data name="DefaultExtension" xml:space="preserve">
    <value>.olapx</value>
  </data>
  <data name="DocumentOptions" xml:space="preserve">
    <value>Dokumentoptionen</value>
  </data>
  <data name="FieldSettingsParam" xml:space="preserve">
    <value>Feldeinstellungen: {0}</value>
  </data>
  <data name="FileDialogFilter" xml:space="preserve">
    <value>C1Olap-Ansichtsdefinitionsdateien (*.olapx)|*.olapx</value>
  </data>
  <data name="StyleConditions" xml:space="preserve">
    <value>Nicht festgelegt|Absolut|Prozentsatz</value>
  </data>
  <data name="Grid" xml:space="preserve">
    <value>Gitter</value>
  </data>
  <data name="By" xml:space="preserve">
    <value>nach</value>
  </data>
  <data name="CustomizeChartView" xml:space="preserve">
    <value>Diagrammansicht anpassen</value>
  </data>
  <data name="DetailView" xml:space="preserve">
    <value>Detailansicht:</value>
  </data>
  <data name="Items" xml:space="preserve">
    <value>Elemente</value>
  </data>
  <data name="Subtotal" xml:space="preserve">
    <value>Teilergebnis</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>Gesamtergebnis</value>
  </data>
  <data name="Export" xml:space="preserve">
    <value>Export</value>
  </data>
  <data name="GroupAnnotations" xml:space="preserve">
    <value>Gruppe Annotationen</value>
  </data>
  <data name="ExportDialogDefaultExt" xml:space="preserve">
    <value>.csv</value>
  </data>
  <data name="ExportDialogFilter" xml:space="preserve">
    <value>CSV (*.csv)|*.csv|Webpage(*.html)|*.html|Text (*.txt)|*.txt</value>
  </data>
</root>