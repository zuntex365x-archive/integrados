<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="FilterTypes" xml:space="preserve">
    <value>Filtre numérique|Filtre Date/Heure|Filtre de texte</value>
  </data>
  <data name="Conditions" xml:space="preserve">
    <value>Aucun|Égal à|N'est pas égal à|Supérieur à|Inférieur à|Supérieur ou égal à|Inférieur ou égal à|Contient|Ne contient pas|Commence par|Se termine par</value>
  </data>
  <data name="SubtotalFuncs" xml:space="preserve">
    <value>Somme|Compte|Moyenne|Maximum|Minimum|Premier|Dernier|Variance|Écart-type|Variance de population|Écart-type de population</value>
  </data>
  <data name="ShowTotalsColumn" xml:space="preserve">
    <value>Afficher les totaux de colonne</value>
  </data>
  <data name="ShowTotalsRow" xml:space="preserve">
    <value>Afficher les totaux de rangée</value>
  </data>
  <data name="ShowZeros" xml:space="preserve">
    <value>Afficher les zéros</value>
  </data>
  <data name="ShowDetailOnRightClick" xml:space="preserve">
    <value>Afficher détail par clic-droit</value>
  </data>
  <data name="ShowSelectionStatus" xml:space="preserve">
    <value>Afficher état de sélection</value>
  </data>
  <data name="ChartOptions" xml:space="preserve">
    <value>Options de graphique</value>
  </data>
  <data name="GridOptions" xml:space="preserve">
    <value>Options de grille</value>
  </data>
  <data name="ChartType" xml:space="preserve">
    <value>Type de graphique</value>
  </data>
  <data name="Palette" xml:space="preserve">
    <value>Palette</value>
  </data>
  <data name="ShowGridLines" xml:space="preserve">
    <value>Afficher le quadrillage</value>
  </data>
  <data name="ShowTitle" xml:space="preserve">
    <value>Afficher titre</value>
  </data>
  <data name="Stacked" xml:space="preserve">
    <value>Empilé</value>
  </data>
  <data name="ShowLegend" xml:space="preserve">
    <value>Afficher légende</value>
  </data>
  <data name="RawDataOptions" xml:space="preserve">
    <value>Options de données brutes</value>
  </data>
  <data name="ShowRawData" xml:space="preserve">
    <value>Afficher données brutes</value>
  </data>
  <data name="DateFormats" xml:space="preserve">
    <value>MMMM dd, yyyy|d|d/M/yy|dd/MM/yy|dd/MM/yyyy|MMM yyyy|MMMM yyyy|d-MMM-yy|d-MMM-yyyy|Personnalisé</value>
  </data>
  <data name="NumberFormats" xml:space="preserve">
    <value>Nombre|Devise|Pourcentage|Scientifique|Personnalisé</value>
  </data>
  <data name="None" xml:space="preserve">
    <value>Aucun</value>
  </data>
  <data name="ChartTypes" xml:space="preserve">
    <value>Barre|Colonne|Surface|Ligne|Dispersion|Pie</value>
  </data>
  <data name="DecimalPlaces" xml:space="preserve">
    <value>Décimales :</value>
  </data>
  <data name="InvalidFormat" xml:space="preserve">
    <value>Format non valide</value>
  </data>
  <data name="Sample" xml:space="preserve">
    <value>Échantillon :</value>
  </data>
  <data name="UseThousandSeparator" xml:space="preserve">
    <value>Utiliser séparateur de 1000</value>
  </data>
  <data name="CustomFormat" xml:space="preserve">
    <value>Format personnalisé :</value>
  </data>
  <data name="BeginsWith" xml:space="preserve">
    <value>Commence par...</value>
  </data>
  <data name="Between" xml:space="preserve">
    <value>Entre...</value>
  </data>
  <data name="ClearFilter" xml:space="preserve">
    <value>Effacer filtre</value>
  </data>
  <data name="Contains" xml:space="preserve">
    <value>Contient...</value>
  </data>
  <data name="CustomFilter" xml:space="preserve">
    <value>Filtre personnalisé</value>
  </data>
  <data name="DoesNotContain" xml:space="preserve">
    <value>Ne contient pas...</value>
  </data>
  <data name="DoesNotEqual" xml:space="preserve">
    <value>N'est pas égal à...</value>
  </data>
  <data name="EndsWith" xml:space="preserve">
    <value>Se termine par...</value>
  </data>
  <data name="Filter" xml:space="preserve">
    <value>Filtrer</value>
  </data>
  <data name="GreaterThan" xml:space="preserve">
    <value>Supérieur à...</value>
  </data>
  <data name="GreaterThanOrEqualTo" xml:space="preserve">
    <value>Supérieur ou égal à...</value>
  </data>
  <data name="LessThan" xml:space="preserve">
    <value>Inférieur à...</value>
  </data>
  <data name="LessThanOrEqualTo" xml:space="preserve">
    <value>Inférieur ou égal à...</value>
  </data>
  <data name="MnuEquals" xml:space="preserve">
    <value>Égal à...</value>
  </data>
  <data name="SelectAll" xml:space="preserve">
    <value>(Tout sélectionner)</value>
  </data>
  <data name="ActualSize" xml:space="preserve">
    <value>Taille réelle</value>
  </data>
  <data name="And" xml:space="preserve">
    <value>Et</value>
  </data>
  <data name="Bottom" xml:space="preserve">
    <value>Bas :</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Annuler</value>
  </data>
  <data name="Display" xml:space="preserve">
    <value>Affichage</value>
  </data>
  <data name="FitToOnePage" xml:space="preserve">
    <value>Ajuster à une page</value>
  </data>
  <data name="FitToPageWidth" xml:space="preserve">
    <value>Ajuster à largeur de page</value>
  </data>
  <data name="Format" xml:space="preserve">
    <value>Format</value>
  </data>
  <data name="HighValues" xml:space="preserve">
    <value>Valeurs élevées</value>
  </data>
  <data name="IncludeInReport" xml:space="preserve">
    <value>Inclure dans rapport</value>
  </data>
  <data name="Left" xml:space="preserve">
    <value>Gauche :</value>
  </data>
  <data name="LowValues" xml:space="preserve">
    <value>Valeurs faibles</value>
  </data>
  <data name="Margin" xml:space="preserve">
    <value>Marge :</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="OlapChart" xml:space="preserve">
    <value>Graphique</value>
  </data>
  <data name="OlapGrid" xml:space="preserve">
    <value>Grille</value>
  </data>
  <data name="Or" xml:space="preserve">
    <value>Ou</value>
  </data>
  <data name="Padding" xml:space="preserve">
    <value>Remplissage :</value>
  </data>
  <data name="RawData" xml:space="preserve">
    <value>Données brutes</value>
  </data>
  <data name="Right" xml:space="preserve">
    <value>Droite :</value>
  </data>
  <data name="Scaling" xml:space="preserve">
    <value>Mise à l'échelle :</value>
  </data>
  <data name="ShowItems" xml:space="preserve">
    <value>Afficher les articles où la valeur :</value>
  </data>
  <data name="Subtotals" xml:space="preserve">
    <value>Sous-totaux</value>
  </data>
  <data name="Top" xml:space="preserve">
    <value>Haut :</value>
  </data>
  <data name="WeighBy" xml:space="preserve">
    <value>Pondérer par :</value>
  </data>
  <data name="ChooseFields" xml:space="preserve">
    <value>Choisir les champs à ajouter au tableau :</value>
  </data>
  <data name="ColumnFields" xml:space="preserve">
    <value>Champs de colonne</value>
  </data>
  <data name="CurrentDate" xml:space="preserve">
    <value>Date actuelle</value>
  </data>
  <data name="CurrentTime" xml:space="preserve">
    <value>Heure actuelle</value>
  </data>
  <data name="DeferUpdates" xml:space="preserve">
    <value>Différer mises à jour</value>
  </data>
  <data name="DragFields" xml:space="preserve">
    <value>Déplacer les champs entre les surfaces ci-dessous :</value>
  </data>
  <data name="Footer" xml:space="preserve">
    <value>Pied de page :</value>
  </data>
  <data name="Header" xml:space="preserve">
    <value>En-tête :</value>
  </data>
  <data name="HeaderFooter" xml:space="preserve">
    <value>En-tête/Pied de page</value>
  </data>
  <data name="MoveDown" xml:space="preserve">
    <value>Descendre</value>
  </data>
  <data name="MoveToBeginning" xml:space="preserve">
    <value>Déplacer au début</value>
  </data>
  <data name="MoveToColumnFields" xml:space="preserve">
    <value>Déplacer vers champs de colonne</value>
  </data>
  <data name="MoveToEnd" xml:space="preserve">
    <value>Déplacer à la fin</value>
  </data>
  <data name="MoveToFilterFields" xml:space="preserve">
    <value>Déplacer vers champs de filtre</value>
  </data>
  <data name="MoveToRowFields" xml:space="preserve">
    <value>Déplacer vers champs de rangée</value>
  </data>
  <data name="MoveToValueFields" xml:space="preserve">
    <value>Déplacer vers champs de valeur</value>
  </data>
  <data name="MoveUp" xml:space="preserve">
    <value>Monter</value>
  </data>
  <data name="Page" xml:space="preserve">
    <value>Page</value>
  </data>
  <data name="PageNumber" xml:space="preserve">
    <value>Numéro de page</value>
  </data>
  <data name="RemoveField" xml:space="preserve">
    <value>Supprimer champ</value>
  </data>
  <data name="ReportContent" xml:space="preserve">
    <value>Contenu de rapport</value>
  </data>
  <data name="RowFields" xml:space="preserve">
    <value>Champs de rangée</value>
  </data>
  <data name="Separator" xml:space="preserve">
    <value>Séparateur</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Titre</value>
  </data>
  <data name="TotalPageCount" xml:space="preserve">
    <value>Nombre total de pages</value>
  </data>
  <data name="Values" xml:space="preserve">
    <value>Valeurs</value>
  </data>
  <data name="FieldSettings" xml:space="preserve">
    <value>Paramètres de champ...</value>
  </data>
  <data name="Chart" xml:space="preserve">
    <value>Graphique</value>
  </data>
  <data name="CustomizeGridView" xml:space="preserve">
    <value>Personnaliser vue de grille</value>
  </data>
  <data name="GrandTotals" xml:space="preserve">
    <value>Totaux généraux</value>
  </data>
  <data name="LoadViewFromFile" xml:space="preserve">
    <value>Charger vue Olap à partir d'un fichier</value>
  </data>
  <data name="Options" xml:space="preserve">
    <value>Options...</value>
  </data>
  <data name="Print" xml:space="preserve">
    <value>Imprimer</value>
  </data>
  <data name="Redo" xml:space="preserve">
    <value>Rétablir</value>
  </data>
  <data name="Report" xml:space="preserve">
    <value>Rapport</value>
  </data>
  <data name="SaveViewToFile" xml:space="preserve">
    <value>Enregistrer vue OLAP dans un fichier</value>
  </data>
  <data name="TotalColumns" xml:space="preserve">
    <value>Totaux de colonnes</value>
  </data>
  <data name="TotalRows" xml:space="preserve">
    <value>Totaux de rangées</value>
  </data>
  <data name="TotalsOnly" xml:space="preserve">
    <value>Totaux uniquement</value>
  </data>
  <data name="Undo" xml:space="preserve">
    <value>Annuler</value>
  </data>
  <data name="GenerateReports" xml:space="preserve">
    <value>Générer les rapports sur la base de la vue actuelle.</value>
  </data>
  <data name="Absolute" xml:space="preserve">
    <value>Absolu</value>
  </data>
  <data name="ApplyToValuesAbove" xml:space="preserve">
    <value>Appliquer aux valeurs ci-dessus</value>
  </data>
  <data name="Background" xml:space="preserve">
    <value>Arrière-plan :</value>
  </data>
  <data name="Bold" xml:space="preserve">
    <value>Gras :</value>
  </data>
  <data name="Caption" xml:space="preserve">
    <value>Légende</value>
  </data>
  <data name="Clear" xml:space="preserve">
    <value>Effacer</value>
  </data>
  <data name="Foreground" xml:space="preserve">
    <value>Premier plan :</value>
  </data>
  <data name="NotSet" xml:space="preserve">
    <value>Non défini</value>
  </data>
  <data name="Percentage" xml:space="preserve">
    <value>Pourcentage</value>
  </data>
  <data name="Style" xml:space="preserve">
    <value>Style</value>
  </data>
  <data name="ApplyToValuesBelow" xml:space="preserve">
    <value>Appliquer aux valeurs ci-dessous</value>
  </data>
  <data name="DefaultExtension" xml:space="preserve">
    <value>.olapx</value>
  </data>
  <data name="DocumentOptions" xml:space="preserve">
    <value>Options du document</value>
  </data>
  <data name="FieldSettingsParam" xml:space="preserve">
    <value>Paramètres de champ : {0}</value>
  </data>
  <data name="FileDialogFilter" xml:space="preserve">
    <value>Fichiers de définition de vue C1Olap (*.olapx)|*.olapx</value>
  </data>
  <data name="StyleConditions" xml:space="preserve">
    <value>Non défini|Absolu|Pourcentage</value>
  </data>
  <data name="Grid" xml:space="preserve">
    <value>Grille</value>
  </data>
  <data name="By" xml:space="preserve">
    <value>par</value>
  </data>
  <data name="CustomizeChartView" xml:space="preserve">
    <value>Personnaliser vue de graphique</value>
  </data>
  <data name="DetailView" xml:space="preserve">
    <value>Vue détaillée :</value>
  </data>
  <data name="Items" xml:space="preserve">
    <value>éléments</value>
  </data>
  <data name="Subtotal" xml:space="preserve">
    <value>Sous-total</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="Export" xml:space="preserve">
    <value>Exporter</value>
  </data>
  <data name="GroupAnnotations" xml:space="preserve">
    <value>Annotations du groupe</value>
  </data>
  <data name="ExportDialogDefaultExt" xml:space="preserve">
    <value>.csv</value>
  </data>
  <data name="ExportDialogFilter" xml:space="preserve">
    <value>CSV (*.csv)|*.csv|Webpage(*.html)|*.html|Text (*.txt)|*.txt</value>
  </data>
</root>