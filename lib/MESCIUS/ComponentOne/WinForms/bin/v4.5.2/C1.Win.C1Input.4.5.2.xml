<?xml version="1.0"?>
<doc>
  <assembly>
    <name>C1.Win.C1Input.4.5.2</name>
  </assembly>
  <members>
    <member name="T:C1.Win.C1Input.GrapeCity.Editors.ReadingStringOutput">
      <summary>
              A class is used to control the output behavior of the reading string.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Editors.ReadingStringOutput.None">
      <summary>
              Gets a empty output.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.GrapeCity.Editors.ReadingStringOutput.#ctor(System.Object,C1.Win.C1Input.GrapeCity.Editors.ReadingStringOutputMode)">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Win.C1Input.GrapeCity.Editors.ReadingStringOutput" /> class.
            </summary>
      <param name="outputTarget">
              A <see cref="T:System.Object" /> indicates the target object.
            </param>
      <param name="outputMode">
              A <see cref="T:C1.Win.C1Input.GrapeCity.Editors.ReadingStringOutputMode" /> controls the output behaviors.
            </param>
    </member>
    <member name="M:C1.Win.C1Input.GrapeCity.Editors.ReadingStringOutput.#ctor(System.Object,C1.Win.C1Input.GrapeCity.Editors.ReadingStringOutputMode,System.Boolean)">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Win.C1Input.GrapeCity.Editors.ReadingStringOutput" /> class.
            </summary>
      <param name="outputTarget">
              A <see cref="T:System.Object" /> indicates the target object.
            </param>
      <param name="outputMode">
              A <see cref="T:C1.Win.C1Input.GrapeCity.Editors.ReadingStringOutputMode" /> controls the output behaviors.
            </param>
      <param name="enableAlphabetReadingMapping">
              A <see langword="bool" /> value, indatates whether alphabet character should be converted to reading.
            </param>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Editors.ReadingStringOutput.TargetControl">
      <summary>
              Gets or sets a control used to receive the output.
            </summary>
      <value>
              A <see cref="T:System.Windows.Forms.Control" /> indicates the target control.
            </value>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Editors.ReadingStringOutput.Target">
      <summary>
              Gets or sets an object used to receieve the output string.
            </summary>
      <value>
              An object indicates the output target.
            </value>
      <remarks>
              To make sure the string could be receieved, the output target object should either have a public property named 'Text' or 'Value'.
              In addition, a string typed property is valid.
            </remarks>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Editors.ReadingStringOutput.OutputMode">
      <summary>
              Gets or sets the output mode.
            </summary>
      <value>
              A <see cref="T:C1.Win.C1Input.GrapeCity.Editors.ReadingStringOutputMode" /> controls the output behaviors.
            </value>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Editors.ReadingStringOutput.EnableAlphabetReadingMapping">
      <summary>
              Gets or sets whether or not enable converting alphabets to its reading.
            </summary>
      <value>
              A <b>bool</b> value, <see langword="true" /> indicates the alphabets will convert to its reading, 
              according to the default mapping table or user defined mapping rules; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="M:C1.Win.C1Input.GrapeCity.Editors.ReadingStringOutput.Equals(System.Object)">
      <summary>
              Indicates whether this instance and a specified object are equal.
            </summary>
      <param name="obj">Another object to compare to.</param>
      <returns>
        <see langword="true" /> if <b>obj</b> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:C1.Win.C1Input.GrapeCity.Editors.ReadingStringOutput.op_Equality(C1.Win.C1Input.GrapeCity.Editors.ReadingStringOutput,C1.Win.C1Input.GrapeCity.Editors.ReadingStringOutput)">
      <summary>
              Declares the "==" operator.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.GrapeCity.Editors.ReadingStringOutput.op_Inequality(C1.Win.C1Input.GrapeCity.Editors.ReadingStringOutput,C1.Win.C1Input.GrapeCity.Editors.ReadingStringOutput)">
      <summary>
              Declares the "!=" operator.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.GrapeCity.Editors.ReadingStringOutput.GetHashCode">
      <summary>
              Gets the hash code of this object.
            </summary>
      <returns>
              An <see cref="T:System.Int32" /> indicates the hash code of the ime.
            </returns>
    </member>
    <member name="T:C1.Win.C1Input.GrapeCity.Editors.ReadingStringOutputMode">
      <summary>
              Indicates the output mode of the reading string.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Editors.ReadingStringOutputMode.Append">
      <summary>
              Adds the new text at the end of the old text.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Editors.ReadingStringOutputMode.Replace">
      <summary>
              Replaces all text of the target control.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Editors.ReadingStringOutputMode.Intelligence">
      <summary>
              Maintain the reading string output automatically.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.GrapeCity.Editors.ResultStringEventArgs">
      <summary>
              Provides the <see cref="T:System.EventArgs" /> data for the <b>ResultString</b> event.
            </summary>
      <remarks>
              The <b>ResultString</b> takes place when there has been changes
              made in the IME conversion window.
            </remarks>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Editors.ResultStringEventArgs.SourceControl">
      <summary>
              Gets the control that creates the reading string.
            </summary>
      <value>
              A <see cref="T:System.Windows.Forms.Control" /> indicates the source control.
            </value>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Editors.ResultStringEventArgs.ReadString">
      <summary>
              Gets the reading string.
            </summary>
      <value>
              A <see cref="T:System.String" /> value indicating the reading string.
            </value>
    </member>
    <member name="M:C1.Win.C1Input.GrapeCity.Editors.ResultStringEventArgs.#ctor(System.Windows.Forms.Control,System.String)">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Win.C1Input.GrapeCity.Editors.ResultStringEventArgs" /> 
              class with the specified reading string.
            </summary>
      <param name="sourceControl">
              A <see cref="T:System.Windows.Forms.Control" /> indicates the source control that creates the reading string.
            </param>
      <param name="readString">
              A <b>string</b> indicates the specified reading string.
            </param>
    </member>
    <member name="T:C1.Win.C1Input.GrapeCity.Editors.AlphabetReadingMapEntry">
      <summary>
              Stores the alpha-reading string mapping data.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.GrapeCity.Editors.AlphabetReadingMapEntry.#ctor(System.Char,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Input.GrapeCity.Editors.AlphabetReadingMapEntry" /> struct.
            </summary>
      <param name="alphabet">The alphabet.</param>
      <param name="reading">The reading.</param>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Editors.AlphabetReadingMapEntry.Alphabet">
      <summary>
            Gets the alphabet.
            </summary>
      <value>The alphabet.</value>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Editors.AlphabetReadingMapEntry.Reading">
      <summary>
            Gets the reading.
            </summary>
      <value>The reading.</value>
    </member>
    <member name="T:C1.Win.C1Input.GrapeCity.Editors.Fields.Field">
      <summary>
              Represnts a <b>Field</b> class to define a base field.
            </summary>
      <remarks>
              This class will implement view function for single segment. And some input behavior will exposed to user, too.
              This is final interface for our user.
              When a field is created, it will create a segment and value module for it. Then configuration will be done on the
              segment and the value module.
            </remarks>
    </member>
    <member name="M:C1.Win.C1Input.GrapeCity.Editors.Fields.Field.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Win.C1Input.GrapeCity.Editors.Fields.Field" /> class.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Editors.Fields.Field.Name">
      <summary>
              Gets or sets the name of the object.
            </summary>
      <value>
              A <see cref="T:System.String" /> value indicating the name of the object.
              <br /> The default is <see cref="F:System.String.Empty" />.
            </value>
    </member>
    <member name="T:C1.Win.C1Input.GrapeCity.Editors.KanaMode">
      <summary>
              Defines the Japanese char converting mode.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Editors.KanaMode.KatakanaHalf">
      <summary>
              Converts the Japanese character to the Half Width Katakana mode.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Editors.KanaMode.Katakana">
      <summary>
              Convert the Japanese character to the Full Width Katakana mode.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Editors.KanaMode.Hiragana">
      <summary>
              Converts the Japanese character to the Hiragana mode.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.GrapeCity.Framework.Input.IMessageWindow">
      <summary>
              Defines an interface that abstractes a window, user can add message processors to it.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.GrapeCity.Framework.Input.IMessageWindow.AddMessageProcessor(C1.Win.C1Input.GrapeCity.Framework.Input.IMessageProcessor)">
      <summary>
              Addes the an <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.IMessageProcessor" /> into the <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.IMessageWindow" />.
            </summary>
      <param name="processor">
              An <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.IMessageProcessor" /> indicates the message processor.
            </param>
      <remarks>
              Last added processor has the hightest priority.
              A duplicate processor or null will cause an exception.
            </remarks>
    </member>
    <member name="M:C1.Win.C1Input.GrapeCity.Framework.Input.IMessageWindow.RemoveMessageProcessor(C1.Win.C1Input.GrapeCity.Framework.Input.IMessageProcessor)">
      <summary>
              Removes the an <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.IMessageProcessor" /> from the <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.IMessageWindow" />.
            </summary>
      <param name="processor">
              An <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.IMessageProcessor" /> indicates the message processor.
            </param>
      <remarks>
              A no found processor or null will cause an exception.
            </remarks>
    </member>
    <member name="T:C1.Win.C1Input.GrapeCity.Framework.Input.IMessageProcessor">
      <summary>
              Defines the message processor interface.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.GrapeCity.Framework.Input.IMessageProcessor.PreProcess(System.Windows.Forms.Message@)">
      <summary>
              Process the message before other processors.
            </summary>
      <param name="m">
              A <see cref="T:System.Windows.Forms.Message" /> indicates the window message.
            </param>
      <returns>
              A <b>bool</b> value indicates whether the message will be processed by other processors.
              <b>true</b> the message will not be process any.
              <b>false</b> otherwise.
            </returns>
    </member>
    <member name="M:C1.Win.C1Input.GrapeCity.Framework.Input.IMessageProcessor.PostProcess(System.Windows.Forms.Message@)">
      <summary>
              Process the message after other processors.
            </summary>
      <param name="m">
              A <see cref="T:System.Windows.Forms.Message" /> indicates the window message.
            </param>
    </member>
    <member name="T:C1.Win.C1Input.GrapeCity.Framework.Input.VirtualWindow">
      <summary>
              Defines a virtual windows to help the operation of the <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime" />.
            </summary>
      <remarks>
              This class only send message to the IMessageProcessor.PerProcess methods.
            </remarks>
    </member>
    <member name="M:C1.Win.C1Input.GrapeCity.Framework.Input.VirtualWindow.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.VirtualWindow" /> class.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Framework.Input.VirtualWindow.FactWindow">
      <summary>
              Gets or sets the fact window.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.GrapeCity.Framework.Input.VirtualWindow.OnFactWindowChanged(System.EventArgs)">
      <summary>
              Raises the <see cref="E:C1.Win.C1Input.GrapeCity.Framework.Input.VirtualWindow.FactWindowChanged" /> event.
            </summary>
      <param name="e">
              A <see cref="T:System.EventArgs" /> indicates the arguments of the event.
            </param>
    </member>
    <member name="E:C1.Win.C1Input.GrapeCity.Framework.Input.VirtualWindow.FactWindowChanged">
      <summary>
              A event raised when the value of <see cref="P:C1.Win.C1Input.GrapeCity.Framework.Input.VirtualWindow.FactWindow" /> property is changed.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.GrapeCity.Framework.Input.VirtualWindow.Dispose">
      <summary>
              Hang up the link between this class and the Application.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.GrapeCity.Framework.Input.WindowWrapper">
      <summary>
              Defines a virtual windows to help the operation of the <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime" />.
            </summary>
      <remarks>
              This class only send message to the IMessageProcessor.PerProcess methods.
            </remarks>
    </member>
    <member name="M:C1.Win.C1Input.GrapeCity.Framework.Input.WindowWrapper.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.WindowWrapper" /> class.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Framework.Input.WindowWrapper.FactWindow">
      <summary>
              Gets or sets the fact window.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.GrapeCity.Framework.Input.WindowWrapper.GetAssociatedWindowHandle">
      <summary>
              Gets the associated window handle that related to the FactWindow instance.
            </summary>
      <returns>
              The associated window handle related to the FactWindow instance.
            </returns>
    </member>
    <member name="M:C1.Win.C1Input.GrapeCity.Framework.Input.WindowWrapper.GetHookHandle">
      <summary>
              Gets the hook handle from the FactWindow.
            </summary>
      <returns>
              Returns the hook handle.
            </returns>
    </member>
    <member name="M:C1.Win.C1Input.GrapeCity.Framework.Input.WindowWrapper.OnFactWindowChanged(System.EventArgs)">
      <summary>
              Raises the <see cref="E:C1.Win.C1Input.GrapeCity.Framework.Input.WindowWrapper.FactWindowChanged" /> event.
            </summary>
      <param name="e">
              A <see cref="T:System.EventArgs" /> indicates the arguments of the event.
            </param>
    </member>
    <member name="E:C1.Win.C1Input.GrapeCity.Framework.Input.WindowWrapper.FactWindowChanged">
      <summary>
              A event raised when the value of <see cref="P:C1.Win.C1Input.GrapeCity.Framework.Input.WindowWrapper.FactWindow" /> property is changed.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.GrapeCity.Framework.Input.WindowWrapper.PreProcessMessage(System.Windows.Forms.Message@)">
      <summary>
              Dispatch the message to the processsor.
            </summary>
      <param name="m">
              A <see cref="T:System.Windows.Forms.Message" /> indicates the window message.
            </param>
      <returns>
              Return a <b>bool</b> indicate whether this message should be blocked.
            </returns>
    </member>
    <member name="M:C1.Win.C1Input.GrapeCity.Framework.Input.WindowWrapper.PostProcessMessage(System.Windows.Forms.Message@)">
      <summary>
              Dispatch the message to the processsor.
            </summary>
      <param name="m">
              A <see cref="T:System.Windows.Forms.Message" /> indicates the window message.
            </param>
      <returns>
              Return a <b>bool</b> indicate whether this message should be blocked.
            </returns>
    </member>
    <member name="M:C1.Win.C1Input.GrapeCity.Framework.Input.WindowWrapper.Dispose">
      <summary>
              Hang up the link between this class and the Application.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.GrapeCity.Framework.Input.ImeHost">
      <summary>
              Defines the window that implements the IWin32Window interface.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.GrapeCity.Framework.Input.ImeHost.#ctor(System.IntPtr)">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.ImeHost" /> class.
            </summary>
      <param name="handle">
              An <see cref="T:System.IntPtr" /> indicates the handle of the window.
            </param>
    </member>
    <member name="M:C1.Win.C1Input.GrapeCity.Framework.Input.ImeHost.#ctor(System.Windows.Forms.NativeWindow)">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.ImeHost" /> class.
            </summary>
      <param name="window">
              A <see cref="T:System.Windows.Forms.NativeWindow" /> indicates the handle of the window.
            </param>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Framework.Input.ImeHost.Handle">
      <summary>
              Gets the handle of the window.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.GrapeCity.Framework.Input.ImeType">
      <summary>
              Defines the type of the ime device.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.ImeType.Unidirection">
      <summary>
              User can control the ime device, but can not receive the event from ime device.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.ImeType.Bidirection">
      <summary>
              User can not only control the ime device, but also receive the event from ime device.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.GrapeCity.Framework.Input.ImeHotKeys">
      <summary>
              Defines the hot keys for ime.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.ImeHotKeys.SimplifiedChineseNonImeToggle">
      <summary>
      </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.ImeHotKeys.SimplifiedChineseShapeToggle">
      <summary>
              For simplified Chinese, toggles the shape conversion mode of IME.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.ImeHotKeys.SimplifiedChineseSymbolToggle">
      <summary>
              For simplified Chinese, toggles the symbol conversion mode of IME. 
              Symbol mode indicates that the user can input Chinese punctuation and symbols 
              by mapping to the punctuation and symbols on the keyboard.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.ImeHotKeys.JanpaneseOpenClose">
      <summary>
              For Japanese, alternately opens and closes the IME.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.ImeHotKeys.KoreanShapeToggle">
      <summary>
              For Korean, toggles the shape conversion mode of IME.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.ImeHotKeys.KoreanHanjaConvert">
      <summary>
              For Korean, switches to Hanja conversion.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.ImeHotKeys.KoreanEnglish">
      <summary>
              Switches to from Korean to English.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.ImeHotKeys.TraditionalChineseNonImeToggle">
      <summary>
      </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.ImeHotKeys.TraditionalChineseShapeToggle">
      <summary>
              For traditional Chinese, toggles the shape conversion mode of IME.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.ImeHotKeys.TraditionalChineseSymbolToggle">
      <summary>
              For traditional Chinese, toggles the symbol conversion mode of IME.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.ImeHotKeys.TraditionalChineseTriggerReconversion">
      <summary>
      </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.ImeHotKeys.PrivateResendResultString">
      <summary>
      </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.ImeHotKeys.PrivatePreviousComposition">
      <summary>
      </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.ImeHotKeys.PrivateUIStyleToggle">
      <summary>
      </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.ImeHotKeys.PrivateTriggerReconversion">
      <summary>
      </summary>
    </member>
    <member name="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime">
      <summary>
              Defines the ime device that is a bridge between application and ime.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeContext">
      <summary>
              Defines the ime context for all ime operations.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeContext.#ctor(C1.Win.C1Input.GrapeCity.Framework.Input.Ime)">
      <summary>
              Initializes a new instance of the <see cref="P:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeContext.Ime" /> class. 
            </summary>
      <param name="device">
              An <see cref="P:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeContext.Ime" /> indicates the device.
            </param>
    </member>
    <member name="M:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeContext.Finalize">
      <summary>
              Ensure to release <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeContext" /></summary>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeContext.Ime">
      <summary>
              Gets the device of the ime context.
            </summary>
      <value>
              An <see cref="P:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeContext.Ime" /> indicates the ime device that is owner of the ime context.
            </value>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeContext.Handle">
      <summary>
              Gets the handle of the ime context.
            </summary>
      <value>
              An <see cref="T:System.IntPtr" /> indicates the handle of the ime.
            </value>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeContext.IsValid">
      <summary>
              Gets a <b>bool</b> indicating whether the ime context is valid.
            </summary>
      <value>
              A <b>bool</b> indicates whether this context is valid.
            </value>
    </member>
    <member name="M:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeContext.Dispose">
      <summary>
              Release the handle of the ime context.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeContext.Enable">
      <summary>
              Gets or sets wehther the ime context is used by ime device.
            </summary>
      <value>
        <b>true</b>, the ime context is used by ime device.
              <b>false</b>, the ime context is not used by ime device.
            </value>
    </member>
    <member name="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeStatus">
      <summary>
              Defines the ime status.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeStatus.Off">
      <summary>
              Indicates the ime function is closed.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeStatus.On">
      <summary>
              Indicates the ime function is opened.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeConversionMode">
      <summary>
              Defines the conversion mode
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeConversionMode.Language">
      <summary>
              Language mask.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeConversionMode.Alphanumeric">
      <summary>
              Alphanumeric mode
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeConversionMode.Native">
      <summary>
              Native mode
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeConversionMode.Chinese">
      <summary>
              Chinese mode
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeConversionMode.Hangeul">
      <summary>
              Hangeul mode
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeConversionMode.Hangul">
      <summary>
              Hangul mode
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeConversionMode.Japanese">
      <summary>
              Japanese mode
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeConversionMode.Katakana">
      <summary>
              Katakana mode
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeConversionMode.FullShape">
      <summary>
              Full shape mode
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeConversionMode.Roman">
      <summary>
              Roman input mode
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeConversionMode.CharCode">
      <summary>
              Character code input mode
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeConversionMode.Hanja">
      <summary>
              Hanja convert mode
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeConversionMode.SoftBoard">
      <summary>
              Soft Keyboard mode
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeConversionMode.NoConversion">
      <summary>
              Prevent processing of conversions by IME
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeConversionMode.Eudc">
      <summary>
              Eudc conversion mode
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeConversionMode.Symbol">
      <summary>
              Symbol conversion mode
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeSentenceMode">
      <summary>
              Defines the sentence mode
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeSentenceMode.None">
      <summary>
              No information for sentence.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeSentenceMode.PluralClause">
      <summary>
              The IME uses plural clause information to carry out conversion processing.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeSentenceMode.SingleConvert">
      <summary>
              The IME carries out conversion processing in single-character mode.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeSentenceMode.Automatic">
      <summary>
              The IME carries out conversion processing in automatic mode.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeSentenceMode.PhrasePredict">
      <summary>
              The IME uses phrase information to predict the next character.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeSentenceMode.Conversation">
      <summary>
              The IME uses conversation mode. This is useful for chat applications.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeWindow">
      <summary>
              Defines the base class of all ime window.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeWindow.#ctor(C1.Win.C1Input.GrapeCity.Framework.Input.Ime)">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeWindow" /> class.
            </summary>
      <param name="device">
              An <see cref="P:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeWindow.Ime" /> indicates the device.
            </param>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeWindow.Ime">
      <summary>
              Gets the device of the ime window.
            </summary>
      <value>
              An <see cref="P:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeWindow.Ime" /> indicates the ime device that is owner of the ime window.
            </value>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeWindow.Visible">
      <summary>
              Gets or sets a <b>bool</b> indicates whether the ime window is visible.
            </summary>
      <value>
              A <b>bool</b> indicates whether the window is visible.
            </value>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeWindow.Position">
      <summary>
              Gets or sets the position of the ime window.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Point" /> indicates the position of the ime window.
            </value>
    </member>
    <member name="M:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeWindow.Show">
      <summary>
              Shows the ime window.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeWindow.Hide">
      <summary>
              Hides the ime window.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeStatusWindow">
      <summary>
              Defines the ime status window.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeStatusWindow.#ctor(C1.Win.C1Input.GrapeCity.Framework.Input.Ime)">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeStatusWindow" /> class.
            </summary>
      <param name="device">
              An <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime" /> indicates the device.
            </param>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeStatusWindow.Visible">
      <summary>
              Gets or sets a <b>bool</b> indicates whether the ime window is visible.
            </summary>
      <value>
              A <b>bool</b> indicats whether the ime window is visible.
            </value>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeStatusWindow.Position">
      <summary>
              Gets or sets the position of the ime window.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Point" /> indicates position of the ime window.
            </value>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeStatusWindow.Status">
      <summary>
              Gets or sets a <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeStatus" /> indicating the ime is opened or closed.
            </summary>
      <value>
              A <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeStatus" /> indicates the status of the ime.
            </value>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeStatusWindow.ConversionMode">
      <summary>
              Gets or sets the conversion mode.
            </summary>
      <value>
              An <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeConversionMode" /> indicates the conversion mode of the ime.
            </value>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeStatusWindow.SentenceMode">
      <summary>
              Gets or sets the sentence mode.
            </summary>
      <value>
              An <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeSentenceMode" /> indicates the sentence mode of the ime.
            </value>
    </member>
    <member name="E:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeStatusWindow.Opening">
      <summary>
               When the ime window is about created.
            </summary>
    </member>
    <member name="E:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeStatusWindow.Closing">
      <summary>
              When the ime window is about closed.
            </summary>
    </member>
    <member name="E:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeStatusWindow.ConversionModeChanged">
      <summary>
              When the ConversionMode is changed by user from ime bar.
            </summary>
    </member>
    <member name="E:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeStatusWindow.SentenceModeChanged">
      <summary>
              When the SentenceMode is changed by user from ime bar.
            </summary>
    </member>
    <member name="E:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeStatusWindow.StatusChanged">
      <summary>
              When the Status is changed by user from ime bar or by code.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionDetails">
      <summary>
              An <b>enum</b> indicates the details of the composition.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionDetails.ReadingString">
      <summary>
              The reading string of the current composition. 
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionDetails.ReadingAttribute">
      <summary>
              The attributes of the reading string of the current composition.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionDetails.ReadingClause">
      <summary>
              The clause information of the reading string of the composition string.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionDetails.String">
      <summary>
              The current composition string. 
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionDetails.Attribute">
      <summary>
              The attribute of the composition string.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionDetails.Clause">
      <summary>
              The clause information of the composition string.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionDetails.CursorPosition">
      <summary>
              The cursor position in composition string.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionDetails.DeltaStart">
      <summary>
              The starting position of any changes in composition string.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionDetails.ResultReadingString">
      <summary>
              The reading string. 
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionDetails.ResultReadingClause">
      <summary>
              The clause information of the reading string. 
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionDetails.ResultString">
      <summary>
              The string of the composition result. 
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionDetails.ResultClause">
      <summary>
              The clause information of the result string. 
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionChangedEventArgs">
      <summary>
              Define a class used for the arguments of the <b>CompositionChanged</b> event.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionChangedEventArgs.#ctor(System.Char,C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionDetails)">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionChangedEventArgs" /> class.
            </summary>
      <param name="lastestCharacter">
              A <see cref="T:System.Char" /> indicates the lastest change to 
              the composition string.
            </param>
      <param name="detials">
              A <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionDetails" /> indicates the detials of the composition.
            </param>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionChangedEventArgs.LatestCharacter">
      <summary>
              Gets the lastest change to the composition string.
            </summary>
      <value>
              A <b>char</b> indicates the lastest change to the composition string.
            </value>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionChangedEventArgs.Details">
      <summary>
              Gets the detials of the composition.
            </summary>
      <value>
              An <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionDetails" /> indicates the detials of the composition.
            </value>
    </member>
    <member name="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionChangedEventHandler">
      <summary>
              Defines a the deleget for handling the ime <b>CompositionChanged</b> event.
            </summary>
      <param name="sender">
              A <b>object</b> indicates the event sender.
            </param>
      <param name="e">
              A <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionChangedEventArgs" /> indicates the event arguments.
            </param>
    </member>
    <member name="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionAttribute">
      <summary>
              Defines the attribute of the characthers in the ime composition.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionAttribute.Input">
      <summary>
      </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionAttribute.TargetConverted">
      <summary>
      </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionAttribute.Converted">
      <summary>
      </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionAttribute.TargetNotConverted">
      <summary>
      </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionAttribute.InputError">
      <summary>
      </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionAttribute.FixedConverted">
      <summary>
      </summary>
    </member>
    <member name="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionClause">
      <summary>
              Defines a clause of the composition.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionClause.#ctor(System.Int32,System.Int32)">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionClause" /> class.
            </summary>
      <param name="start">
              An <b>int</b> indicates the start of the clause.
            </param>
      <param name="length">
              An <b>int</b> indicates the end of the cluase.
            </param>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionClause.Start">
      <summary>
              Gets an <b>int</b> indicating the start of the clause.
            </summary>
      <value>
              An <b>int</b> indicating the start of the clause.
            </value>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionClause.Length">
      <summary>
              Gets an <b>int</b> indicating the start of the clause.
            </summary>
      <value>
              An <b>int</b> indicating the start of the clause.
            </value>
    </member>
    <member name="M:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionClause.GetClauseString(System.String)">
      <summary>
              Gets the string of the clause from the given composition string.
            </summary>
      <param name="compositionString">
              A <b>string</b> indicates the composition string.
            </param>
      <returns>
              Return the string of the clause.
            </returns>
    </member>
    <member name="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionWindow">
      <summary>
              Defines the ime composition window.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionWindow.#ctor(C1.Win.C1Input.GrapeCity.Framework.Input.Ime)">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionWindow" /> class.
            </summary>
      <param name="device">
              An <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime" /> indicates the device.
            </param>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionWindow.Visible">
      <summary>
              Gets or sets a <b>bool</b> indicates whether the ime window is visible.
            </summary>
      <value>
              A <b>bool</b> indicates whether the ime window is visible. 
            </value>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionWindow.Position">
      <summary>
              Gets or sets the position of the ime window.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Point" /> indicates the position of the ime window.
            </value>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionWindow.WorkArea">
      <summary>
              Gets or sets the work area of the composition window.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Rectangle" /> indicates the work area.
            </value>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionWindow.IsFloating">
      <summary>
              Gets a <b>bool</b> indicating whether the composition window is floating.
            </summary>
      <value>
              A <b>bool</b> indicates whther the composition window is int floation window.
            </value>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionWindow.IsSingleLine">
      <summary>
              Gets whether the compsition form is single line or not.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionWindow.CursorPosition">
      <summary>
              Gets the cursor position.
            </summary>
      <value>
              An <b>int</b> indicates the caret position of the composition window.
            </value>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionWindow.DeltaStart">
      <summary>
              Gets the delta start.
            </summary>
      <value>
              An <b>int</b> indicate the start of the composition window.
            </value>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionWindow.String">
      <summary>
              Gets or sets the string
            </summary>
      <value>
              A <b>string</b> indicates the composition string.
            </value>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionWindow.ReadingString">
      <summary>
              Gets or sets the reading string
            </summary>
      <value>
              A <b>string</b> indicates the reading string.
            </value>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionWindow.ResultString">
      <summary>
              Gets the result string
            </summary>
      <value>
              A <b>string</b> indicates the result string.
            </value>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionWindow.ResultReadingString">
      <summary>
              Gets the result reading string
            </summary>
      <value>
              A <b>string</b> indicates the result reading string.
            </value>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionWindow.Attributes">
      <summary>
              Gets the ime composition attributes.
            </summary>
      <value>
              An <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionAttribute" /> array indicates the attributes of the composition string.
            </value>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionWindow.ReadingAttributes">
      <summary>
              Gets the ime composition reading attributes.
            </summary>
      <value>
              An <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionAttribute" /> array indicates the attributes of the reading string.
            </value>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionWindow.Clauses">
      <summary>
              Gets the ime composition clauses.
            </summary>
      <value>
              An <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionClause" /> array indicates the clauses of the composition string.
            </value>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionWindow.ReadingClauses">
      <summary>
              Gets the ime composition reading clauses.
            </summary>
      <value>
              An <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionClause" /> array indicates the clauses of the reading string.
            </value>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionWindow.ResultClauses">
      <summary>
              Gets the ime composition result clauses.
            </summary>
      <value>
              An <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionClause" /> array indicates the clauses of the result string.
            </value>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionWindow.ResultReadingClauses">
      <summary>
              Gets the ime composition result reading clauses.
            </summary>
      <value>
              An <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionClause" /> array indicates the clauses of the result reading string.
            </value>
    </member>
    <member name="M:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionWindow.Float">
      <summary>
              Makes composition sit at a floating window.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionWindow.Cancel">
      <summary>
              Clear the composition string and set the status to no composition string
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionWindow.Complete">
      <summary>
              Set the composition string as the result string.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionWindow.Convert">
      <summary>
              Convert the composition string.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionWindow.Revert">
      <summary>
              Cancel the current composition string and set the composition string to be the unconverted string.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionWindow.LogicalFont">
      <summary>
              Gets or sets the logical font.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionWindow.CanReconvert">
      <summary>
              A <b>bool</b> indicates whether the ime can do reconverting now.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionWindow.Reconvert(System.String)">
      <summary>
              Provides support for IME reconversion.
            </summary>
      <param name="convertString">
              A <b>string</b> to be reconverted.
            </param>
      <returns>
              Return a <b>bool</b> indicates whether the reconverting is successful.
            </returns>
    </member>
    <member name="M:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionWindow.PositionWindow(System.Drawing.Point)">
      <summary>
              Adjustes the window position.
            </summary>
      <param name="position">
              A <see cref="T:System.Drawing.Point" /> indicates the position of the window.
            </param>
    </member>
    <member name="M:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionWindow.PositionWindow(System.Drawing.Point,System.Drawing.Rectangle)">
      <summary>
              Adjustes the window position, and workArea.
            </summary>
      <param name="position">
              A <see cref="T:System.Drawing.Point" /> indicates the position of the window.
            </param>
      <param name="workArea">
              A <see cref="T:System.Drawing.Rectangle" /> indicates the work area of the window.
            </param>
    </member>
    <member name="E:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionWindow.Opened">
      <summary>
               When the ime window is opened.
            </summary>
    </member>
    <member name="E:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionWindow.Closed">
      <summary>
              When the ime window is closed.
            </summary>
    </member>
    <member name="E:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionWindow.StartComposition">
      <summary>
              Raised immediately before the ime generates the composition string as a result of a keystroke.
            </summary>
    </member>
    <member name="E:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionWindow.EndComposition">
      <summary>
              Raised when the IME ends composition.
            </summary>
    </member>
    <member name="E:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionWindow.CompositionFull">
      <summary>
              Raised when the IME window finds no space to extend the area for the composition window.
            </summary>
    </member>
    <member name="E:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionWindow.CompositionChanged">
      <summary>
              Raised when the composition is changed.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCandidateListStyle">
      <summary>
              Defines the style of the candidate list.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCandidateListStyle.Unknown">
      <summary>
              Candidates are in a style other than listed here.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCandidateListStyle.Read">
      <summary>
              Candidates are in same reading.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCandidateListStyle.Code">
      <summary>
              Candidates are in a code range.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCandidateListStyle.Meaning">
      <summary>
              Candidates are in same meaning.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCandidateListStyle.Radical">
      <summary>
              Candidates use same radical character.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCandidateListStyle.Stroke">
      <summary>
              Candidates are in same number of strokes.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCandidateList">
      <summary>
              Defines a indicates the candidate list.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCandidateList.Empty">
      <summary>
              Defines a empty <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCandidateList" />.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCandidateList._candidates">
      <summary>
              Saves the candidates.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCandidateList.#ctor(C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCandidateListStyle,System.String[])">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCandidateList" /> class.
            </summary>
      <param name="style">
              An <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCandidateListStyle" /> indicates the style.
            </param>
      <param name="candidates">
              A <b>string</b> array indicates the candidates.
            </param>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCandidateList.Style">
      <summary>
              Gets the style of the candidate list.
            </summary>
      <value>
              A <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCandidateListStyle" /> indicates the style.
            </value>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCandidateList.Count">
      <summary>
              Gets the count of the candidates.
            </summary>
      <value>
              An <b>int</b> indicates the count of the candidates.
            </value>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCandidateList.Item(System.Int32)">
      <summary>
              Gets the candidate at given index.
            </summary>
      <param name="index">
              An <b>int</b> indicates the given index.
            </param>
      <returns>
              A <b>string</b> indicates the candidate.
            </returns>
    </member>
    <member name="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCandidateWindow">
      <summary>
              Defines the ime candidate window.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCandidateWindow.#ctor(C1.Win.C1Input.GrapeCity.Framework.Input.Ime,System.Int32)">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCandidateWindow" /> class.
            </summary>
      <param name="device">
              An <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime" /> indicates the device.
            </param>
      <param name="index">
              An <b>int</b> indicates the index of the candidate window.
            </param>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCandidateWindow.Index">
      <summary>
              Gets the index of the candidate window.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> indicates the index of the candidate window. The valid range is 0-3.
            </value>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCandidateWindow.Position">
      <summary>
              Gets or sets the position of the candidate window.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Point" /> indicates the position of the candidate window.
            </value>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCandidateWindow.Visible">
      <summary>
              Gets or sets the visible of the candidate window.
            </summary>
      <value>
              A <b>bool</b> indicats whether the candidate window is visible.
            </value>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCandidateWindow.Candidates">
      <summary>
              Gets the candidate list of the candidate window.
            </summary>
      <value>
              An <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCandidateList" /> contains the candidates.
            </value>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCandidateWindow.PageStart">
      <summary>
              Gets the page start.
            </summary>
      <value>
              An <b>int</b> indicates the page start.
            </value>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCandidateWindow.PageSize">
      <summary>
              Gets the page size.
            </summary>
      <value>
              An <b>int</b> indicates the page size.
            </value>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCandidateWindow.SelectedCandidateIndex">
      <summary>
              Gets or sets the selected candidate index.
            </summary>
      <value>
              An <b>int</b> indicates the index of the selected candidate.
            </value>
    </member>
    <member name="E:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCandidateWindow.Opening">
      <summary>
               When the ime window is about created.
            </summary>
    </member>
    <member name="E:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCandidateWindow.Closing">
      <summary>
              When the ime window is about closed.
            </summary>
    </member>
    <member name="E:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCandidateWindow.ContentChanging">
      <summary>
              Raised when an ime is about to change the content of the candidate window.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCandidateWindowsEventArgs">
      <summary>
              Define a class used for the arguments of the <b>ImeCandidateWindowsEventHandler</b> event.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCandidateWindowsEventArgs.#ctor(System.Int32[])">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCandidateWindowsEventArgs" /> class.
            </summary>
      <param name="indices">
              An <b>int</b> array indicates the indices of the <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCandidateWindow" />.
            </param>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCandidateWindowsEventArgs.Indices">
      <summary>
              Gets an <b>int</b> array indicating the indices of the <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCandidateWindow" />.
            </summary>
      <value>
              An <b>int</b> array indicating the indices of the <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCandidateWindow" />.
            </value>
    </member>
    <member name="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCandidateWindowsEventHandler">
      <summary>
              Defines a the deleget for handling the ime events of ImeCandidateWindows event.
            </summary>
      <param name="sender">
              A <b>object</b> indicates the event sender.
            </param>
      <param name="e">
              A <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCandidateWindowsEventArgs" /> indicates the event arguments.
            </param>
    </member>
    <member name="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCandidateWindowCollection">
      <summary>
              Defines the collection of the candidate window.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCandidateWindowCollection.#ctor(C1.Win.C1Input.GrapeCity.Framework.Input.Ime)">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCandidateWindowCollection" /> class.
            </summary>
      <param name="device">
              An <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime" /> indicates the device.
            </param>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCandidateWindowCollection.Item(System.Int32)">
      <summary>
              Gets the candidate window by the given index.
            </summary>
      <param name="index">
              An <b>int</b> indicates the index.(0-3)
            </param>
      <returns>
              Returns an <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCandidateWindow" />.
            </returns>
    </member>
    <member name="E:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCandidateWindowCollection.CandidateWindowsOpening">
      <summary>
               When the ime candidate windows are about opened.
            </summary>
    </member>
    <member name="E:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCandidateWindowCollection.CandidateWindowsClosing">
      <summary>
              When the ime candidate windows is closing.
            </summary>
    </member>
    <member name="E:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCandidateWindowCollection.CandidateWindowsContentChanging">
      <summary>
              Raised when an ime is about to change the content of the candidate window.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.#ctor(System.Windows.Forms.IWin32Window)">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime" /> class.
            </summary>
      <param name="imeHost">
              An <see cref="T:System.Windows.Forms.IWin32Window" /> indicates the window that uses the ime device.
            </param>
      <remarks>
              The device type is ImeType.Unidirection.
            </remarks>
    </member>
    <member name="M:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.#ctor(System.Windows.Forms.IWin32Window,C1.Win.C1Input.GrapeCity.Framework.Input.ImeType)">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime" /> class.
            </summary>
      <param name="imeHost">
              An <see cref="T:System.Windows.Forms.IWin32Window" /> indicates the window that uses the ime device.
            </param>
      <param name="imeType">
              An <see cref="P:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeType" /> indicates the device type user hoped.
            </param>
      <remarks>
              If can created the device as the special type, is decided by imhost.
            </remarks>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeType">
      <summary>
              Gets the type of the ime device.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.Language">
      <summary>
              Gets or sets the language of the ime device.
            </summary>
      <value>
              A <see cref="T:System.Windows.Forms.InputLanguage" /> indicates the language of ime device.
            </value>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.IsActive">
      <summary>
              Gets a <b>bool</b> indicates the ime device is active.
            </summary>
      <value>
              A <b>bool</b> indicates whether the ime device is active.
            </value>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.IsEditing">
      <summary>
              Gets a flag indicates whether the ime is opening and has inputed string.
            </summary>
      <value>
        <b>true</b>, indicates the ime is opening and has inputed string, otherwise, <b>false</b>;
            </value>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.StatusWindow">
      <summary>
              Gets the status window of current ime device.
            </summary>
      <value>
              A <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeStatusWindow" /> indicates the status window.
            </value>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.CompositionWindow">
      <summary>
              Gets the composition window of current ime device.
            </summary>
      <value>
              A <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCompositionWindow" /> indicates the composition window.
            </value>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.CandidateWindows">
      <summary>
              Gets the collection of candiate window.
            </summary>
      <value>
              A <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ImeCandidateWindowCollection" /> indicates the candidate windows.
            </value>
    </member>
    <member name="P:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.Enable">
      <summary>
              Gets or sets the enable status of the ime device.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ConvertToConversionList(System.String)">
      <summary>
              Fetch the result strings from a specified reading string.
            </summary>
      <param name="readingString">
              A <b>string</b> which represents the reading string.
            </param>
      <returns>
              A string array which represents the candidate list.
            </returns>
    </member>
    <member name="M:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.ConvertToReverseConversionList(System.String)">
      <summary>
              Fecth reading strings from a specified result string.
            </summary>
      <param name="resultString">
              A <b>string</b> which represents the result string.
            </param>
      <returns>
              A string array which represents the reading strings.
            </returns>
    </member>
    <member name="M:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.SimulateHotKey(C1.Win.C1Input.GrapeCity.Framework.Input.ImeHotKeys)">
      <summary>
              Simulates the specified IME hot key, causing the same response as if the user 
              had pressed the hot key in the related window.
            </summary>
      <param name="hotKey">
              Specifies the identifier of the IME hot key
            </param>
    </member>
    <member name="M:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.Dispose">
      <summary>
              Dispose the <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime" />.
            </summary>
    </member>
    <member name="E:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.Activated">
      <summary>
              An event raised when the ime has been activated.
            </summary>
    </member>
    <member name="E:C1.Win.C1Input.GrapeCity.Framework.Input.Ime.Deactivated">
      <summary>
              An event raised when the ime has been deactivated.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.GrapeCity.Framework.Input.ImeSentenceMode">
      <summary>
              Determines how the IME should handle sentences.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.ImeSentenceMode.Inherit">
      <summary>
              Inherit the IME sentence mode of the parent control.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.ImeSentenceMode.NoControl">
      <summary>
              Do not control the IME sentence mode.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.ImeSentenceMode.Normal">
      <summary>
              Use phrase information to predict the next character.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.ImeSentenceMode.BiasForNames">
      <summary>
              The IME uses plural clause information to carry out conversion processing.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.ImeSentenceMode.BiasForSpeech">
      <summary>
              The IME uses conversation mode. This is useful for chat applications.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.ImeSentenceMode.Direct">
      <summary>
              No information for sentence.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.GrapeCity.Framework.Input.ConvertMode">
      <summary>
              Determines how to handle the IME candidate window.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.ConvertMode.NoCandidate">
      <summary>
              Clear the composition string and set the status to no composition string.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.ConvertMode.ShowCandidate">
      <summary>
              Convert the composition string and show the candidate window.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.GrapeCity.Framework.Input.ConvertMode.FirstInCandidate">
      <summary>
              Convert the composition string and pick the first in the candidate window.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.GrapeCity.Framework.Input.ImeHelper">
      <summary>
              A helper class is used to provides some the helps.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.GrapeCity.Framework.Input.ImeHelper.GetImeMode(C1.Win.C1Input.GrapeCity.Framework.Input.Ime)">
      <summary>
              Gets the IME mode from the ime device..
            </summary>
      <param name="ime">
              A <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime" /> indicates the ime device.
            </param>
      <returns>
              The ImeMode status.
            </returns>
    </member>
    <member name="M:C1.Win.C1Input.GrapeCity.Framework.Input.ImeHelper.SetImeMode(C1.Win.C1Input.GrapeCity.Framework.Input.Ime,System.Windows.Forms.ImeMode)">
      <summary>
              Sets the ime mode to the ime device.
            </summary>
      <param name="ime">
              A <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime" /> indicates the ime device.
            </param>
      <param name="imeMode">
              A <see cref="T:System.Windows.Forms.ImeMode" /> indicates the ime mode.
            </param>
    </member>
    <member name="M:C1.Win.C1Input.GrapeCity.Framework.Input.ImeHelper.SetImeSentenceMode(C1.Win.C1Input.GrapeCity.Framework.Input.Ime,C1.Win.C1Input.GrapeCity.Framework.Input.ImeSentenceMode)">
      <summary>
              Set the special sentence mode to ime device.
            </summary>
      <param name="ime">
              An <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime" /> indicates the ime device.
            </param>
      <param name="sentenceMode">
              An <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.ImeSentenceMode" /> indicates the sentence mode.
            </param>
    </member>
    <member name="M:C1.Win.C1Input.GrapeCity.Framework.Input.ImeHelper.GetImeSentenceMode(C1.Win.C1Input.GrapeCity.Framework.Input.Ime)">
      <summary>
              Get the sentence mode from the ime device.
            </summary>
      <param name="ime">
              An <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime" /> indicates the ime device.
            </param>
      <returns>
              An <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.ImeSentenceMode" /> indicates the sentence mode.
            </returns>
    </member>
    <member name="M:C1.Win.C1Input.GrapeCity.Framework.Input.ImeHelper.Convert(C1.Win.C1Input.GrapeCity.Framework.Input.Ime,System.String,C1.Win.C1Input.GrapeCity.Framework.Input.ConvertMode)">
      <summary>
              Converts the specified string and determines how the candidate
              window should appear.
            </summary>
      <param name="ime">
              An <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.Ime" /> indicates the ime device.
            </param>
      <param name="convertString">
              A string to convert.
            </param>
      <param name="mode">
              A <see cref="T:C1.Win.C1Input.GrapeCity.Framework.Input.ConvertMode" /> enumeration that represents how
              to process the candidate window.
            </param>
    </member>
    <member name="T:C1.Win.C1Input.TooltipShowingEventArgs">
      <summary>
            Provides data for the <see cref="E:C1.Win.C1Input.C1ComboBox.TooltipShowing" /> event.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.TooltipShowingEventArgs.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Input.TooltipShowingEventArgs" /> class.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.TooltipShowingEventArgs.#ctor(System.Int32,System.String,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,C1.Win.C1SuperTooltip.C1SuperTooltipBase)">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Input.TooltipShowingEventArgs" /> class.
            </summary>
      <param name="index">Index of the highlighted drop-down list item.</param>
      <param name="text">HTML content to be displayed in the tooltip.</param>
      <param name="bounds">Highlighted drop-down list item bounds (size and location of element) within its parent element, in pixels.</param>
      <param name="x">The X coordinate of the client where the tooltip should be displayed.</param>
      <param name="y">The Y coordinate of the client where the tooltip should be displayed.</param>
      <param name="duration">Duration of the tooltip, in milliseconds. The default value is 0 (the tooltip is always visible after display).</param>
      <param name="tooltip">
        <see cref="T:C1.Win.C1SuperTooltip.C1SuperTooltipBase" /> object for setting tooltip options.</param>
    </member>
    <member name="P:C1.Win.C1Input.TooltipShowingEventArgs.Handled">
      <summary>
            Gets or sets a value indicating whether the event was handled.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.TooltipShowingEventArgs.Index">
      <summary>
            Gets the index of the highlighted drop-down list item.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.TooltipShowingEventArgs.Text">
      <summary>
            Gets or sets the HTML content to be displayed in the tooltip.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.TooltipShowingEventArgs.Bounds">
      <summary>
            Gets the highlighted drop-down list item bounds (size and location) within it`s parent element, in pixels.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.TooltipShowingEventArgs.X">
      <summary>
            Gets or sets the X coordinate of the client where the tooltip should be displayed. 
            The coordinate is counted from the upper left corner of the drop-down window.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.TooltipShowingEventArgs.Y">
      <summary>
            Gets or sets the Y coordinate of the client where the tooltip should be displayed. 
            The coordinate is counted from the upper left corner of the drop-down window.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.TooltipShowingEventArgs.Duration">
      <summary>
            Gets or sets the duration of the tooltip, in milliseconds.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.TooltipShowingEventArgs.Tooltip">
      <summary>
            Gets the <see cref="T:C1.Win.C1SuperTooltip.C1SuperTooltipBase" /> object for setting tooltip options.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.AutoSuggestMode">
      <summary>
            Gets or sets a value which determines the filtering criteria for items which appear in the dropdown that is displayed when the AutoCompleteMode property is set to 'Suggest' or 'SuggestAppend'.
            </summary>
      <remarks>
            The search is case-insensitive.
            </remarks>
    </member>
    <member name="F:C1.Win.C1Input.AutoSuggestMode.Default">
      <summary>
            Default filtering method. Same to <see cref="F:C1.Win.C1Input.AutoSuggestMode.StartsWith" />.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.AutoSuggestMode.StartsWith">
      <summary>
            Beginning of a candidate string matches the entered string.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.AutoSuggestMode.Contains">
      <summary>
             A candidate string contains the entered string.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.UIStringsItemEventHandler">
      <summary>
            Represents a handler for an <see cref="T:C1.Win.C1Input.UIStrings" /> item related event.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.UIStringsItemEventArgs">
      <summary>
            Provides data for an <see cref="T:C1.Win.C1Input.UIStrings" /> item related event.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.UIStringsItemEventArgs.Key">
      <summary>
            Gets key of the item being added or changed.
            </summary>
      <value>The key.</value>
    </member>
    <member name="P:C1.Win.C1Input.UIStringsItemEventArgs.Value">
      <summary>
            Gets the string value.
            </summary>
      <value>The value.</value>
    </member>
    <member name="P:C1.Win.C1Input.UIStringsItemEventArgs.IsDefault">
      <summary>
            Gets a value indicating whether this instance is default.
            </summary>
      <value>
        <c>true</c> if this instance is default; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:C1.Win.C1Input.UIStringsItemEventArgs.Description">
      <summary>
            Gets the description.
            </summary>
      <value>The description.</value>
    </member>
    <member name="T:C1.Win.C1Input.UIStrings">
      <summary>
            Represents a collection of end user visible UI strings.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.UIStrings.Count">
      <summary>
            Gets the number of elements contained in the collection.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.UIStrings.Add(System.Object,System.Int32,System.String,System.String)">
      <summary>
            Adds a string to the collection, specifying the ordinal.
            </summary>
      <param name="key">The key of the string.</param>
      <param name="ordinal">The ordinal of the string.</param>
      <param name="value">The string.</param>
      <param name="description">The description of the string.</param>
    </member>
    <member name="M:C1.Win.C1Input.UIStrings.Add(System.Object,System.String,System.String)">
      <summary>
            Adds a string to the collection in alphabetical order.
            </summary>
      <param name="key">The key of the string.</param>
      <param name="value">The string.</param>
      <param name="description">The description of the string.</param>
    </member>
    <member name="M:C1.Win.C1Input.UIStrings.AddInOrder(System.Object,System.String,System.String)">
      <summary>
            Adds a string to the collection, preserving the order.
            </summary>
      <param name="key">The key of the string.</param>
      <param name="value">The string.</param>
      <param name="description">The description of the string.</param>
    </member>
    <member name="M:C1.Win.C1Input.UIStrings.Reset">
      <summary>
            Sets all strings in collection to their default values.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.UIStrings.ShouldSerialize">
      <summary>
            Indicates whether any of the strings in the current collection
            have non-default values.
            </summary>
      <returns>
        <c>true</c> if any of the strings have non-default values, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Input.UIStrings.IsDefault(System.Object)">
      <summary>
            Tests whether a string in the collection has default value.
            </summary>
      <param name="key">The key of the string to test.</param>
      <returns>
        <c>true</c> if the string has default value, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Input.UIStrings.GetDescription(System.Object)">
      <summary>
            Returns the description of a string.
            </summary>
      <param name="key">The key of the string to get the description of.</param>
      <returns>The string's description</returns>
    </member>
    <member name="M:C1.Win.C1Input.UIStrings.Reset(System.Object)">
      <summary>
            Resets a string to its default value.
            </summary>
      <param name="key">The key of the string to reset.</param>
    </member>
    <member name="M:C1.Win.C1Input.UIStrings.GetKeyAt(System.Int32)">
      <summary>
            Returns the key of an item with the specified index.
            </summary>
      <param name="index">The item index.</param>
      <returns>The item's key.</returns>
    </member>
    <member name="M:C1.Win.C1Input.UIStrings.GetValueAt(System.Int32)">
      <summary>
            Gets the string by its index.
            </summary>
      <param name="index">The string index.</param>
      <returns>The string.</returns>
    </member>
    <member name="M:C1.Win.C1Input.UIStrings.SetValueAt(System.Int32,System.String)">
      <summary>
            Sets the value of a string with the specified index.
            </summary>
      <param name="index">The string index.</param>
      <param name="value">The new string value.</param>
    </member>
    <member name="E:C1.Win.C1Input.UIStrings.ItemAdded">
      <summary>
            Occurs when a new item is added to the collection.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.UIStrings.OnItemAdded(C1.Win.C1Input.UIStringsItemEventArgs)">
      <summary>
            Fires the <see cref="E:C1.Win.C1Input.UIStrings.ItemAdded" /> event.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="E:C1.Win.C1Input.UIStrings.ItemChanged">
      <summary>
            Occurs when an item in the collection is changed.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.UIStrings.OnItemChanged(C1.Win.C1Input.UIStringsItemEventArgs)">
      <summary>
            Fires the <see cref="E:C1.Win.C1Input.UIStrings.ItemChanged" /> event.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="E:C1.Win.C1Input.UIStrings.CollectionChanged">
      <summary>
            Occurs when the collection has been changed.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.UIStrings.OnCollectionChanged(System.EventArgs)">
      <summary>
            Fires the <see cref="E:C1.Win.C1Input.UIStrings.CollectionChanged" /> event.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="T:C1.Win.C1Input.UIStrings.TypeConverter">
      <summary>
            Provides type conversion for the <see cref="T:C1.Win.C1Input.UIStrings" /> type.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.UIStrings.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
            For internal use.
            </summary>
      <param name="context">
      </param>
      <param name="culture">
      </param>
      <param name="value">
      </param>
      <param name="type">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.UIStrings.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>
            For internal use.
            </summary>
      <param name="context">
      </param>
      <param name="value">
      </param>
      <param name="attrFilter">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.UIStrings.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
            For internal use.
            </summary>
      <param name="context">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:C1.Win.C1Input.C1BasePicker">
      <summary>
            Base class for C1ColorPicker and C1FontPicker controls.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1BasePicker.#ctor">
      <summary>
            Initializes a new instance of the C1BasePicker class.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1BasePicker.BorderStyle">
      <summary>
            Determines the style of the control's border.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1BasePicker.OnParsing(C1.Win.C1Input.ParseEventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.C1BasePicker.OnFormatting(C1.Win.C1Input.FormatEventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.C1BasePicker.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.C1BasePicker.TextToValue(C1.Win.C1Input.C1BasePicker.TextToValueArgs@)">
      <summary>
            Should be overridden in deviced class and convert string to value.
            </summary>
      <param name="e">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.C1BasePicker.ValueToText(C1.Win.C1Input.C1BasePicker.ValueToTextArgs@)">
      <summary>
            Should be overridden in derived class and convert value to string.
            </summary>
      <param name="e">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:C1.Win.C1Input.C1Button">
      <summary>
            Represents a Windows button control supporting additional visual styles.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1Button.#ctor">
      <summary>
            Initializes a new instance of the C1Button class.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1Button.Dispose(System.Boolean)">
      <summary>
            Releases the resources used by the C1Button.
            </summary>
      <param name="disposing">
        <b>true</b> to release both managed and unmanaged resources; <b>false</b> to release only unmanaged resources.</param>
    </member>
    <member name="M:C1.Win.C1Input.C1Button.GetPreferredSize(System.Drawing.Size)">
      <summary>
            Retrieves the size of a rectangular area into which a control can be fitted.
            </summary>
      <param name="proposedSize">The custom-sized area for a control.</param>
      <returns>An ordered pair of type <see cref="T:System.Drawing.Size" /> representing the width and height of a rectangle.</returns>
    </member>
    <member name="P:C1.Win.C1Input.C1Button.VisualStyle">
      <summary>
            Gets or sets the visual style of the control.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1Button.ResetVisualStyle">
      <summary>
            Resets <see cref="P:C1.Win.C1Input.C1Button.VisualStyle" /> to the default value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1Button.ShouldSerializeVisualStyle">
      <summary>
            Tests whether <see cref="P:C1.Win.C1Input.C1Button.VisualStyle" /> should be serialized.
            </summary>
      <returns>True if <see cref="P:C1.Win.C1Input.C1Button.VisualStyle" /> should be serialized, false otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Input.C1Button.OnVisualStyleChanged(System.EventArgs)">
      <summary>
            Invokes the VisualStyleChanged event.
            </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="E:C1.Win.C1Input.C1Button.VisualStyleChanged">
      <summary>
            Occurs when the VisualStyle property has changed.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1Button.ResetVisualStyleBaseStyle">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1Button.ShouldSerializeVisualStyleBaseStyle">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>True if VisualStyleBaseStyle should be serialized, false otherwise.</returns>
    </member>
    <member name="P:C1.Win.C1Input.C1Button.DefaultThemeRootPath">
      <summary>
            Default Theme root path.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.C1CheckBox">
      <summary>
            Represents a Windows checkbox control supporting data binding to data source fields of Boolean, String, or Integer types.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1CheckBox.#ctor">
      <summary>
            Initializes a new instance of the C1CheckBox class. 
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1CheckBox.Dispose(System.Boolean)">
      <summary>
            Releases the resources used by the C1CheckBox.
            </summary>
      <param name="disposing">
        <b>true</b> to release both managed and unmanaged resources; <b>false</b> to release only unmanaged resources.</param>
    </member>
    <member name="P:C1.Win.C1Input.C1CheckBox.DataSource">
      <summary>
            The data source object to which the control is bound.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1CheckBox.DataField">
      <summary>
            The field of the data source object to which the control is bound.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1CheckBox.DataType">
      <summary>
            Type of the Value property.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1CheckBox.DisableOnNoData">
      <summary>
            Gets or sets whether the text box should be disabled when it is bound to an empty data source, i.e. CurrencyManager.Count = 0.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1CheckBox.Value">
      <summary>
            Gets or sets the current <see cref="P:C1.Win.C1Input.C1CheckBox.DataType" /> representation of the visual information contained in the control.
            </summary>
    </member>
    <member name="E:C1.Win.C1Input.C1CheckBox.ValueChanged">
      <summary>
            Occurs when the Value property has changed.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1CheckBox.OnValueChanged(System.EventArgs)">
      <summary>
            Invokes the ValueChanged event.
            </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:C1.Win.C1Input.C1CheckBox.OnCheckStateChanged(System.EventArgs)">
      <summary>
            Invokes the CheckStateChanged event.
            </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="P:C1.Win.C1Input.C1CheckBox.TranslateValues">
      <summary>
            Translates between string values and check box states.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1CheckBox.VisualStyle">
      <summary>
            Gets or sets the visual style of the control.
            </summary>
    </member>
    <member name="E:C1.Win.C1Input.C1CheckBox.VisualStyleChanged">
      <summary>
            Occurs when the VisualStyle property has changed.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1CheckBox.OnVisualStyleChanged(System.EventArgs)">
      <summary>
            Invokes the VisualStyleChanged event.
            </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="P:C1.Win.C1Input.C1CheckBox.BorderStyle">
      <summary>
            Gets or sets the border style of the C1CheckBox control.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1CheckBox.BorderColor">
      <summary>
            Gets or sets the border color of the control.
            </summary>
      <remarks>
        <para>Use the <b>BorderColor</b> property to specify the border color of the control. 
            This property is set using a <see cref="T:System.Drawing.Color" /> object.</para>
      </remarks>
    </member>
    <member name="M:C1.Win.C1Input.C1CheckBox.GetPreferredSize(System.Drawing.Size)">
      <summary>
            Retrieves the size of a rectangular area into which a control can be fitted.
            </summary>
      <param name="proposedSize">The custom-sized area for a control.</param>
      <returns>An ordered pair of type <see cref="T:System.Drawing.Size" /> representing the width and height of a rectangle.</returns>
    </member>
    <member name="P:C1.Win.C1Input.C1CheckBox.DefaultCheckboxRootPath">
      <summary>
            Default C1CheckBox path in Theme xml file.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1CheckBox.DefaultButtonThemeRootPath">
      <summary>
            Default C1Button path in Theme xml file.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.TranslateValues">
      <summary>
            Translates between string values and check box states.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.TranslateValues.Checked">
      <summary>
            Value for <b>Checked</b> state.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.TranslateValues.Unchecked">
      <summary>
            Value for <b>Unchecked</b> state.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.TranslateValues.Indeterminate">
      <summary>
            Value for <b>Indeterminate</b> state.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.TranslateValues.IndeterminateIsDbNull">
      <summary>
            Determines if DbNull is used for indeterminate state of check box.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.C1ColorPicker">
      <summary>
            Represents a Windows color picker control supporting additional visual styles.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1ColorPicker.#ctor">
      <summary>
            Initializes a new instance of the C1ColorPicker class.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1ColorPicker.AllowTransparent">
      <summary>
            Gets or sets a value indicating whether the transparent color can de selected.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1ColorPicker.AllowEmpty">
      <summary>
            Gets or sets a value indicating whether the empty color can de selected.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1ColorPicker.Color">
      <summary>
            Gets or sets the current color.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1ColorPicker.EmptyColorCaption">
      <summary>
            Gets or sets a caption for the empty color.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1ColorPicker.Value">
      <summary>
            Gets or sets the current color representation of the visual information contained in the control.
            </summary>
    </member>
    <member name="E:C1.Win.C1Input.C1ColorPicker.ColorChanged">
      <summary>
            Fires when the <see cref="P:C1.Win.C1Input.C1ColorPicker.Color" /> property changes.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1ColorPicker.DefaultThemeRootPath">
      <summary>
            Default path for the control in xml theme file.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.C1ColorPickerDropDownForm">
      <summary>
            Represents drop down color picker form.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1ColorPickerDropDownForm.#ctor">
      <summary>
            Initializes a new instance of the C1ColorPickerDropDownForm class.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1ColorPickerDropDownForm.OnPostChanges(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.C1ColorPickerDropDownForm.OnVisibleChanged(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.C1ColorPickerDropDownForm.Dispose(System.Boolean)">
      <summary>
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
    </member>
    <member name="T:C1.Win.C1Input.C1ComboBox">
      <summary>
            Represents a composite control combining a textbox and a drop-down item list.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1ComboBox.#ctor">
      <summary>
            Initializes a new instance of the C1ComboBox class.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1ComboBox.AutoSuggestMode">
      <summary>
            Gets or sets an option that controls how candidates searching works in auto-suggest mode. 
            </summary>
      <remarks>
        <para>
          <see cref="P:C1.Win.C1Input.C1ComboBox.AutoSuggestMode" /> works together with <see cref="P:System.Windows.Forms.TextBox.AutoCompleteMode" /> and <see cref="P:System.Windows.Forms.TextBox.AutoCompleteSource" /> properties.
            The <see cref="T:C1.Win.C1Input.AutoSuggestMode" /> works only if <b>CustomSource</b>"/&gt; or <b>ListItems</b> value is used in <see cref="T:System.Windows.Forms.TextBox.AutoCompleteSource" />.
            The property does not have any effect if  <see cref="P:System.Windows.Forms.TextBox.AutoCompleteSource" /> is any of <b>AllSystemSources</b>, <b>AllUrl</b>, <b>FileSystem</b>, <b>FileSystemDirectories</b>, <b>HistoryList</b>, <b>None</b>, <b>RecentlyUsedList</b>, <b>HistoryList</b>.
            The property does not have any effect if  <see cref="P:System.Windows.Forms.TextBox.AutoCompleteMode" /> is any of <b>Node</b> or <b>Append</b>.</para>
        <para>
            Items in Auto-Suggest mode are shown without images and formatting as a plain text.
            </para>
        <para>
          <see cref="T:C1.Win.C1Input.C1ComboBox" /> enters in Auto-Suggest mode when user types a character sequence that matches the filtering criteria. 
            </para>
      </remarks>
      <example>This sample shows how to use the AutoSuggestMode property.
            <code>
            C1ComboBox comboBox = new C1ComboBox();
            comboBox.AutoCompleteMode = AutoCompleteMode.Suggest;
            comboBox.AutoCompleteSource = AutoCompleteSource.ListItems;
            comboBox.AutoSuggestMode = AutoSuggestMode.Contains;
            comboBox.Items.AddRange(new string[]
                               {
                                   "January",
                                   "February",
                                   "March",
                                   "April",
                                   "May",
                                   "June",
                                   "July",
                                   "August",
                                   "September",
                                   "October",
                                   "November",
                                   "December"
                               });
            </code></example>
    </member>
    <member name="P:C1.Win.C1Input.C1ComboBox.AllowSpinLoop">
      <summary>
            Determines whether the spinner moves to the first item when it reaches the last, or to the last when it reaches the first.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1ComboBox.Items">
      <summary>
            Gets an object representing the collection of the items contained in this ComboBox.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1ComboBox.ItemMode">
      <summary>
            Gets or sets the combobox item mode.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1ComboBox.HtmlPattern">
      <summary>
            Gets or sets the pattern to build HTML representation of combobox items.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1ComboBox.SelectedItem">
      <summary>
             Gets or sets currently selected item in the ComboBox.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1ComboBox.SelectedIndex">
      <summary>
             Gets or sets the index specifying the currently selected item.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1ComboBox.ItemsImageList">
      <summary>
            Gets or sets the ImageList to get the images to display in the combobox items.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1ComboBox.Style">
      <summary>
            Gets the style of the drop down form and combobox items.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1ComboBox.InitialSelectedIndex">
      <summary>
            Gets or sets the index of the initially selected item.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1ComboBox.ItemsDataSource">
      <summary>
            Gets or sets the data source for items of this C1ComboBox.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1ComboBox.ItemsDisplayMember">
      <summary>
            Gets or sets the property to display items for this C1ComboBox control.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1ComboBox.ItemsValueMember">
      <summary>
            Gets or sets the path of the property to use as the actual value for the items in the C1ComboBox control.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1ComboBox.UseItemsBindingSource">
      <summary>
            Keeps <see cref="P:C1.Win.C1Input.C1ComboBox.SelectedIndex" /> property synchronized with <see cref="P:System.Windows.Forms.BindingSource.Position" />.
            </summary>
      <remarks>
        <see cref="P:C1.Win.C1Input.C1ComboBox.UseItemsBindingSource" /> does not have any effect if <see cref="P:C1.Win.C1Input.C1ComboBox.ItemsDataSource" /> value is not a <see cref="T:System.Windows.Forms.BindingSource" />.
            </remarks>
    </member>
    <member name="P:C1.Win.C1Input.C1ComboBox.TranslateValue">
      <summary>
            Translates <see cref="P:C1.Win.C1Input.C1TextBox.Value" /> to <see cref="P:C1.Win.C1Input.C1TextBox.Text" /> using items data source.
            <seealso cref="P:C1.Win.C1Input.C1ComboBox.ItemsDataSource" /><seealso cref="P:C1.Win.C1Input.C1ComboBox.ItemsDisplayMember" /><seealso cref="P:C1.Win.C1Input.C1ComboBox.ItemsValueMember" /></summary>
    </member>
    <member name="P:C1.Win.C1Input.C1ComboBox.SetSelectedIndexImmediately">
      <summary>
            Gets whether the selected index changes immediately when the drop-down form is open or after the form is closed by pressing the 'enter' key.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1ComboBox.MaxDropDownItems">
      <summary>
            Gets or sets the maximum number of items to be shown in the drop-down portion of the <see cref="T:C1.Win.C1Input.C1ComboBox" />.
            </summary>
      <remarks>
        <para>When MaxDropDownItems is 0, the height of DropDown is half of screen height.</para>
        <para>If MaxDropDownItems does not fit screen height then the result height fit the maximum available space on screen.</para>
        <para>The default height of item is height of first item of the <see cref="T:C1.Win.C1Input.C1ComboBox" />.</para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1Input.C1ComboBox.MouseWheelSelection">
      <summary>
            Gets or sets a value indicating whether the selected item changes using the mouse wheel when the <see cref="T:C1.Win.C1Input.C1ComboBox" /> isn't dropped down.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1ComboBox.HandleScrolling">
      <summary>
            Gets or sets a value that indicates whether the <see cref="T:C1.Win.C1Input.C1ComboBox" /> handles the scrolling of the parent control or not.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1ComboBox.ShowTooltip">
      <summary>
            Gets or sets a value that indicates whether the <see cref="T:C1.Win.C1Input.C1ComboBox" /> displays a tooltip for the highlighted drop-down list item or not.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1ComboBox.DropDownWidth">
      <summary>
            Gets or set the width of the drop down box in a combo box. 
            </summary>
      <remarks>
            To enable autosizing, set this properties to -1.
            </remarks>
    </member>
    <member name="M:C1.Win.C1Input.C1ComboBox.SetItemsDataSource(System.Object,System.String)">
      <summary>
            Sets items data source and data member for the C1ComboBox.
            </summary>
      <param name="dataSource">Data source.</param>
      <param name="dataMember">Data member.</param>
    </member>
    <member name="M:C1.Win.C1Input.C1ComboBox.SetItemsDataSource(System.Object,System.String,System.Int32)">
      <summary>
            Sets items data source, data member and initially selected item index for the C1ComboBox.
            </summary>
      <param name="dataSource">Data source.</param>
      <param name="dataMember">Data member.</param>
      <param name="selectedIndex">Initially selected item index.</param>
    </member>
    <member name="E:C1.Win.C1Input.C1ComboBox.SelectedItemChanged">
      <summary>
            Occurs when the <see cref="P:C1.Win.C1Input.C1ComboBox.SelectedItem" /> changes.
            </summary>
    </member>
    <member name="E:C1.Win.C1Input.C1ComboBox.SelectedIndexChanged">
      <summary>
            Occurs when the <see cref="P:C1.Win.C1Input.C1ComboBox.SelectedIndex" /> changes.
            </summary>
    </member>
    <member name="E:C1.Win.C1Input.C1ComboBox.TooltipShowing">
      <summary>
            Occurs before a tooltip is displayed for a highlighted drop-down list item. 
            Allows to set tooltip options or cancel the tooltip display.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1ComboBox.CreateItemsCollection">
      <summary>
            Creates a new instance of the item collection.
            </summary>
      <returns>A <see cref="T:C1.Win.C1Input.ComboBoxItemList" /> that represents the new item collection.</returns>
    </member>
    <member name="M:C1.Win.C1Input.C1ComboBox.OnSelectedItemChanged">
      <summary>
            Raises the <see cref="E:C1.Win.C1Input.C1ComboBox.SelectedItemChanged" /> event.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1ComboBox.OnSelectedIndexChanged">
      <summary>
            Raises the <see cref="E:C1.Win.C1Input.C1ComboBox.SelectedIndexChanged" /> event.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1ComboBox.OnTooltipShowing(C1.Win.C1Input.TooltipShowingEventArgs)">
      <summary>
            Raises the <see cref="E:C1.Win.C1Input.C1ComboBox.TooltipShowing" /> event.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1ComboBox.Dispose(System.Boolean)">
      <summary>
            Releases the resources used by the C1ComboBox.
            </summary>
      <param name="disposing">
        <b>true</b> to release both managed and unmanaged resources; <b>false</b> to release only unmanaged resources.</param>
    </member>
    <member name="M:C1.Win.C1Input.C1ComboBox.BeginInit">
      <summary>
            Signals the object that initialization is starting.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1ComboBox.EndInit">
      <summary>
            Signals the object that initialization is complete.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.ComboItemMode">
      <summary>
            Specifies how the visual representation of combo box items is building.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.ComboItemMode.Default">
      <summary>
            C1ComboBox displays text of combo box item in the drop drown list.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.ComboItemMode.Html">
      <summary>
            Each combo box item is fragment of HTML. <see cref="T:C1.Win.C1Input.C1ComboBox" /> parses the HTML fragment and displays it as the drop down items.
            </summary>
      <remarks>
            C1ComboBox uses the same subset of HTML as C1SuperLabel does. 
            It does not support the full HTML features.
            </remarks>
    </member>
    <member name="F:C1.Win.C1Input.ComboItemMode.HtmlPattern">
      <summary>
            Each combo box item is fragment of HTML defined by <see cref="P:C1.Win.C1Input.C1ComboBox.HtmlPattern" /> property. 
            <see cref="T:C1.Win.C1Input.C1ComboBox" /> parses the HTML pattern and replaces any of "{FieldName}" entires with the combo box item field value.
            </summary>
      <remarks>
            C1ComboBox uses the same subset of HTML as C1SuperLabel does. 
            It does not support the full HTML features.
            </remarks>
    </member>
    <member name="T:C1.Win.C1Input.DropDownStyle">
      <summary>
             Specifies the <see cref="T:C1.Win.C1Input.C1DropDownControl" /> style.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.DropDownStyle.Default">
      <summary>
            Text portion of the drop down control is editable and the drop down is displayed by clicking 
            the down arrow.
            </summary>
      <remarks>
            This means that the user can enter a new value and is not limited to selecting an existing value.
            </remarks>
    </member>
    <member name="F:C1.Win.C1Input.DropDownStyle.DropDownList">
      <summary>
            The drop down of the <see cref="T:C1.Win.C1Input.C1DropDownControl" /> is displayed by clicking 
            on either the text portion of the control or drop down button. The text portion is not editable. 
            </summary>
      <remarks>
            This means that the user cannot enter a value not existing in the drop down. 
            </remarks>
    </member>
    <member name="T:C1.Win.C1Input.ComboBoxItemList">
      <summary>
            Represents collection of <see cref="T:C1.Win.C1Input.C1ComboBox" /> drop down items.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.ComboBoxItemList.#ctor(C1.Win.C1Input.C1ComboBox)">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Input.ComboBoxItemList" /> class.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.ComboBoxItemList.Item(System.Int32)">
      <summary>
            Gets or sets the item at the specified index.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.ComboBoxItemList.Count">
      <summary>
            Gets the number of items contained in the <see cref="T:C1.Win.C1Input.ComboBoxItemList" /> instance.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.ComboBoxItemList.Add(System.Object)">
      <summary>
            Adds an item to the <see cref="T:C1.Win.C1Input.ComboBoxItemList" />.
            </summary>
      <param name="value">The <see cref="T:System.Object" /> to add to the <see cref="T:C1.Win.C1Input.ComboBoxItemList" />.</param>
    </member>
    <member name="M:C1.Win.C1Input.ComboBoxItemList.AddRange(System.Collections.Generic.IEnumerable{System.Object})">
      <summary>
            Adds items of the specified collection to the end of the <see cref="T:C1.Win.C1Input.ComboBoxItemList" />.
            </summary>
      <param name="collection">The specified collection of items.</param>
    </member>
    <member name="M:C1.Win.C1Input.ComboBoxItemList.Clear">
      <summary>
            Removes all items from the <see cref="T:C1.Win.C1Input.ComboBoxItemList" />.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.ComboBoxItemList.Contains(System.Object)">
      <summary>
            Determines whether an item is in the <see cref="T:C1.Win.C1Input.ComboBoxItemList" />.
            </summary>
      <param name="value">The item to locate in the collection.</param>
    </member>
    <member name="M:C1.Win.C1Input.ComboBoxItemList.IndexOf(System.Object)">
      <summary>
            Searches for the specified item and returns the zero-based index.
            </summary>
      <param name="value">The specified item.</param>
    </member>
    <member name="M:C1.Win.C1Input.ComboBoxItemList.Insert(System.Int32,System.Object)">
      <summary>
            Inserts item into the <see cref="T:C1.Win.C1Input.ComboBoxItemList" /> at the specified index.
            </summary>
      <param name="index">Index of the item.</param>
      <param name="value">The specified item.</param>
    </member>
    <member name="M:C1.Win.C1Input.ComboBoxItemList.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{System.Object})">
      <summary>
            Inserts items into the <see cref="T:C1.Win.C1Input.ComboBoxItemList" /> at the specified index.
            </summary>
      <param name="index">Index of the item.</param>
      <param name="collection">The specified collection of items.</param>
    </member>
    <member name="M:C1.Win.C1Input.ComboBoxItemList.Remove(System.Object)">
      <summary>
            Removes the first occurrence of a specified item from the collection.
            </summary>
      <param name="value">The specified item.</param>
    </member>
    <member name="M:C1.Win.C1Input.ComboBoxItemList.RemoveAt(System.Int32)">
      <summary>
            Removes the item at the specified index of the collection.
            </summary>
      <param name="index">The specified index.</param>
    </member>
    <member name="M:C1.Win.C1Input.ComboBoxItemList.RemoveAll(System.Predicate{System.Object})">
      <summary>
            Removes all the items that match the conditions defined by the specified predicate.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.ComboBoxItemList.RemoveRange(System.Int32,System.Int32)">
      <summary>
            Removes a range of elements from the <see cref="T:C1.Win.C1Input.ComboBoxItemList" />.
            </summary>
      <param name="index">Index of the item.</param>
      <param name="count">The number of items to remove.</param>
    </member>
    <member name="M:C1.Win.C1Input.ComboBoxItemList.GetEnumerator">
      <summary>
            Returns an enumerator that iterates through the <see cref="T:C1.Win.C1Input.ComboBoxItemList" />.
            </summary>
    </member>
    <member name="E:C1.Win.C1Input.ComboBoxItemList.CollectionChanged">
      <summary>
            Occurs when the <see cref="T:C1.Win.C1Input.ComboBoxItemList" /> changes, either by adding or removing an item.
            </summary>
      <remarks>
            see <seealso cref="T:System.Collections.Specialized.INotifyCollectionChanged" /></remarks>
    </member>
    <member name="M:C1.Win.C1Input.ComboBoxItemList.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>
            Fires the CollectionChanged event.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.ComboBoxItemList.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Int32)">
      <summary>
            Fires the CollectionChanged event.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.ComboBoxItemList.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.Generic.IEnumerable{System.Object})">
      <summary>
            Fires the CollectionChanged event.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.ComboBoxItemList.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.Generic.IEnumerable{System.Object},System.Int32)">
      <summary>
            Fires the CollectionChanged event.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.ComboBoxItemList.OnCollectionReset">
      <summary>
            Fires the CollectionChanged event.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.ComboBoxStyle">
      <summary>
             Style for drop down form and combobox items.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.ComboBoxStyle.DropDownBackColor">
      <summary>
            Background color of the drop down form.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.ComboBoxStyle.DropDownBorderColor">
      <summary>
            Color of border of the drop down form.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.ComboBoxStyle.Padding">
      <summary>
            Gets or sets padding within the drop down form.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.ComboBoxStyle.Font">
      <summary>
            Default font of the combo box items.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.ComboBoxStyle.TextSpacing">
      <summary>
            Space around the textual parts of the combo box items.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.ComboBoxStyle.DefaultItemForeColor">
      <summary>
            Default text color of the combo box items.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.ComboBoxStyle.HotItemForeColor">
      <summary>
            Text color of the combo box items in hot state.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.ComboBoxStyle.HotItemBorderColor">
      <summary>
            Border color of the combo box items in hot state.
             </summary>
    </member>
    <member name="P:C1.Win.C1Input.ComboBoxStyle.HotItemBackColor">
      <summary>
            Background color of the combo box items in hot state.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.ComboBoxStyle.Reset">
      <summary>
            Resets the style to default value.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.JapaneseEraHelper">
      <summary>
            Helper static class that contains AddJapaneseEra function.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.JapaneseEraHelper.ClearJapaneseEras">
      <summary>
            Clears the all Japanese Eras.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.JapaneseEraHelper.AddJapaneseEra(System.Int32,System.DateTime,System.DateTime,System.String,System.String,System.String,System.String)">
      <summary>
            Adds era to the Japanese calendar.
            </summary>
      <param name="era">Era numeric id.</param>
      <param name="startTime">Start day of the era.</param>
      <param name="endTime">End day of the era.</param>
      <param name="eraName">Japanese name of the era.</param>
      <param name="abbreviatedEraName">Short Japanese name of the era.</param>
      <param name="englishEraName">Era name in English. Optional.</param>
      <param name="symbolEraName">One Latin symbol era name.</param>
    </member>
    <member name="M:C1.Win.C1Input.JapaneseEraHelper.ReadErasFromGCConfig(System.String)">
      <summary>
            Reads eras info from the GC configuration file.
            </summary>
      <param name="sectionName">Section name.</param>
    </member>
    <member name="T:C1.Win.C1Input.DropDownControlButtonFlags">
      <summary>
            Used by C1DropDownControl.VisibleButtons properties.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.DropDownControlButtonFlags.None">
      <summary>
            Show without any button
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.DropDownControlButtonFlags.UpDown">
      <summary>
            Show up/down buttons.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.DropDownControlButtonFlags.DropDown">
      <summary>
            Show dropdown button.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.DropDownControlButtonFlags.Modal">
      <summary>
            Show button to start a modal dialog.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.DropDownControlButtonFlags.Custom">
      <summary>
            Show a custom button.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.DropDownControlButtonFlags.All">
      <summary>
            Show all buttons
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.UpDownButtonClickEventHandler">
      <summary>
            Represents the method that handles a UpDownButtonClick event.
            </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">An UpDownButtonClickEventArgs object that contains the event data.</param>
    </member>
    <member name="T:C1.Win.C1Input.UpDownButtonClickEventArgs">
      <summary>
            Provides data for a UpDownButtonClick event.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.UpDownButtonClickEventArgs.#ctor(System.Int32,System.Boolean)">
      <summary>
            Initializes a new instance of the UpDownButtonClickEventArgs class.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.UpDownButtonClickEventArgs.Delta">
      <summary>
            Set to 1 if Up button is pressed, to -1 if Down button is pressed.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.UpDownButtonClickEventArgs.Done">
      <summary>
            Set to true in the user's UpDownButtonClick event handler. No built-in processing is done. This allows the user to override the default behavior of the buttons.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.DropDownClosedEventArgs">
      <summary>
            Provides data for a DropDownClosed event.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.DropDownClosedEventArgs.Selected">
      <summary>
            Returns True if a value is selected in dropdown dialog.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DropDownClosedEventArgs.#ctor(System.Boolean)">
      <summary>
            Initializes a new instance of the DropDownClosedEventArgs class.
            </summary>
      <param name="selected">
      </param>
    </member>
    <member name="T:C1.Win.C1Input.DropDownClosedEventHandler">
      <summary>
            Represents the method that handles a DropDownClosed event.
            </summary>
      <param name="sender">The source of the event</param>
      <param name="e">A DropDownClosedEventArgs object that contains the event data.</param>
    </member>
    <member name="T:C1.Win.C1Input.ButtonImages">
      <summary>
            Images for C1DropDownControl buttons
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.ButtonImages.ButtonImagesTypeConverter">
      <summary>
            TypeConverter class for ButtonImages
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.ButtonImages.ButtonImagesTypeConverter.Text">
      <summary>
            This property is for internal use only.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.ButtonImages.ButtonImagesTypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="context">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.ButtonImages.ButtonImagesTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="context">
      </param>
      <param name="culture">
      </param>
      <param name="value">
      </param>
      <param name="type">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.ButtonImages.Reset">
      <summary>
            Clears all custom images and returns standard images for C1DropDownControl buttons. 
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.ButtonImages.HasImage">
      <summary>
            Returns True if any custom image is assigned
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:C1.Win.C1Input.ButtonImages.UpImage">
      <summary>
            Image for Up button
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.ButtonImages.ShouldSerializeUpImage">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.ButtonImages.ResetUpImage">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.ButtonImages.DownImage">
      <summary>
            Image for Down button
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.ButtonImages.ShouldSerializeDownImage">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.ButtonImages.ResetDownImage">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.ButtonImages.DropImage">
      <summary>
            Image for DropDown button
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.ButtonImages.ShouldSerializeDropImage">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.ButtonImages.ResetDropImage">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.ButtonImages.ModalImage">
      <summary>
            Image for Modal button
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.ButtonImages.ShouldSerializeModalImage">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.ButtonImages.ResetModalImage">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.ButtonImages.CustomImage">
      <summary>
            Image for Custom button
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.ButtonImages.ShouldSerializeCustomImage">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.ButtonImages.ResetCustomImage">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.DropDownFormOptionsFlags">
      <summary>
            Used by DropDownForm.Options property.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.DropDownFormOptionsFlags.None">
      <summary>
            Indicates that none of the options are set.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.DropDownFormOptionsFlags.Focusable">
      <summary>
            Indicates that DropDownForm can contain focus.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.DropDownFormOptionsFlags.FixedWidth">
      <summary>
            The end users are not allowed to change the width of the dropdown form resizing it.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.DropDownFormOptionsFlags.FixedHeight">
      <summary>
            The end users are not allowed to change the height of the dropdown form resizing it.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.DropDownFormOptionsFlags.AlwaysPostChanges">
      <summary>
            If this flag is set, the changes to the control Value can only be cancelled explicitly, with Esc key 
            or using the CloseDropDown method, and implicit cancellation (when the form is closed because it loses focus) is disabled.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.DropDownFormOptionsFlags.NoCancelOnEscape">
      <summary>
            If this flag is set, pressing the Esc key does not close the form.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.DropDownFormOptionsFlags.NoPostOnEnter">
      <summary>
            If this flag is set, pressing the Enter key does not close the form.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.DropDownFormOptionsFlags.AutoResize">
      <summary>
            If set, the dropdown form width is automatically adjusted to the width of the owner control
            before the form is shown.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.DropDownFormOptionsFlags.FixedSize">
      <summary>
            = FixedWidth + FixedHeight
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.DropDownForm">
      <summary>
            Base class for custom dropdown forms.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DropDownForm.#ctor">
      <summary>
            Initializes a new instance of the DropDownForm class.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DropDownForm.Dispose(System.Boolean)">
      <summary>
            Releases the resources used by the DropDownForm.
            </summary>
      <param name="disposing">
        <b>true</b> to release both managed and unmanaged resources; <b>false</b> to release only unmanaged resources.</param>
    </member>
    <member name="M:C1.Win.C1Input.DropDownForm.OnTooltipShowing(C1.Win.C1Input.TooltipShowingEventArgs)">
      <summary>
            Raises the <see cref="E:C1.Win.C1Input.DropDownForm.TooltipShowing" /> event.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DropDownForm.OnVisualStyleChanged(System.EventArgs)">
      <summary>
            Invokes the VisualStyleChanged event.
            </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:C1.Win.C1Input.DropDownForm.PreFilterMessage(System.Windows.Forms.Message@)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="m">
      </param>
      <returns>
      </returns>
    </member>
    <member name="P:C1.Win.C1Input.DropDownForm.ShouldApplyTheme">
      <summary>
            Gets a value indicating whether theme should be applied to dropdown form
            when it applied to <see cref="T:C1.Win.C1Input.C1DropDownControl" />. This property returns <b>true</b>
            by default.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DropDownForm.BorderStyle">
      <summary>
            Determines the style of the control's border.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DropDownForm.ClientSize">
      <summary>
            This property is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DropDownForm.Options">
      <summary>
            Determine various behavioral options of the dropdown form.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DropDownForm.FocusControl">
      <summary>
            Determines the control on the form that gets input focus when the form is shown.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DropDownForm.DropDownAlign">
      <summary>
            Alignment of the dropdown form relative to the owner control.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DropDownForm.OwnerControl">
      <summary>
            This property is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DropDownForm.CreateParams">
      <summary>
            This property is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DropDownForm.KeyPreview">
      <summary>
            This property is for internal use only.
            </summary>
    </member>
    <member name="E:C1.Win.C1Input.DropDownForm.PostChanges">
      <summary>
            Occurs when Value property of the OwnerControl is updated by the dropdown form.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DropDownForm.OnPostChanges(System.EventArgs)">
      <summary>
            Fires the PostChanges event.
            </summary>
      <param name="e">Contains arguments describing the event.</param>
    </member>
    <member name="E:C1.Win.C1Input.DropDownForm.CancelChanges">
      <summary>
            Occurs when changes made by dropdown form are cancelled.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DropDownForm.OnCancelChanges(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="E:C1.Win.C1Input.DropDownForm.Open">
      <summary>
            Occurs when dropdown form is opened.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DropDownForm.OnOpen(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="E:C1.Win.C1Input.DropDownForm.OwnerControlTextChanged">
      <summary>
            Occurs when OwnerControl.Text property is changed.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DropDownForm.OnOwnerControlTextChanged(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="E:C1.Win.C1Input.DropDownForm.OwnerControlValueChanged">
      <summary>
            Occurs when OwnerControl.Value property is changed.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DropDownForm.OnOwnerControlValueChanged(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.DropDownForm.OnActivated(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.DropDownForm.OnDeactivate(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.DropDownForm.CreateHandle">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DropDownForm.OnVisibleChanged(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.DropDownForm.WndProc(System.Windows.Forms.Message@)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="m">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.DropDownForm.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.DropDownForm.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.DropDownForm.CloseDropDown">
      <summary>
            Closes the dropdown form.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DropDownForm.CloseDropDown(System.Boolean)">
      <summary>
            Closes the dropdown form.
            </summary>
      <param name="doPost">
      </param>
    </member>
    <member name="T:C1.Win.C1Input.C1DropDownControl">
      <summary>
            Represents a base drop-down control supporting up/down buttons.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1DropDownControl.#ctor">
      <summary>
            Initializes a new instance of the C1DropDownControl class.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1DropDownControl.Dispose(System.Boolean)">
      <summary>
            Releases the resources used by the C1DropDownControl.
            </summary>
      <param name="disposing">
        <b>true</b> to release both managed and unmanaged resources; <b>false</b> to release only unmanaged resources.</param>
    </member>
    <member name="P:C1.Win.C1Input.C1DropDownControl.ImageTransparentColor">
      <summary>
            Gets or sets the color to treat as transparent in a image.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DropDownControl.AutoOpen">
      <summary>
            Gets or sets a value indicating whether to open the combo box when the control receives the focus.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DropDownControl.DropDownFormCreationTime">
      <summary>
            Determines the time when drop down form is created.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DropDownControl.ImagePlace">
      <summary>
            Has valid value only if ShowValueImage returns true.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DropDownControl.DropDownStyle">
      <summary>
            Gets or sets the style of the combo box.
            </summary>
      <remarks>
            The DropDownStyle property specifies whether the text portion can be edited.
            <para>
            If the value is Default, the text is editable and the dropdown list is displayed by clicking the down arrow.
            </para><para>
            If the value is DropDownList, the text is not editable and the dropdown list is displayed by clicking any part of the control. 
            </para></remarks>
    </member>
    <member name="P:C1.Win.C1Input.C1DropDownControl.Image">
      <summary>
            Gets or sets the button image.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DropDownControl.ImageIndex">
      <summary>
            Gets or sets the index of the button image in the ImageList.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DropDownControl.ImageKey">
      <summary>
            Gets or sets the key of the button image in the ImageList.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DropDownControl.ImageList">
      <summary>
            Gets or sets the ImageList to get the images to display in the drop down items.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DropDownControl.ImagePadding">
      <summary>
            Gets or sets the image padding.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DropDownControl.VisibleButtons">
      <summary>
            Gets or sets a value specifying which buttons are visible. The default is (UpDown Or DropDown).
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DropDownControl.ShowDropDownButton">
      <summary>
            Determines if the dropdown button is visible.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DropDownControl.ShowUpDownButtons">
      <summary>
            Determines if the up/down buttons are visible.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DropDownControl.ShowModalButton">
      <summary>
            Determines if the modal button is visible.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DropDownControl.ShowCustomButton">
      <summary>
            Determines if the modal button is visible.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DropDownControl.InterceptArrowKeys">
      <summary>
            Determines if the up/down buttons intercept and handle Up and Down arrow keys.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DropDownControl.DropDownFormClassName">
      <summary>
            Specifies the class name of a Form serving as the dropdown window.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1DropDownControl.ShouldSerializeDropDownFormClassName">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.C1DropDownControl.ResetDropDownFormClassName">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DropDownControl.DropDownForm">
      <summary>
            Returns dropdown form instance associated with the control.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DropDownControl.DefaultDropDownFormClassName">
      <summary>
            Specifies form class that is used by default as the dropdown for the control.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DropDownControl.DefaultDropDownForm">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DropDownControl.DefaultSize">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DropDownControl.DroppedDown">
      <summary>
            Run-time read-only property indicating if the dropdown is currently open.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DropDownControl.ButtonWidth">
      <summary>
            Specifies the button width instead of using the default width.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DropDownControl.GapHeight">
      <summary>
            Distance in pixels between the control edge and the dropdown.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DropDownControl.MouseClickPassThrough">
      <summary>
            Gets or sets whether the mouse click event is consumed or passed through after closing the dropdown.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DropDownControl.DropDownFormAlign">
      <summary>
            Alignment of the dropdown form relative to the control.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DropDownControl.ButtonCursor">
      <summary>
            The cursor that is displayed when the mouse is over a button.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1DropDownControl.ShouldSerializeButtonCursor">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.C1DropDownControl.ResetButtonCursor">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DropDownControl.ButtonImages">
      <summary>
            Gets or sets the images for buttons
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1DropDownControl.ShouldSerializeButtonImages">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.C1DropDownControl.ResetButtonImages">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DropDownControl.Cursor">
      <summary>
            Gets or sets the cursor that is displayed when the mouse pointer is over the control.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DropDownControl.CustomAreaPlace">
      <summary>
            This property is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DropDownControl.CustomAreaWidth">
      <summary>
            This property is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DropDownControl.UpDownButtonAlignment">
      <summary>
            Gets or sets the alignment of the spin button. 
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1DropDownControl.SetProposedValue(System.Object)">
      <summary>
            This method works exactly as setting the Value property, except that it does not change the internal variable
            storing the value before editing, so the user can press Esc and restore the previous value. 
            This method works only in edit  or DropDownList mode. If the control is not in edit or DropDownList mode, this methods does nothing.
            </summary>
      <param name="value">Value to set to the control.</param>
    </member>
    <member name="M:C1.Win.C1Input.C1DropDownControl.OpenDropDown">
      <summary>
            Shows the dropdown.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1DropDownControl.CloseDropDown">
      <summary>
            Closes the dropdown.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1DropDownControl.CloseDropDown(System.Boolean)">
      <summary>
            Closes the dropdown.
            </summary>
      <param name="doPost">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.C1DropDownControl.SpinUp">
      <summary>
              Performs the spin up action.
            </summary>
      <remarks>
              This method has the same behavior as pressing the up key.
            </remarks>
      <seealso cref="M:C1.Win.C1Input.C1DropDownControl.SpinDown" />
    </member>
    <member name="M:C1.Win.C1Input.C1DropDownControl.SpinDown">
      <summary>
              Performs the spin down action.
            </summary>
      <remarks>
              This method has the same behavior as pressing the down key.
            </remarks>
      <seealso cref="M:C1.Win.C1Input.C1DropDownControl.SpinUp" />
    </member>
    <member name="E:C1.Win.C1Input.C1DropDownControl.DropDownOpening">
      <summary>
            Occurs just before the dropdown is opened.
            </summary>
    </member>
    <member name="E:C1.Win.C1Input.C1DropDownControl.BeforeDropDownOpen">
      <summary>
            Occurs just before the dropdown is opened.
            </summary>
    </member>
    <member name="E:C1.Win.C1Input.C1DropDownControl.DropDownOpened">
      <summary>
            Occurs after the dropdown is opened.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1DropDownControl.OnDropDownOpening(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.C1DropDownControl.OnBeforeDropDownOpen(System.ComponentModel.CancelEventArgs)">
      <summary>
      </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.C1DropDownControl.OnDropDownOpened(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="E:C1.Win.C1Input.C1DropDownControl.DropDownClosed">
      <summary>
            Occurs when the dropdown has been closed.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1DropDownControl.OnDropDownClosed(C1.Win.C1Input.DropDownClosedEventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="E:C1.Win.C1Input.C1DropDownControl.UpDownButtonClick">
      <summary>
            Occurs when UpDown buttons are clicked.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1DropDownControl.OnUpDownButtonClick(C1.Win.C1Input.UpDownButtonClickEventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="E:C1.Win.C1Input.C1DropDownControl.ModalButtonClick">
      <summary>
            Occurs when the Modal button is clicked.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1DropDownControl.OnModalButtonClick(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="E:C1.Win.C1Input.C1DropDownControl.CustomButtonClick">
      <summary>
            Occurs when the Custom button is clicked.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1DropDownControl.OnCustomButtonClick(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="E:C1.Win.C1Input.C1DropDownControl.DropDownFormAlignChanged">
      <summary>
            Occurs when the value of the DropDownFormAlign property has changed.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1DropDownControl.OnDropDownFormAlignChanged(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="E:C1.Win.C1Input.C1DropDownControl.DropDownAlignChanged">
      <summary>
            Occurs when the value of the DropDownAlign property has changed.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1DropDownControl.OnDropDownAlignChanged(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="E:C1.Win.C1Input.C1DropDownControl.ButtonCursorChanged">
      <summary>
            Event fired when the value of ButtonCursor property is changed.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1DropDownControl.OnButtonCursorChanged(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.C1DropDownControl.OnCreateDropDownFrom(C1.Win.C1Input.DropDownForm)">
      <summary>
            Called when a drop down form is created.
            </summary>
      <param name="dropDownForm">The new dropdown form.</param>
    </member>
    <member name="P:C1.Win.C1Input.C1DropDownControl.MinSizeInternal">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1DropDownControl.CalcSizeInternal">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1DropDownControl.GetImageSize">
      <summary>
            Returns image size.
            </summary>
      <returns>The size object.</returns>
    </member>
    <member name="P:C1.Win.C1Input.C1DropDownControl.ShowImage">
      <summary>
            Determines if image should be shown.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1DropDownControl.DrawCustomArea(System.Drawing.Graphics)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="g">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.C1DropDownControl.OnReadOnlyChanged(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.C1DropDownControl.OnEnabledChanged(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.C1DropDownControl.WndProc(System.Windows.Forms.Message@)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="m">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.C1DropDownControl.OnMouseLeave(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.C1DropDownControl.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.C1DropDownControl.OnGotFocus(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.C1DropDownControl.OnLostFocus(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.C1DropDownControl.ProcessKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.C1DropDownControl.ProcessKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.C1DropDownControl.ProcessKeyUp(System.Windows.Forms.KeyEventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.C1DropDownControl.OnTextChanged(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.C1DropDownControl.OnValueChanged(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.C1DropDownControl.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.C1DropDownControl.OnCursorChanged(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.C1DropDownControl.ShouldHandleEscape">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.C1DropDownControl.PreProcessMessage(System.Windows.Forms.Message@)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="m">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.C1DropDownControl.DrawImage(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            Draws image in the control.
            </summary>
      <param name="g">Grapthics object.</param>
      <param name="bounds">Rectangle to draw image in.</param>
    </member>
    <member name="M:C1.Win.C1Input.C1DropDownControl.DrawImage(System.Drawing.Graphics,System.IntPtr,System.Drawing.Rectangle)">
      <summary>
            Draws image in the control.
            </summary>
      <param name="g">Grapthics object.</param>
      <param name="dc">Device context.</param>
      <param name="bounds">Rectangle to draw image in.</param>
    </member>
    <member name="P:C1.Win.C1Input.C1DropDownControl.DefaultThemeRootPath">
      <summary>
            Default path 
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.C1FontPicker">
      <summary>
            Represents a Windows font picker control supporting additional visual styles.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1FontPicker.#ctor">
      <summary>
            Initializes a new instance of the C1FontPicker class.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1FontPicker.UsedFonts">
      <summary>
            Gets a collection of fonts installed on system.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1FontPicker.DropDownFormWidth">
      <summary>
            Gets or sets a width of drop down list of fonts.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1FontPicker.DefaultDropDownFormClassName">
      <summary>
            This property is for internal use only.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1FontPicker.TextToValue(C1.Win.C1Input.C1BasePicker.TextToValueArgs@)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.C1FontPicker.ValueToText(C1.Win.C1Input.C1BasePicker.ValueToTextArgs@)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.C1FontPicker.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.C1FontPicker.OnValueChanged(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="P:C1.Win.C1Input.C1FontPicker.DefaultThemeRootPath">
      <summary>
            Default path for the control in xml theme file.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.C1FontPickerDropDownForm">
      <summary>
            Represents drop down font picker form.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1FontPickerDropDownForm.#ctor">
      <summary>
            Initializes a new instance of the C1FontPickerDropDownForm class.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1FontPickerDropDownForm.OnPostChanges(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.C1FontPickerDropDownForm.OnVisibleChanged(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.C1FontPickerDropDownForm.Dispose(System.Boolean)">
      <summary>
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
    </member>
    <member name="T:C1.Win.C1Input.C1Label">
      <summary>
            Represents a Windows read-only data bound control displaying formatted data.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1Label.#ctor">
      <summary>
            Initializes a new instance of the C1Label class.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1Label.Dispose(System.Boolean)">
      <summary>
            Releases the resources used by the C1Label.
            </summary>
      <param name="disposing">
        <b>true</b> to release both managed and unmanaged resources; <b>false</b> to release only unmanaged resources.</param>
    </member>
    <member name="P:C1.Win.C1Input.C1Label.VisualStyle">
      <summary>
            Gets or sets the visual style of the control.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1Label.BorderColor">
      <summary>
            Gets or sets the border color of the control.
            </summary>
      <remarks>
        <para>Use the <b>BorderColor</b> property to specify the border color of the control. 
            This property is set using a <see cref="T:System.Drawing.Color" /> object.</para>
        <para>The <b>BorderColor</b> property has an effect only when the <see cref="P:C1.Win.C1Input.C1TextBox.BorderStyle" /> property is set to <b>FixedSingle</b>. </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1Input.C1Label.UseFieldStyle">
      <summary>
            Indicates whether to honor the ColumnStyle properties defined on the
            C1ViewColumn object that this control is bound to.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1Label.Culture">
      <summary>
            The culture ID.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1Label.CultureName">
      <summary>
            The name selected for the Culture property in the Properties grid.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1Label.UserCultureOverride">
      <summary>
            If True, current user regional settings override the selected culture.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1Label.CultureInfo">
      <summary>
            The current CultureInfo object (available at runtime).
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1Label.FormatInfo">
      <summary>
            Format used to display the value.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1Label.MaskInfo">
      <summary>
            Edit mask settings.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1Label.CaseSensitive">
      <summary>
            True if string comparisons are case-sensitive; otherwise, False.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1Label.FormatType">
      <summary>
            Enumeration value determining the formatting metod, including standard .NET format specifiers, custom and programmatic formatting.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1Label.CustomFormat">
      <summary>
            Custom format specifier used if FormatType = FormatTypeEnum.CustomFormat.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1Label.NullText">
      <summary>
            String representing a DbNull value.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1Label.EmptyAsNull">
      <summary>
            If True, empty strings are interpreted as null values (DbNull).
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1Label.TrimStart">
      <summary>
            If True, leading spaces are removed.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1Label.TrimEnd">
      <summary>
            If True, trailing spaces are removed.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1Label.CurrentTimeZone">
      <summary>
            If True, the control’s stored Value is in current time zone; otherwise, the Value is adjusted to the time zone defined by the GMTOffset property.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1Label.GMTOffset">
      <summary>
            The time zone of the Value property used if CurrentTimeZone = False.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1Label.DaylightTimeAdjustment">
      <summary>
            The value specified in the GMTOffset property can be advanced or set back due to daylight-saving time changes (used only if CurrentTimeZone = False). 
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1Label.Tag">
      <summary>
            Gets or sets the object that contains data about the control.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1Label.ErrorProvider">
      <summary>
            Gets or sets an ErrorProvider object used to indicate error state of the control.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1Label.Text">
      <summary>
            The current text in the control.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1Label.TextDetached">
      <summary>
            Specifies whether the Value and Text properties can be set independently.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1Label.DataSource">
      <summary>
            The data source object to which the control is bound.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1Label.DataField">
      <summary>
            The field of the data source object to which the control is bound.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1Label.DataType">
      <summary>
            Type of the Value property.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1Label.ValueIsDbNull">
      <summary>
            Gets or sets a value indicating whether the Value is DbNull.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1Label.Value">
      <summary>
            Gets or sets the current <see cref="P:C1.Win.C1Input.C1Label.DataType" /> representation of the visual information contained in the control.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1Label.Padding">
      <summary>
            Gets or sets the padding within the control.
            </summary>
    </member>
    <member name="E:C1.Win.C1Input.C1Label.BorderColorChanged">
      <summary>
            Occurs when the BorderColor property has changed.
            </summary>
    </member>
    <member name="E:C1.Win.C1Input.C1Label.VisualStyleChanged">
      <summary>
            Occurs when the VisualStyle property has changed.
            </summary>
    </member>
    <member name="E:C1.Win.C1Input.C1Label.CultureInfoSetup">
      <summary>
            CultureInfo can be set up (on startup) or has been changed.
            </summary>
    </member>
    <member name="E:C1.Win.C1Input.C1Label.FormatError">
      <summary>
            Error occured while formatting the stored value.
            </summary>
    </member>
    <member name="E:C1.Win.C1Input.C1Label.Formatting">
      <summary>
            Formatting the value programmatically.
            </summary>
    </member>
    <member name="E:C1.Win.C1Input.C1Label.Formatted">
      <summary>
            Occurs after the value has been formatted.
            </summary>
    </member>
    <member name="E:C1.Win.C1Input.C1Label.DataTypeChanged">
      <summary>
            Occurs when the DataType property changes.
            </summary>
    </member>
    <member name="E:C1.Win.C1Input.C1Label.ValueChanged">
      <summary>
            Occurs when the Value changes.
            </summary>
    </member>
    <member name="E:C1.Win.C1Input.C1Label.BindingFormatting">
      <summary>
            Occurs when Value is retrieved from the data source.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1Label.OnBorderColorChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:C1.Win.C1Input.C1Label.BorderColorChanged" /> event.
            </summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
      <remarks>
        <para>Raising an event invokes the event handler through a delegate. </para>
        <para>The <b>OnBorderColorChanged</b> method also allows derived classes to handle the event without attaching a delegate. 
            This is the preferred technique for handling the event in a derived class.</para>
        <para>
          <b>Notes to Inheritors.</b> When overriding <b>OnBorderColorChanged</b> in a derived class, 
            be sure to call the base class's <b>OnBorderColorChanged</b> method so that registered delegates receive the event. 
            </para>
      </remarks>
    </member>
    <member name="M:C1.Win.C1Input.C1Label.OnFormatError(C1.Win.C1Input.FormatErrorEventArgs)">
      <summary>
            Invokes the <see cref="E:C1.Win.C1Input.C1Label.FormatError" /> event.
            </summary>
      <param name="e">An <see cref="T:C1.Win.C1Input.FormatErrorEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:C1.Win.C1Input.C1Label.OnVisualStyleChanged(System.EventArgs)">
      <summary>
            Invokes the VisualStyleChanged event.
            </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:C1.Win.C1Input.C1Label.OnCultureInfoSetup(C1.Win.C1Input.CultureInfoSetupEventArgs)">
      <summary>
            Invokes the <see cref="E:C1.Win.C1Input.C1Label.CultureInfoSetup" /> event.
            </summary>
      <param name="e">An <see cref="T:C1.Win.C1Input.CultureInfoSetupEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:C1.Win.C1Input.C1Label.OnFormatting(C1.Win.C1Input.FormatEventArgs)">
      <summary>
            Invokes the <see cref="E:C1.Win.C1Input.C1Label.Formatting" /> event.
            </summary>
      <param name="e">An <see cref="T:C1.Win.C1Input.FormatEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:C1.Win.C1Input.C1Label.OnFormatted(C1.Win.C1Input.FormatEventArgs)">
      <summary>
            Invokes the <see cref="E:C1.Win.C1Input.C1Label.Formatted" /> event.
            </summary>
      <param name="e">An <see cref="T:C1.Win.C1Input.FormatEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:C1.Win.C1Input.C1Label.OnDataTypeChanged(System.EventArgs)">
      <summary>
            Invokes the <see cref="E:C1.Win.C1Input.C1Label.DataTypeChanged" /> event.
            </summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:C1.Win.C1Input.C1Label.OnValueChanged(System.EventArgs)">
      <summary>
            Invokes the <see cref="E:C1.Win.C1Input.C1Label.ValueChanged" /> event.
            </summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:C1.Win.C1Input.C1Label.OnBindingFormatting(System.Windows.Forms.ConvertEventArgs)">
      <summary>
            Invokes the <see cref="E:C1.Win.C1Input.C1Label.BindingFormatting" /> event.
            </summary>
      <param name="e">An <see cref="T:System.Windows.Forms.ConvertEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:C1.Win.C1Input.C1Label.GetPreferredSize(System.Drawing.Size)">
      <summary>
            Retrieves the size of a rectangular area into which a control can be fitted.
            </summary>
      <param name="proposedSize">The custom-sized area for a control.</param>
      <returns>An ordered pair of type <see cref="T:System.Drawing.Size" /> representing the width and height of a rectangle.</returns>
    </member>
    <member name="P:C1.Win.C1Input.C1Label.DefaultThemeRootPath">
      <summary>
            Default path for the control in xml theme file.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.Localization.Strings">
      <summary>
            The <see cref="T:C1.Win.C1Input.Localization.Strings" /> class contains static properties used for localization.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.Localization.Strings.ResourceManager">
      <summary>
            The <see cref="P:C1.Win.C1Input.Localization.Strings.ResourceManager" /> object used for lookup resources.
            </summary>
      <remarks>Set this property to the valid value if 
            you define resources in a Custom Control assembly.</remarks>
    </member>
    <member name="P:C1.Win.C1Input.Localization.Strings.UICulture">
      <summary>
            Returns default <see cref="T:System.Globalization.CultureInfo" /> object used as fallback culture.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.NumericEditCalculator">
      <summary>
            The calculator used as a dropdown in the C1NumericEdit control.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.NumericEditCalculator.#ctor">
      <summary>
            Initializes a new instance of the NumericEditCalculator class.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.NumericEditCalculator.Dispose(System.Boolean)">
      <summary>
            Releases the resources used by the NumericEditCalculator.
            </summary>
      <param name="disposing">
        <b>true</b> to release both managed and unmanaged resources; <b>false</b> to release only unmanaged resources.</param>
    </member>
    <member name="P:C1.Win.C1Input.NumericEditCalculator.Font">
      <summary>
            Gets or sets the font of the text displayed by the control.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.NumericEditCalculator.ShowDecimalSeparator">
      <summary>
            Gets or sets a value indicating whether to display a decimal separator when typing a number if no decimal part of the number is entered.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.NumericEditCalculator.VisualStyle">
      <summary>
            Gets or sets the visual style of the control.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.NumericEditCalculator.ResetVisualStyle">
      <summary>
            Resets <see cref="P:C1.Win.C1Input.NumericEditCalculator.VisualStyle" /> to the default value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.NumericEditCalculator.ShouldSerializeVisualStyle">
      <summary>
            Tests whether <see cref="P:C1.Win.C1Input.NumericEditCalculator.VisualStyle" /> should be serialized.
            </summary>
      <returns>True if <see cref="P:C1.Win.C1Input.NumericEditCalculator.VisualStyle" /> should be serialized, false otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Input.NumericEditCalculator.OnVisualStyleChanged(System.EventArgs)">
      <summary>
            Invokes the VisualStyleChanged event.
            </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="E:C1.Win.C1Input.NumericEditCalculator.VisualStyleChanged">
      <summary>
            Occurs when the VisualStyle property has changed.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.NumericEditCalculator.ButtonFlatStyle">
      <summary>
            Determines the style of the dropdown calculator buttons.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.NumericEditCalculator.DisplayFormat">
      <summary>
            // patch: localization: added after StringTables.cs was created
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.NumericEditCalculator.StoredFormat">
      <summary>
            Custom format specifier used to format the stored value of the dropdown calculator.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.NumericEditCalculator.FormatOnClose">
      <summary>
            Gets or sets whether StoredFormat should be applied to the value entered in the dropdown calculator.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.NumericEditCalculator.RightToLeft">
      <summary>
            This property is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.NumericEditCalculator.UIStrings">
      <summary>
            The collection of user interface strings.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.NumericEditCalculator.ShouldSerializeUIStrings">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.NumericEditCalculator.ResetUIStrings">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.NumericEditCalculator.ContextMenuStrip">
      <summary>
            Gets or sets the shortcut menu associated with the control.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.NumericEditCalculator.UseStaticMemory">
      <summary>
            Gets or sets whether Static Memory context menu should appear for the dropdown calculator.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.NumericEditCalculator.DefaultSize">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.NumericEditCalculator.ShowFocusCues">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.NumericEditCalculator.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.NumericEditCalculator.OnResize(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.NumericEditCalculator.OnForeColorChanged(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.NumericEditCalculator.OnFontChanged(System.EventArgs)">
      <summary>
            Raises the System.Windows.Forms.Control.FontChanged event.
            </summary>
      <param name="e">An System.EventArgs that contains the event data.</param>
    </member>
    <member name="M:C1.Win.C1Input.NumericEditCalculator.ThemeChanged(System.Object,C1.Win.C1Input.VisualStyle)">
      <summary>
            This method called when theme is changed.
            </summary>
      <param name="theme">New theme.</param>
      <param name="visualStyle">Base visual style.</param>
    </member>
    <member name="T:C1.Win.C1Input.C1DateEdit">
      <summary>
            This is a legacy control; use C1.Win.Calendar.C1DateEdit instead.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1DateEdit.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Input.C1DateEdit" /> class.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1DateEdit.Dispose(System.Boolean)">
      <summary>
            Releases the resources used by the <see cref="T:C1.Win.C1Input.C1DateEdit" />.
            </summary>
      <param name="disposing">
        <b>true</b> to release both managed and unmanaged resources; <b>false</b> to release only unmanaged resources.</param>
    </member>
    <member name="P:C1.Win.C1Input.C1DateEdit.InitialField">
      <summary>
            Determines the date-time field position when a control receives input focus. Default: <see cref="F:C1.Win.C1Input.DateTimeField.Manual" />.
            </summary>
      <remarks>
            If this property is set to <see cref="F:C1.Win.C1Input.DateTimeField.Manual" />, control used InitialSelection algorithm defined in the <see cref="P:C1.Win.C1Input.C1TextBox.InitialSelection" /> property.
            </remarks>
    </member>
    <member name="P:C1.Win.C1Input.C1DateEdit.AllowSpinLoop">
      <summary>
            Determines whether the spinner moves to the <see cref="P:C1.Win.C1Input.DateEditMonthCalendar.MinDate" /> when it reaches the <see cref="P:C1.Win.C1Input.DateEditMonthCalendar.MaxDate" />, or to the <see cref="P:C1.Win.C1Input.DateEditMonthCalendar.MaxDate" /> when it reaches the <see cref="P:C1.Win.C1Input.DateEditMonthCalendar.MinDate" />.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DateEdit.RetainTimeOnDateChange">
      <summary>
            Gets or sets a value indicating whether to retain the current time value when the date is changed via the drop down calendar.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DateEdit.DefaultDropDownFormClassName">
      <summary>
            This property is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DateEdit.TypeRestriction">
      <summary>
            This property is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DateEdit.Calendar">
      <summary>
            The dropdown calendar object.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1DateEdit.ShouldSerializeCalendar">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:C1.Win.C1Input.C1DateEdit.FormatType">
      <summary>
            Enumeration value determining the formatting metod, including standard .NET format specifiers, custom and programmatic formatting.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DateEdit.Text">
      <summary>
            This property is for internal use only.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1DateEdit.OnUpDownButtonClick(C1.Win.C1Input.UpDownButtonClickEventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.C1DateEdit.UpdateDataType(System.Type)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="propertyType">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.C1DateEdit.SpinUp">
      <summary>
              Performs spin up.
            </summary>
      <remarks>
              This method has the same behavior with the Up key pressed when day field selected and increments value by one day.
            </remarks>
      <seealso cref="M:C1.Win.C1Input.C1DateEdit.SpinDown" />
    </member>
    <member name="M:C1.Win.C1Input.C1DateEdit.SpinUp(System.TimeSpan)">
      <summary>
              Performs spin up.
            </summary>
      <param name="increment">
              The <see cref="T:System.TimeSpan" /> value that indicates the increment when spin up.
            </param>
      <remarks>
              This method has the same behavior with the Up key pressed.
            </remarks>
      <seealso cref="M:C1.Win.C1Input.C1DateEdit.SpinDown(System.TimeSpan)" />
    </member>
    <member name="M:C1.Win.C1Input.C1DateEdit.SpinDown">
      <summary>
              Performs spin down.
            </summary>
      <remarks>
              This method has the same behavior with the Down key pressed when day field selected and decrements value by one day.
            </remarks>
      <seealso cref="M:C1.Win.C1Input.C1DateEdit.SpinUp" />
    </member>
    <member name="M:C1.Win.C1Input.C1DateEdit.SpinDown(System.TimeSpan)">
      <summary>
              Performs spin down.
            </summary>
      <param name="decrement">
              The <see cref="T:System.TimeSpan" /> value that indicates the decrement when spin down.
            </param>
      <remarks>
              This method has the same behavior with the Down key pressed.
            </remarks>
      <seealso cref="M:C1.Win.C1Input.C1DateEdit.SpinUp(System.TimeSpan)" />
    </member>
    <member name="M:C1.Win.C1Input.C1DateEdit.UpdateSelection">
      <summary>
            Updates selection of the text according to the <see cref="P:C1.Win.C1Input.C1TextBox.InitialSelection" /> property.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.C1DbNavigator">
      <summary>
            Represents a data bound control supporting convenient navigation over data source rows and common data actions such as updating the data source and refreshing data.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1DbNavigator.#ctor">
      <summary>
            Initializes a new instance of the C1DbNavigator class.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1DbNavigator.Dispose(System.Boolean)">
      <summary>
            Releases the resources used by the C1DbNavigator.
            </summary>
      <param name="disposing">
        <b>true</b> to release both managed and unmanaged resources; <b>false</b> to release only unmanaged resources.</param>
    </member>
    <member name="M:C1.Win.C1Input.C1DbNavigator.BeginInit">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1DbNavigator.EndInit">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DbNavigator.Text">
      <summary>
            Gets or sets value of the Position textbox.
            </summary>
      <remarks>
        <para>If the Position textbox is not visible, it returns empty string.</para>
        <para>If you set the Text property when the Position textbox is not visible, 
            the action has no effect.</para>
        <para>Changing the Text property causes the data source position change.</para>
      </remarks>
    </member>
    <member name="E:C1.Win.C1Input.C1DbNavigator.TextChanged">
      <summary>
            Occurs when the <see cref="P:C1.Win.C1Input.C1DbNavigator.Text">Text</see> property value changes.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1DbNavigator.OnTextChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:C1.Win.C1Input.C1DbNavigator.TextChanged">TextChanged</see> event. 
            </summary>
      <param name="e">An EventArgs that contains event data.</param>
    </member>
    <member name="P:C1.Win.C1Input.C1DbNavigator.VisualStyle">
      <summary>
            Gets or sets the visual style of the control.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1DbNavigator.ResetVisualStyle">
      <summary>
            Resets <see cref="P:C1.Win.C1Input.C1DbNavigator.VisualStyle" /> to the default value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1DbNavigator.ShouldSerializeVisualStyle">
      <summary>
            Tests whether <see cref="P:C1.Win.C1Input.C1DbNavigator.VisualStyle" /> should be serialized.
            </summary>
      <returns>True if <see cref="P:C1.Win.C1Input.C1DbNavigator.VisualStyle" /> should be serialized, false otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Input.C1DbNavigator.ResetVisualStyleBaseStyle">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1DbNavigator.ShouldSerializeVisualStyleBaseStyle">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>True if VisualStyleBaseStyle should be serialized, false otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Input.C1DbNavigator.OnBackColorChanged(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.C1DbNavigator.OnForeColorChanged(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="P:C1.Win.C1Input.C1DbNavigator.AutoSize">
      <summary>
            Specifies if navigator buttons have color bitmaps.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DbNavigator.ColorButtons">
      <summary>
            Specifies if navigator buttons have color bitmaps.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DbNavigator.ColorWhenHover">
      <summary>
            If True, navigator buttons show color bitmaps when the mouse hovers over them.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DbNavigator.BorderStyle">
      <summary>
            Navigator border style.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DbNavigator.ButtonStyle">
      <summary>
            Navigator button style.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DbNavigator.VerticalAlign">
      <summary>
            Vertical alignment of navigator buttons.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DbNavigator.VerticalIndent">
      <summary>
            Vertical margin between the border and the buttons.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DbNavigator.HorizontalIndent">
      <summary>
            Horizontal margin between the border and the buttons.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DbNavigator.ImageList">
      <summary>
            Gets or sets the ImageList to use when displaying button images without highlighting.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DbNavigator.ImageListHighlight">
      <summary>
            Gets or sets the ImageList to use when displaying button images in highlighted state.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DbNavigator.ShowToolTips">
      <summary>
            Indicates whether tooltips are shown for the buttons.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DbNavigator.ForeColor">
      <summary>
            This member overrides Control.ForeColor.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DbNavigator.BackColor">
      <summary>
            This member overrides Control.BackColor.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DbNavigator.MoveDelayFirst">
      <summary>
            Time delay in milliseconds after pressing Next/Previous button before automatic scrolling begins.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DbNavigator.MoveDelayNext">
      <summary>
            Time delay in milliseconds between row moves in automatic scrolling.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DbNavigator.PageSize">
      <summary>
            Number of rows to skip when the user presses PageUp/Down.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DbNavigator.PositionVisible">
      <summary>
            Specifies whether the editable row position field and row captions are visible in the navigator.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DbNavigator.TabStop">
      <summary>
            This member overrides Control.TabStop.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DbNavigator.VisibleButtons">
      <summary>
            Flags enumeration specifying which buttons are visible.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DbNavigator.EnabledButtons">
      <summary>
            Flags enumeration specifying which buttons are enabled.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DbNavigator.ConfirmDelete">
      <summary>
            Whether a confirmation dialog is shown before deleting a record.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DbNavigator.CausesFormValidation">
      <summary>
            Whether the control in focus should be validated before a button click is handled by the navigator.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DbNavigator.DataSource">
      <summary>
            The data source object to which the control is bound.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DbNavigator.DataMember">
      <summary>
            "For multi-table data sources, specifies a specific table to which the control is bound.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DbNavigator.RowCount">
      <summary>
            Returns the number of rows in the table.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DbNavigator.Position">
      <summary>
            Gets or sets the current row position in the table (from 0 to RowCount - 1).
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DbNavigator.CurrencyManager">
      <summary>
            Gets or sets the CurrencyManager object navigated by the control.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DbNavigator.ButtonSize">
      <summary>
            The size of navigator buttons.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1DbNavigator.ShouldSerializeButtonSize">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.C1DbNavigator.ResetButtonSize">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DbNavigator.ButtonTextAlign">
      <summary>
            Controls how the text is positioned relative to the image in navigator buttons.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DbNavigator.ButtonTexts">
      <summary>
            Gets or sets the texts displayed on the buttons.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1DbNavigator.ShouldSerializeButtonTexts">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.C1DbNavigator.ResetButtonTexts">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DbNavigator.ButtonToolTips">
      <summary>
            The string collection defining navigator button tooltips.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1DbNavigator.ShouldSerializeButtonToolTips">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.C1DbNavigator.ResetButtonToolTips">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DbNavigator.UIStrings">
      <summary>
            Gets the collection of user interface strings.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1DbNavigator.ShouldSerializeUIStrings">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.C1DbNavigator.ResetUIStrings">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DbNavigator.ErrorProvider">
      <summary>
            Gets or sets an ErrorProvider object used to indicate error state of the current data row.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1DbNavigator.ButtonCursor">
      <summary>
            The cursor that is displayed when the mouse is over the navigator buttons.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1DbNavigator.ShouldSerializeButtonCursor">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.C1DbNavigator.ResetButtonCursor">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1DbNavigator.OnRightToLeftChanged(System.EventArgs)">
      <summary>
            Raises <see cref="E:C1.Win.C1Input.C1DbNavigator.RightToLeftChanged" /> event.
            </summary>
      <param name="e">The event data object.</param>
    </member>
    <member name="M:C1.Win.C1Input.C1DbNavigator.ClickButton(C1.Win.C1Input.NavigatorButtonEnum)">
      <summary>
            Performs the action associated with a navigator button.
            </summary>
      <param name="button">The button whose action is performed.</param>
    </member>
    <member name="M:C1.Win.C1Input.C1DbNavigator.SetDataBinding(System.Object,System.String)">
      <summary>
            Sets the DataSource and DataMember properties at run time.
            </summary>
      <param name="dataSource">The data source object to which the control is bound.</param>
      <param name="dataMember">For multi-table data sources, specifies a specific table to which the control is bound.</param>
    </member>
    <member name="M:C1.Win.C1Input.C1DbNavigator.WndProc(System.Windows.Forms.Message@)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="m">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.C1DbNavigator.OnVisualStyleChanged(System.EventArgs)">
      <summary>
            Invokes the VisualStyleChanged event.
            </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:C1.Win.C1Input.C1DbNavigator.GetPreferredSize(System.Drawing.Size)">
      <summary>
            Retrieves the size of a rectangular area into which a control can be fitted.
            </summary>
      <param name="proposedSize">The custom-sized area for a control.</param>
      <returns>An ordered pair of type <see cref="T:System.Drawing.Size" /> representing the width and height of a rectangle.</returns>
    </member>
    <member name="E:C1.Win.C1Input.C1DbNavigator.VisualStyleChanged">
      <summary>
            Occurs when the VisualStyle property has changed.
            </summary>
    </member>
    <member name="E:C1.Win.C1Input.C1DbNavigator.PositionChanged">
      <summary>
            Occurs when the Position has changed.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1DbNavigator.OnPositionChanged(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="E:C1.Win.C1Input.C1DbNavigator.ItemChanged">
      <summary>
            Occurs when the current row has been modified, some of its fields changed.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1DbNavigator.OnItemChanged(System.Windows.Forms.ItemChangedEventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="E:C1.Win.C1Input.C1DbNavigator.BeforeAction">
      <summary>
            Occurs when a button is clicked, before the action is executed.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1DbNavigator.OnBeforeAction(C1.Win.C1Input.NavigatorBeforeActionEventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="E:C1.Win.C1Input.C1DbNavigator.Adding">
      <summary>
            Occurs when Add button is pressed.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1DbNavigator.OnAdding(C1.Win.C1Input.NavigatorAddingEventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="E:C1.Win.C1Input.C1DbNavigator.Deleting">
      <summary>
            Occurs when Delete button is pressed.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1DbNavigator.OnDeleting(C1.Win.C1Input.NavigatorDeletingEventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="E:C1.Win.C1Input.C1DbNavigator.Editing">
      <summary>
            Occurs when Edit button is pressed.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1DbNavigator.OnEditing(C1.Win.C1Input.NavigatorEditingEventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="E:C1.Win.C1Input.C1DbNavigator.UpdateData">
      <summary>
            Occurs when Update button is pressed.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1DbNavigator.OnUpdateData(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="E:C1.Win.C1Input.C1DbNavigator.RefreshData">
      <summary>
            Occurs when Refresh button is pressed.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1DbNavigator.OnRefreshData(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="E:C1.Win.C1Input.C1DbNavigator.ButtonClick">
      <summary>
            Occurs when a navigator button has been pressed, after the button action is performed.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1DbNavigator.OnButtonClick(C1.Win.C1Input.NavigatorButtonClickEventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="E:C1.Win.C1Input.C1DbNavigator.Error">
      <summary>
            Occurs when an exceptions is thrown performing an action on button click.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1DbNavigator.OnError(C1.Win.C1Input.NavigatorErrorEventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="E:C1.Win.C1Input.C1DbNavigator.ButtonCursorChanged">
      <summary>
            Event fired when the value of ButtonCursor property is changed.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1DbNavigator.OnButtonCursorChanged(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.C1DbNavigator.OnEnabledChanged(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="T:C1.Win.C1Input.NavigatorButtonEnum">
      <summary>
            A list of all available navigator buttons
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NavigatorButtonEnum.First">
      <summary>
            First button.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NavigatorButtonEnum.Previous">
      <summary>
            Previous button.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NavigatorButtonEnum.Next">
      <summary>
            Next button.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NavigatorButtonEnum.Last">
      <summary>
            Last button.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NavigatorButtonEnum.Add">
      <summary>
            Add button.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NavigatorButtonEnum.Delete">
      <summary>
            Delete button.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NavigatorButtonEnum.Edit">
      <summary>
            Edit button.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NavigatorButtonEnum.Apply">
      <summary>
            Apply button.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NavigatorButtonEnum.Cancel">
      <summary>
            Cancel button.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NavigatorButtonEnum.Update">
      <summary>
            Update button.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NavigatorButtonEnum.Refresh">
      <summary>
            Refresh button.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NavigatorButtonEnum.Position">
      <summary>
            Position text box
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.NavigatorBeforeActionEventHandler">
      <summary>
            Represents the method that handles a BeforeAction event.
            </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A NavigatorBeforeActionEventArgs object that contains the event data.</param>
    </member>
    <member name="T:C1.Win.C1Input.NavigatorBeforeActionEventArgs">
      <summary>
            Provides data for a BeforeAction event.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.NavigatorBeforeActionEventArgs.Button">
      <summary>
            The clicked button.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.NavigatorBeforeActionEventArgs.Index">
      <summary>
            Current row index in the data source (only for Delete and Edit buttons).
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.NavigatorBeforeActionEventArgs.Cancel">
      <summary>
            This argument is False by default. If you set it to True in your event code, the navigator control will skip the standard action associated with the button. 
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.NavigatorAddingEventHandler">
      <summary>
            Represents the method that handles an Adding event.
            </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A NavigatorAddingEventArgs object that contains the event data.</param>
    </member>
    <member name="T:C1.Win.C1Input.NavigatorAddingEventArgs">
      <summary>
            Provides data for a Adding event.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.NavigatorAddingEventArgs.Cancel">
      <summary>
            This argument is False by default. If you set it to True in your event code, the navigator control will abort adding a new row. 
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.NavigatorDeletingEventHandler">
      <summary>
            Represents the method that handles a Deleting event.
            </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A NavigatorDeletingEventArgs object that contains the event data.</param>
    </member>
    <member name="T:C1.Win.C1Input.NavigatorDeletingEventArgs">
      <summary>
            Provides data for a Deleting event.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.NavigatorDeletingEventArgs.Index">
      <summary>
            The index of the row being deleted.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.NavigatorDeletingEventArgs.Cancel">
      <summary>
            This argument is False by default. If you set it to True in your event code, the navigator control will abort deleting. 
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.NavigatorEditingEventHandler">
      <summary>
            Represents the method that handles a Editing event.
            </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A NavigatorEditingEventArgs object that contains the event data.</param>
    </member>
    <member name="T:C1.Win.C1Input.NavigatorEditingEventArgs">
      <summary>
            Provides data for a Editing event.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.NavigatorEditingEventArgs.Index">
      <summary>
            The index of the row being edited.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.NavigatorButtonClickEventHandler">
      <summary>
            Represents the method that handles a ButtonClick event.
            </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A NavigatorButtonClickEventArgs object that contains the event data.</param>
    </member>
    <member name="T:C1.Win.C1Input.NavigatorButtonClickEventArgs">
      <summary>
            Provides data for a ButtonClick event.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.NavigatorButtonClickEventArgs.Button">
      <summary>
            The clicked button.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.NavigatorErrorEventHandler">
      <summary>
            Represents the method that handles an Error event.
            </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A NavigatorErrorEventArgs object that contains the event data.</param>
    </member>
    <member name="T:C1.Win.C1Input.NavigatorErrorEventArgs">
      <summary>
            Provides data for an Error event.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.NavigatorErrorEventArgs.Button">
      <summary>
            The clicked C1DbNavigator button.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.NavigatorErrorEventArgs.Exception">
      <summary>
            Exception that occurred while performing the button action.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.NavigatorErrorEventArgs.ShowErrorMessage">
      <summary>
            This argument is set to true by default. If it is set to False by event code, the standard message box is not shown.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.NavigatorErrorEventArgs.ErrorMessage">
      <summary>
            Error message shown in the standard message box.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.NavigatorErrorEventArgs.ErrorMessageCaption">
      <summary>
            The caption of the standard message box.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.NavigatorButtonStyleEnum">
      <summary>
            Used by C1DbNavigator.ButtonStyle property.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NavigatorButtonStyleEnum.Flat">
      <summary>
            Flat buttons showing "mouse hover".
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NavigatorButtonStyleEnum.Standard">
      <summary>
            Standard 3D-buttons.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.NavigatorVerticalAlignEnum">
      <summary>
            Used by C1DbNavigator.VerticalAlign property.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NavigatorVerticalAlignEnum.Top">
      <summary>
            Buttons are aligned with the top of the control.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NavigatorVerticalAlignEnum.Middle">
      <summary>
            Buttons are aligned with the center of the control.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NavigatorVerticalAlignEnum.Bottom">
      <summary>
            Buttons are aligned with the bottom of the control.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.NavigatorButtonTextAlignEnum">
      <summary>
            Used by C1DbNavigator.ButtonTextAlign property.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NavigatorButtonTextAlignEnum.Right">
      <summary>
            Text appears to the right of the image.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NavigatorButtonTextAlignEnum.Underneath">
      <summary>
            Text appears underneath the image.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.NavigatorButtonFlags">
      <summary>
            Used by C1DbNavigator.VisibleButtons property.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NavigatorButtonFlags.None">
      <summary>
            No buttons.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NavigatorButtonFlags.First">
      <summary>
            Moves to the first row.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NavigatorButtonFlags.Previous">
      <summary>
            Moves to the previous row.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NavigatorButtonFlags.Next">
      <summary>
            Moves to the next row.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NavigatorButtonFlags.Last">
      <summary>
            Moves to the last row.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NavigatorButtonFlags.Add">
      <summary>
            Adds a new row to the table.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NavigatorButtonFlags.Delete">
      <summary>
            Deletes the current row.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NavigatorButtonFlags.Edit">
      <summary>
            Fires the Editing event.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NavigatorButtonFlags.Apply">
      <summary>
            Ends edit mode for the current row. 
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NavigatorButtonFlags.Cancel">
      <summary>
            Cancels (reverts) modifications in the current row.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NavigatorButtonFlags.Update">
      <summary>
            Fires the UpdateData event.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NavigatorButtonFlags.Refresh">
      <summary>
            Fires the RefreshData event. 
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NavigatorButtonFlags.Navigation">
      <summary>
            First + Previous + Next + Last buttons
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NavigatorButtonFlags.All">
      <summary>
            All buttons.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.DateEditMonthCalendar">
      <summary>
            Represents drop down calendar.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.#ctor">
      <summary>
            Creates the instance of the <see cref="T:C1.Win.C1Input.DateEditMonthCalendar" /> class.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
    </member>
    <member name="P:C1.Win.C1Input.DateEditMonthCalendar.CurrentMonthDisplayOffset">
      <summary>
            Gets or sets the current month display offset.
            </summary>
      <example>
            This example shows current month at the center of the multi-dimensional 
            drop down calendar.
            <code>
              c1DateEdit1.Calendar.CalendarDimensions = new Size(3, 1);
              // Display current month at the center of the calendar.
              // Other possible values:
              // 0 - (Default) - at the Right
              // 1 - Center
              // 2 - Left
              c1DateEdit1.Calendar.CurrentMonthDisplayOffset = 1;
            </code></example>
    </member>
    <member name="P:C1.Win.C1Input.DateEditMonthCalendar.VisualStyle">
      <summary>
            Gets or sets VisualStyle.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.ResetVisualStyle">
      <summary>
            Resets <see cref="P:C1.Win.C1Input.DateEditMonthCalendar.VisualStyle" /> to the default value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.ShouldSerializeVisualStyle">
      <summary>
            Tests whether <see cref="P:C1.Win.C1Input.DateEditMonthCalendar.VisualStyle" /> should be serialized.
            </summary>
      <returns>True if <see cref="P:C1.Win.C1Input.DateEditMonthCalendar.VisualStyle" /> should be serialized, false otherwise.</returns>
    </member>
    <member name="P:C1.Win.C1Input.DateEditMonthCalendar.TodayDate">
      <summary>
            Gets or sets the value that is used by DateEditMonthCalendar as today's date.
            The default value is the current system date.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.ShouldSerializeTodayDate">
      <summary>
            Indicates whether the <see cref="P:C1.Win.C1Input.DateEditMonthCalendar.TodayDate" /> property should be persisted.
            </summary>
      <returns>
        <see langword="true" /> if the <see cref="P:C1.Win.C1Input.DateEditMonthCalendar.TodayDate" /> property value has been changed from its default; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.ResetTodayDate">
      <summary>
            Sets the <see cref="P:C1.Win.C1Input.DateEditMonthCalendar.TodayDate" /> property to its default value.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DateEditMonthCalendar.MinDate">
      <summary>
            Gets or sets the minimum allowable date. The default value is DateTime.MinValue (01/01/0001).
            </summary>
      <exception cref="T:System.ArgumentException">
            The value is greater than the <see cref="P:C1.Win.C1Input.DateEditMonthCalendar.MaxDate" />.
            </exception>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.ShouldSerializeMinDate">
      <summary>
            Indicates whether the <see cref="P:C1.Win.C1Input.DateEditMonthCalendar.MinDate" /> property should be persisted.
            </summary>
      <returns>
        <see langword="true" /> if the <see cref="P:C1.Win.C1Input.DateEditMonthCalendar.MinDate" /> property value has been changed from its default; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.ResetMinDate">
      <summary>
            Sets the <see cref="P:C1.Win.C1Input.DateEditMonthCalendar.MinDate" /> property to its default value.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DateEditMonthCalendar.MaxDate">
      <summary>
            Gets or sets the maximum allowable date.
            </summary>
      <exception cref="T:System.ArgumentException">
            The value is less than the <see cref="P:C1.Win.C1Input.DateEditMonthCalendar.MinDate" />.
            </exception>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.ShouldSerializeMaxDate">
      <summary>
            Indicates whether the <see cref="P:C1.Win.C1Input.DateEditMonthCalendar.MaxDate" /> property should be persisted.
            </summary>
      <returns>
        <see langword="true" /> if the <see cref="P:C1.Win.C1Input.DateEditMonthCalendar.MaxDate" /> property value has been changed from its default; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.ResetMaxDate">
      <summary>
            Sets the <see cref="P:C1.Win.C1Input.DateEditMonthCalendar.MaxDate" /> property to its default value.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DateEditMonthCalendar.DateIsNull">
      <summary>
            Gets or sets the value indicating that no date is currently selected in the calendar.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DateEditMonthCalendar.BackColor">
      <summary>
            Gets or sets the background color of the control.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.ShouldSerializeBackColor">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.ResetBackColor">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DateEditMonthCalendar.ForeColor">
      <summary>
            Gets or sets the foreground color of the control.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.ShouldSerializeForeColor">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.ResetForeColor">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DateEditMonthCalendar.SelectionForeColor">
      <summary>
            Gets or sets the selection foreground color.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.ShouldSerializeSelectionForeColor">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.ResetSelectionForeColor">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DateEditMonthCalendar.SelectionBackColor">
      <summary>
            Gets or sets the selection background color.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.ShouldSerializeSelectionBackColor">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.ResetSelectionBackColor">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DateEditMonthCalendar.LineColor">
      <summary>
            Gets or sets the line color.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.ShouldSerializeLineColor">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.ResetLineColor">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DateEditMonthCalendar.ArrowColor">
      <summary>
            Gets or sets the color of the arrows.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.ShouldSerializeArrowColor">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.ResetArrowColor">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DateEditMonthCalendar.TodayBorderColor">
      <summary>
            Gets or sets the color of the border around the current date.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.ShouldSerializeTodayBorderColor">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.ResetTodayBorderColor">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DateEditMonthCalendar.TrailingForeColor">
      <summary>
             Gets or sets a value indicating the color of days in months that are not
                fully displayed in the control.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.ShouldSerializeTrailingForeColor">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.ResetTrailingForeColor">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DateEditMonthCalendar.DayNamesColor">
      <summary>
            Gets or sets the day names' text color.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.ShouldSerializeDayNamesColor">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.ResetDayNamesColor">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DateEditMonthCalendar.TitleBackColor">
      <summary>
            Gets or sets a value indicating the background color of the title area of the calendar.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.ShouldSerializeTitleBackColor">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.ResetTitleBackColor">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DateEditMonthCalendar.TitleForeColor">
      <summary>
            Gets or sets a value indicating the foreground color of the title area of the calendar.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.ShouldSerializeTitleForeColor">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.ResetTitleForeColor">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DateEditMonthCalendar.FirstMonth">
      <summary>
            Gets the first day of the first fully shown month.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DateEditMonthCalendar.LastMonth">
      <summary>
            Gets the last day of the last fully shown month.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DateEditMonthCalendar.SelectedDate">
      <summary>
            Gets or sets the selected date.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.ShouldSerializeSelectedDate">
      <summary>
            Indicates whether the <see cref="P:C1.Win.C1Input.DateEditMonthCalendar.SelectedDate" /> property should be persisted.
            </summary>
      <returns>
        <see langword="true" /> if the <see cref="P:C1.Win.C1Input.DateEditMonthCalendar.SelectedDate" /> property value has been changed from its default; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.ResetSelectedDate">
      <summary>
            Sets the <see cref="P:C1.Win.C1Input.DateEditMonthCalendar.SelectedDate" /> property to its default value.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DateEditMonthCalendar.CalendarDimensions">
      <summary>
            Gets or sets the number of columns and rows of months displayed.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.ShouldSerializeCalendarDimensions">
      <summary>
            Indicates whether the <see cref="P:C1.Win.C1Input.DateEditMonthCalendar.CalendarDimensions" /> property should be persisted.
            </summary>
      <returns>
        <see langword="true" /> if the <see cref="P:C1.Win.C1Input.DateEditMonthCalendar.CalendarDimensions" /> property value has been changed from its default; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.ResetCalendarDimensions">
      <summary>
            Sets the <see cref="P:C1.Win.C1Input.DateEditMonthCalendar.CalendarDimensions" /> property to its default value.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DateEditMonthCalendar.FirstDayOfWeek">
      <summary>
            Gets or sets the first day of the week as displayed in the month calendar.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DateEditMonthCalendar.CaptionFormat">
      <summary>
            Gets or sets the format to use for the calendar caption.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DateEditMonthCalendar.DayNameLength">
      <summary>
            Gets or sets the maximum length of day names.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.ShouldSerializeDayNameLength">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.ResetDayNameLength">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DateEditMonthCalendar.TitleHeight">
      <summary>
            Gets or sets the title height.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.ShouldSerializeTitleHeight">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.ResetTitleHeight">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DateEditMonthCalendar.TitleFont">
      <summary>
            Gets or sets the title font.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.ShouldSerializeTitleFont">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.ResetTitleFont">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DateEditMonthCalendar.DayNamesFont">
      <summary>
            Gets or sets the day names font.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.ShouldSerializeDayNamesFont">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.ResetDayNamesFont">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DateEditMonthCalendar.BoldedDates">
      <summary>
            Gets or sets the array of System.DateTime objects that determines which nonrecurring dates are displayed in bold.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.ShouldSerializeBoldedDates">
      <summary>
            Indicates whether the <see cref="P:C1.Win.C1Input.DateEditMonthCalendar.BoldedDates" /> property should be persisted.
            </summary>
      <returns>
        <see langword="true" /> if the <see cref="P:C1.Win.C1Input.DateEditMonthCalendar.BoldedDates" /> property value has been changed from its default; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.ResetBoldedDates">
      <summary>
            Clears <see cref="P:C1.Win.C1Input.DateEditMonthCalendar.BoldedDates" />.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DateEditMonthCalendar.AnnuallyBoldedDates">
      <summary>
            Gets or sets the array of System.DateTime objects that determines which annual days are displayed in bold.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.ShouldSerializeAnnuallyBoldedDates">
      <summary>
            Indicates whether the <see cref="P:C1.Win.C1Input.DateEditMonthCalendar.AnnuallyBoldedDates" /> property should be persisted.
            </summary>
      <returns>
        <see langword="true" /> if the <see cref="P:C1.Win.C1Input.DateEditMonthCalendar.AnnuallyBoldedDates" /> property value has been changed from its default; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.ResetAnnuallyBoldedDates">
      <summary>
            Clears <see cref="P:C1.Win.C1Input.DateEditMonthCalendar.AnnuallyBoldedDates" />.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DateEditMonthCalendar.MonthlyBoldedDates">
      <summary>
            Gets or sets the array of System.DateTime objects that determine which monthly days to bold.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.ShouldSerializeMonthlyBoldedDates">
      <summary>
            Indicates whether the <see cref="P:C1.Win.C1Input.DateEditMonthCalendar.MonthlyBoldedDates" /> property should be persisted.
            </summary>
      <returns>
        <see langword="true" /> if the <see cref="P:C1.Win.C1Input.DateEditMonthCalendar.MonthlyBoldedDates" /> property value has been changed from its default; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.ResetMonthlyBoldedDates">
      <summary>
            Clears <see cref="P:C1.Win.C1Input.DateEditMonthCalendar.MonthlyBoldedDates" />.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DateEditMonthCalendar.DisabledDates">
      <summary>
            Gets or sets the array of System.DateTime objects that determines which dates are disabled.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.ShouldSerializeDisabledDates">
      <summary>
            Indicates whether the <see cref="P:C1.Win.C1Input.DateEditMonthCalendar.DisabledDates" /> property should be persisted.
            </summary>
      <returns>
        <see langword="true" /> if the <see cref="P:C1.Win.C1Input.DateEditMonthCalendar.DisabledDates" /> property value has been changed from its default; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.ResetDisabledDates">
      <summary>
            Clears <see cref="M:C1.Win.C1Input.DateEditMonthCalendar.ResetDisabledDates" />.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DateEditMonthCalendar.ShowToday">
      <summary>
            Gets or sets a value indicating whether the date represented by the TodayDate property is displayed at the bottom of the control. 
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DateEditMonthCalendar.ShowTodayCircle">
      <summary>
            Gets or sets a value indicating whether today's date is circled.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DateEditMonthCalendar.ShowTodayButton">
      <summary>
            Determines if the Today button of the dropdown calendar is visible.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DateEditMonthCalendar.ShowClearButton">
      <summary>
            Determines if the Clear button of the dropdown calendar is visible.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DateEditMonthCalendar.TodayText">
      <summary>
            Gets or sets the text of the "Today" button.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DateEditMonthCalendar.ClearText">
      <summary>
            Gets or sets the text of the "Clear" button.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DateEditMonthCalendar.CalendarWeekRule">
      <summary>
            Gets or sets a value that specifies which rule is used to determine the first calendar week of the year.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DateEditMonthCalendar.ShowWeekNumbers">
      <summary>
            Gets or sets a value indicating whether the month calendar control displays
               week numbers (1-52) to the left of each row of days.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DateEditMonthCalendar.RightToLeft">
      <summary>
            Gets or sets a value indicating whether control's elements are aligned to support locales using right-to-left fonts.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DateEditMonthCalendar.RightToLeftLayout">
      <summary>
            Gets or sets a value indicating whether the control is laid out from right to left.
            </summary>
    </member>
    <member name="E:C1.Win.C1Input.DateEditMonthCalendar.VisualStyleChanged">
      <summary>
            Occurs when the VisualStyle property has changed.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.OnVisualStyleChanged(System.EventArgs)">
      <summary>
            Invokes the VisualStyleChanged event.
            </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="E:C1.Win.C1Input.DateEditMonthCalendar.TodayButtonClick">
      <summary>
            Occurs when Today button is clicked.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.OnTodayButtonClick(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="E:C1.Win.C1Input.DateEditMonthCalendar.ClearButtonClick">
      <summary>
            Occurs when Clear button is clicked.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.OnClearButtonClick(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="E:C1.Win.C1Input.DateEditMonthCalendar.TodayButtonVisibilityChanged">
      <summary>
            Occurs when Today button visibility is changed.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.OnTodayButtonVisibilityChanged(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="E:C1.Win.C1Input.DateEditMonthCalendar.ClearButtonVisibilityChanged">
      <summary>
            Occurs when Clear button visibility is changed.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.OnClearButtonVisibilityChanged(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="E:C1.Win.C1Input.DateEditMonthCalendar.DateValueChanged">
      <summary>
            Occurs when the value of the Date property is changed.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.OnDateValueChanged(C1.Win.C1Input.NullableDateTimeEventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="E:C1.Win.C1Input.DateEditMonthCalendar.DateValueSelected">
      <summary>
            Occurs when the user selects a value for the Date property.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.OnDateValueSelected(C1.Win.C1Input.NullableDateTimeEventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="E:C1.Win.C1Input.DateEditMonthCalendar.RightToLeftLayoutChanged">
      <summary>
            Occurs when the value of the RightToLeftLayout property changes.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.OnRightToLeftLayoutChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:C1.Win.C1Input.DateEditMonthCalendar.RightToLeftLayoutChanged" /> event.
            </summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="E:C1.Win.C1Input.DateEditMonthCalendar.MonthChanged">
      <summary>
            Handles the month change in the Dropdown calendar in C1DateEdit. 
            Occurs when the value of the <see cref="P:C1.Win.C1Input.DateEditMonthCalendar.FirstMonth" /> or <see cref="P:C1.Win.C1Input.DateEditMonthCalendar.LastMonth" /> property changes.
            </summary>
      <remarks>
            Can be used to set some dates in the month to bold as user scrolls through the months.
            </remarks>
      <example>
            This example sets a new bolded date in the selected month.
            <code>
            private void c1DateEdit1_Calendar_MonthChanged(object sender, EventArgs e)
            {
               DateTime dt = c1DateEdit1.Calendar.FirstMonth;
               c1DateEdit1.Calendar.AddBoldedDate(new DateTime(dt.Year, dt.Month, dt.Month));
            }
            </code></example>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.OnMonthChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:C1.Win.C1Input.DateEditMonthCalendar.MonthChanged" /> event.
            </summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.ContainsDate(System.DateTime)">
      <summary>
      </summary>
      <param name="date">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.SuspendAllLayout">
      <summary>
            Calls SuspendLayout on all DateEditMonthCalendar's child controls.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.ResumeAllLayout(System.Boolean)">
      <summary>
            Calls ResumeLayout on all DateEditMonthCalendar's child controls.
            </summary>
      <param name="performLayout">Indicates whether to invoke the layout logic now.</param>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.AddAnnuallyBoldedDate(System.DateTime)">
      <summary>
            Adds a day that is displayed in bold on an annual basis in the month calendar.
            </summary>
      <param name="date">The date to be displayed in bold.</param>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.AddBoldedDate(System.DateTime)">
      <summary>
            Adds a day to be displayed in bold in the month calendar.
            </summary>
      <param name="date">The date to be displayed in bold.</param>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.AddDisabledDate(System.DateTime)">
      <summary>
            Adds a day to be disabled in the month calendar.
            </summary>
      <param name="date">The date to be disabled.</param>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.AddMonthlyBoldedDate(System.DateTime)">
      <summary>
            Adds a day that is displayed in bold on a monthly basis in the month calendar.
            </summary>
      <param name="date">The date to be displayed in bold.</param>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.RemoveAllAnnuallyBoldedDates">
      <summary>
            Removes all the annually bold dates.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.RemoveAllBoldedDates">
      <summary>
            Removes all the nonrecurring bold dates.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.RemoveAllDisabledDates">
      <summary>
            Removes the all disabled dates.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.RemoveAllMonthlyBoldedDates">
      <summary>
            Removes all the monthly bold dates.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.RemoveAnnuallyBoldedDate(System.DateTime)">
      <summary>
            Removes the specified date from the list of annually bold dates.
            </summary>
      <param name="date">The date to remove from the date list.</param>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.RemoveBoldedDate(System.DateTime)">
      <summary>
            Removes the specified date from the list of nonrecurring bold dates.
            </summary>
      <param name="date">The date to remove from the date list.</param>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.RemoveDisabledDate(System.DateTime)">
      <summary>
            Removes the specified date from the list of disabled dates.
            </summary>
      <param name="date">The date to remove from the date list.</param>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.RemoveMonthlyBoldedDate(System.DateTime)">
      <summary>
            Removes the specified date from the list of monthly bolded dates.
            </summary>
      <param name="date">The date to remove from the date list.</param>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.SetCalendarDimensions(System.Int32,System.Int32)">
      <summary>
            Sets the number of columns and rows of months to display.
            </summary>
      <param name="x">The number of columns.</param>
      <param name="y">The number of rows.</param>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.SetDate(System.DateTime)">
      <summary>
            Sets a date as the currently selected date.
            </summary>
      <param name="date">The date to be selected.</param>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.GetDisplayRange(System.Boolean)">
      <summary>
            Retrieves date information that represents the low and high limits of the displayed dates of the control.
            </summary>
      <param name="visible">true to retrieve only the dates that are fully contained in displayed months; otherwise, false.</param>
      <returns>The begin and end dates of the displayed calendar.</returns>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.SetSelectionRange(System.DateTime,System.DateTime)">
      <summary>
            Sets the selected dates in a month calendar control to the specified date range.
            </summary>
      <param name="date1">The beginning date of the selection range.</param>
      <param name="date2">The end date of the selection range.</param>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.HitTest(System.Drawing.Point)">
      <summary>
            Returns an object with information on which portion of a month calendar control
                is at a location specified by a System.Drawing.Point.
            </summary>
      <param name="point">A System.Drawing.Point containing the System.Drawing.Point.X and System.Drawing.Point.Y
                coordinates of the point to be hit tested.</param>
      <returns>A System.Windows.Forms.MonthCalendar.HitTestInfo that contains information
                about the specified point on the month calendar.</returns>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.HitTest(System.Int32,System.Int32)">
      <summary>
            Returns a System.Windows.Forms.MonthCalendar.HitTestInfo with information
                on which portion of a month calendar control is at a specified x- and y-coordinate.
            </summary>
      <param name="x">The System.Drawing.Point.Y coordinate of the point to be hit tested.</param>
      <param name="y">The System.Drawing.Point.X coordinate of the point to be hit tested.</param>
      <returns>A System.Windows.Forms.MonthCalendar.HitTestInfo that contains information
                about the specified point on the month calendar.</returns>
    </member>
    <member name="M:C1.Win.C1Input.DateEditMonthCalendar.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="T:C1.Win.C1Input.C1NumericEdit">
      <summary>
            Represents a composite control combining a NumericUpDown and a drop-down calculator for easy numeric values editing.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1NumericEdit.#ctor">
      <summary>
            Initializes a new instance of the C1NumericEdit class.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1NumericEdit.DefaultDropDownFormClassName">
      <summary>
            This property is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1NumericEdit.TypeRestriction">
      <summary>
            This property is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1NumericEdit.DataType">
      <summary>
            Type of the Value property.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1NumericEdit.FormatType">
      <summary>
            Enumeration value determining the formatting method, including standard .NET format specifiers, custom and programmatic formatting.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1NumericEdit.Increment">
      <summary>
            Indicates the amount to increment/decrement when the user clicks up/down buttons.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1NumericEdit.ShouldSerializeIncrement">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.C1NumericEdit.ResetIncrement">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1NumericEdit.Calculator">
      <summary>
            The dropdown calculator object.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1NumericEdit.ShouldSerializeCalculator">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:C1.Win.C1Input.C1NumericEdit.Text">
      <summary>
            This property is for internal use only.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1NumericEdit.SpinUp">
      <summary>
              Performs spin up.
            </summary>
      <remarks>
        <see cref="P:C1.Win.C1Input.C1NumericEdit.Increment" /> property is used to define the increment.
              This method has the same behavior with the Up key pressed.
            </remarks>
      <seealso cref="M:C1.Win.C1Input.C1NumericEdit.SpinDown" />
    </member>
    <member name="M:C1.Win.C1Input.C1NumericEdit.SpinUp(System.Object)">
      <summary>
              Performs spin up.
            </summary>
      <param name="increment">
              The <see cref="T:System.Object" /> value that indicates the increment when spin up.
            </param>
      <remarks>
              This method has the same behavior with the Up key pressed.
            </remarks>
      <seealso cref="M:C1.Win.C1Input.C1NumericEdit.SpinDown(System.Object)" />
    </member>
    <member name="M:C1.Win.C1Input.C1NumericEdit.SpinDown">
      <summary>
              Performs spin down.
            </summary>
      <remarks>
        <see cref="P:C1.Win.C1Input.C1NumericEdit.Increment" /> property is used to define the decrement.
              This method has the same behavior with the Down key pressed.
            </remarks>
      <seealso cref="M:C1.Win.C1Input.C1NumericEdit.SpinUp" />
    </member>
    <member name="M:C1.Win.C1Input.C1NumericEdit.SpinDown(System.Object)">
      <summary>
              Performs spin down.
            </summary>
      <param name="decrement">
              The <see cref="T:System.Object" /> value that indicates the decrement when spin down.
            </param>
      <remarks>
              This method has the same behavior with the Down key pressed.
            </remarks>
      <seealso cref="M:C1.Win.C1Input.C1NumericEdit.SpinDown(System.Object)" />
    </member>
    <member name="M:C1.Win.C1Input.C1NumericEdit.OnUpDownButtonClick(C1.Win.C1Input.UpDownButtonClickEventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.C1NumericEdit.OpenDropDown">
      <summary>
            Shows the dropdown.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1NumericEdit.UpdateDataType(System.Type)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="propertyType">
      </param>
    </member>
    <member name="P:C1.Win.C1Input.C1NumericEdit.DefaultThemeRootPath">
      <summary>
            Default path for the control in xml theme file.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.C1PictureBox">
      <summary>
            Represents a Windows PictureBox control supporting data binding to data source fields containing image data.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1PictureBox.#ctor">
      <summary>
            Initializes a new instance of the C1PictureBox class.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1PictureBox.Dispose(System.Boolean)">
      <summary>
            Releases the resources used by the C1PictureBox.
            </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="P:C1.Win.C1Input.C1PictureBox.DataSource">
      <summary>
            The data source object to which the control is bound.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1PictureBox.DataField">
      <summary>
            The field of the data source object to which the control is bound.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1PictureBox.ImmediateUpdate">
      <summary>
            Gets or sets whether the image should be put into the data source right after the Image property has been changed or it shouldn't be put there until the following call of the CurrencyManager.EndCurrentEdit() method.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1PictureBox.Image">
      <summary>
            The image displayed in the control.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1PictureBox.FocusOnClick">
      <summary>
            Gets or sets the value indicating whether the picture box receives focus when clicked.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1PictureBox.ImageToByteArray(System.Drawing.Image,System.Drawing.Imaging.ImageFormat)">
      <summary>
            Returns the contents of an image.
            </summary>
      <param name="image">Image to return as a byte array.</param>
      <param name="format">Format in which to return the image contents.</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.C1PictureBox.ImageFromByteArray(System.Byte[])">
      <summary>
            Converts a byte array to an image.
            </summary>
      <param name="buffer">The contents of an image. </param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.C1PictureBox.CopyImage">
      <summary>
            Copies the image currently in the control to the clipboard.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1PictureBox.PasteImage">
      <summary>
            If the clipboard contains an image, this method replaces the contents of the Image property of the control
            </summary>
    </member>
    <member name="E:C1.Win.C1Input.C1PictureBox.BindingFormatting">
      <summary>
            Occurs when Image is retrieved from the data source.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1PictureBox.OnBindingFormatting(System.Windows.Forms.ConvertEventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="E:C1.Win.C1Input.C1PictureBox.BindingParsing">
      <summary>
            Occurs when Image is stored in the data source.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1PictureBox.OnBindingParsing(System.Windows.Forms.ConvertEventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="E:C1.Win.C1Input.C1PictureBox.ImageChanged">
      <summary>
            Occurs when the Image changes.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1PictureBox.OnImageChanged(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.C1PictureBox.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.C1PictureBox.OnGotFocus(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.C1PictureBox.OnLostFocus(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.C1PictureBox.WndProc(System.Windows.Forms.Message@)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="m">
      </param>
    </member>
    <member name="T:C1.Win.C1Input.C1RangeSlider">
      <summary>
            Represents a Windows range slider control supporting additional visual styles.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1RangeSlider.#ctor">
      <summary>
            Initializes a new instance of the C1RangeSlider class.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1RangeSlider.Dispose(System.Boolean)">
      <summary>
            Releases the resources used by the C1RangeSlider.
            </summary>
      <param name="disposing">
        <b>true</b> to release both managed and unmanaged resources; <b>false</b> to release only unmanaged resources.</param>
    </member>
    <member name="P:C1.Win.C1Input.C1RangeSlider.LowerValue">
      <summary>
            Gets or sets the current lower magnitude of the range control.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1RangeSlider.UpperValue">
      <summary>
            Gets or sets the current upper magnitude of the range control.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1RangeSlider.Minimum">
      <summary>
            Gets or sets the minimum possible value of the range element.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1RangeSlider.Maximum">
      <summary>
            Gets or sets the maximum possible value of the range element.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1RangeSlider.SmallChange">
      <summary>
            Gets or sets the value to be added to or subtracted from the LowerValue or UpperValue properties when the lower value thumb or upper value thumb is moved a small distance.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1RangeSlider.LargeChange">
      <summary>
            Gets or sets the value to be added to or subtracted from the LowerValue or UpperValue properties when the lower value thumb or upper value thumb is moved a large distance.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1RangeSlider.IsRangeBarVisible">
      <summary>
            Gets or sets a value that indicates whether C1RangeSlider bar should be displayed.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1RangeSlider.Orientation">
      <summary>
            Gets or sets a value indicating the horizontal or vertical orientation of the C1RangeSlider.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1RangeSlider.IsDirectionReversed">
      <summary>
            Gets or sets the direction of increasing value.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1RangeSlider.ScrollBehavior">
      <summary>
            Gets or sets how thumbs will be moved when mouse click will be performed outside selected area.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1RangeSlider.LowerThumbPath">
      <summary>
            Gets or sets custom thumb path for lower value.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1RangeSlider.UpperThumbPath">
      <summary>
            Gets or sets custom thumb path for upper value.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1RangeSlider.Enabled">
      <summary>
            Gets or sets a value indicating whether the control can respond to user interaction.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1RangeSlider.Styles">
      <summary>
            Gets or sets a collection of named Style objects.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1RangeSlider.VisualStyle">
      <summary>
            Gets or sets the visual style of the control.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1RangeSlider.ResetVisualStyle">
      <summary>
            Resets <see cref="P:C1.Win.C1Input.C1RangeSlider.VisualStyle" /> to the default value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1RangeSlider.ShouldSerializeVisualStyle">
      <summary>
            Tests whether <see cref="P:C1.Win.C1Input.C1RangeSlider.VisualStyle" /> should be serialized.
            </summary>
      <returns>True if <see cref="P:C1.Win.C1Input.C1RangeSlider.VisualStyle" /> should be serialized, false otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Input.C1RangeSlider.OnVisualStyleChanged(System.EventArgs)">
      <summary>
            Invokes the VisualStyleChanged event.
            </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="E:C1.Win.C1Input.C1RangeSlider.VisualStyleChanged">
      <summary>
            Occurs when the VisualStyle property has changed.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.C1RangeSlider.RangeSliderStyleCollection">
      <summary>
            Represents a collection of named Style objects.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.C1RangeSlider.RangeSliderStyleCollection.BarStyleCollection">
      <summary>
            Represents a collection of named Style objects for bar.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1RangeSlider.RangeSliderStyleCollection.BarStyleCollection.BackColor">
      <summary>
            Gets or sets background color of bar.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1RangeSlider.RangeSliderStyleCollection.BarStyleCollection.BorderColor">
      <summary>
            Gets or sets border color of bar.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1RangeSlider.RangeSliderStyleCollection.BarStyleCollection.DisabledBackColor">
      <summary>
            Gets or sets background color of bar if control is disabled.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1RangeSlider.RangeSliderStyleCollection.BarStyleCollection.DisabledBorderColor">
      <summary>
            Gets or sets border color of bar if control is disabled.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1RangeSlider.RangeSliderStyleCollection.BarStyleCollection.SelectedAreaColor">
      <summary>
            Gets or sets color of selected area.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.C1RangeSlider.RangeSliderStyleCollection.ThumbStyleCollection">
      <summary>
            Represents a collection of named Style objects for thumb.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1RangeSlider.RangeSliderStyleCollection.ThumbStyleCollection.BackColor">
      <summary>
            Gets or sets background color of thumb.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1RangeSlider.RangeSliderStyleCollection.ThumbStyleCollection.BorderColor">
      <summary>
            Gets or sets border color of thumb.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1RangeSlider.RangeSliderStyleCollection.ThumbStyleCollection.HotBackColor">
      <summary>
            Gets or sets background color of thumb if mouse is over it.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1RangeSlider.RangeSliderStyleCollection.ThumbStyleCollection.HotBorderColor">
      <summary>
            Gets or sets border color of thumb if mouse is over it.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1RangeSlider.RangeSliderStyleCollection.ThumbStyleCollection.PressedBackColor">
      <summary>
            Gets or sets background color of thumb when user performs mouse click on it.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1RangeSlider.RangeSliderStyleCollection.ThumbStyleCollection.PressedBorderColor">
      <summary>
            Gets or sets border color of thumb when user performs mouse click on it.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1RangeSlider.RangeSliderStyleCollection.ThumbStyleCollection.DisabledBackColor">
      <summary>
            Gets or sets background color of thumb if control is disabled.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1RangeSlider.RangeSliderStyleCollection.ThumbStyleCollection.DisabledBorderColor">
      <summary>
            Gets or sets border color of thumb if control is disabled.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1RangeSlider.RangeSliderStyleCollection.ThumbStyleCollection.CornerRadius">
      <summary>
            Gets or sets corner radius of thumb.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1RangeSlider.RangeSliderStyleCollection.ThumbStyleCollection.Padding">
      <summary>
            Gets or sets padding within the thumb.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1RangeSlider.RangeSliderStyleCollection.BarStyle">
      <summary>
            Gets or sets a collection of named Style objects for bar.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1RangeSlider.RangeSliderStyleCollection.ThumbStyle">
      <summary>
            Gets or sets a collection of named Style objects for thumb.
            </summary>
    </member>
    <member name="E:C1.Win.C1Input.C1RangeSlider.LowerValueChanged">
      <summary>
            Fires when the <see cref="P:C1.Win.C1Input.C1RangeSlider.LowerValue" /> property changes.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1RangeSlider.OnLowerValueChanged(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="E:C1.Win.C1Input.C1RangeSlider.UpperValueChanged">
      <summary>
            Fires when the <see cref="P:C1.Win.C1Input.C1RangeSlider.UpperValue" /> property changes.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1RangeSlider.OnUpperValueChanged(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="E:C1.Win.C1Input.C1RangeSlider.ValueChanged">
      <summary>
            Fires when any of the properties: LowerValue or UpperValue changes.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1RangeSlider.OnValueChanged(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="E:C1.Win.C1Input.C1RangeSlider.OrientationChanged">
      <summary>
            Fires when the <see cref="P:C1.Win.C1Input.C1RangeSlider.Orientation" /> property changes.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1RangeSlider.OnOrientationChanged(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="E:C1.Win.C1Input.C1RangeSlider.DirectionChanged">
      <summary>
            Fires when the <see cref="P:C1.Win.C1Input.C1RangeSlider.IsDirectionReversed" /> property changes.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1RangeSlider.OnDirectionChanged(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.C1RangeSlider.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Raises the System.Windows.Forms.Control.MouseWheel event.
            This method is for internal use only.
            </summary>
      <param name="e">A System.Windows.Forms.MouseEventArgs that contains the event data.</param>
    </member>
    <member name="P:C1.Win.C1Input.C1RangeSlider.DefaultThemeRootPath">
      <summary>
            Default Theme root path.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.CalendarType">
      <summary>
            Calendar used with C1DateEdit.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.CalendarType.Default">
      <summary>
            Represents default calendar.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.CalendarType.ChineseLunisolarCalendar">
      <summary>
            Represents Chinese Lunisolar Calendar
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.CalendarType.EastAsianLunisolarCalendar">
      <summary>
            Represents East Asian Lunisolar Calendar
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.CalendarType.GregorianCalendar">
      <summary>
            Represents Gregorian Calendar
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.CalendarType.HebrewCalendar">
      <summary>
            Represents Hebrew Calendar
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.CalendarType.HijriCalendar">
      <summary>
            Represents Hijri Calendar
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.CalendarType.JapaneseCalendar">
      <summary>
            Represents Japanese Calendar
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.CalendarType.JapaneseLunisolarCalendar">
      <summary>
            Represents Japanese Lunisolar Calendar
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.CalendarType.JulianCalendar">
      <summary>
            Represents Julian Calendar
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.CalendarType.KoreanCalendar">
      <summary>
            Represents Korean Calendar
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.CalendarType.KoreanLunisolarCalendar">
      <summary>
            Represents Korean Lunisolar Calendar
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.CalendarType.TaiwanCalendar">
      <summary>
            Represents Taiwan Calendar
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.CalendarType.TaiwanLunisolarCalendar">
      <summary>
            Represents Taiwan Lunisolar Calendar
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.CalendarType.ThaiBuddhistCalendar">
      <summary>
            Represents Thai Buddhist Calendar
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.CalendarType.UmAlQuraCalendar">
      <summary>
            Represents UmAlQuraCalendar
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.CalendarType.PersianCalendar">
      <summary>
            Represents the Persian calendar.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.RangeSliderScrollBehavior">
      <summary>
            Specifies how thumbs will be moved when mouse click will be performed outside selected area.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.RangeSliderScrollBehavior.None">
      <summary>
            Both thumbs will not move.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.RangeSliderScrollBehavior.Thumb">
      <summary>
            Closest thumb will be moved to direction of mouse by a large distance.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.RangeSliderScrollBehavior.Range">
      <summary>
            Both thumbs will be moved to direction of mouse by a large distance.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.UpDownButtonAlignment">
      <summary>
            Specifies alignment of spin button of a <see cref="T:C1.Win.C1Input.C1DropDownControl" />.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.UpDownButtonAlignment.Default">
      <summary>
            Vertically stacked Up and Down buttons.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.UpDownButtonAlignment.UpLeftDownRight">
      <summary>
            Up button on the left and down button on the right.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.UpDownButtonAlignment.UpRightDownLeft">
      <summary>
            Up button on the right and down button on the left.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.DropDownItem">
      <summary>
            Represents drop down item for <see cref="T:C1.Win.C1Input.C1SplitButton" /> control.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DropDownItem.#ctor">
      <summary>
            Creates an instance of DropDownItem class.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DropDownItem.Dispose(System.Boolean)">
      <summary>
            Releases the resources used by the DropDownItem.
            </summary>
      <param name="disposing">
        <b>true</b> to release both managed and unmanaged resources; <b>false</b> to release only unmanaged resources.</param>
    </member>
    <member name="P:C1.Win.C1Input.DropDownItem.SplitButton">
      <summary>
            Gets the <see cref="T:C1.Win.C1Input.C1SplitButton" /> that this <see cref="T:C1.Win.C1Input.DropDownItem" /> belongs to.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DropDownItem.Items">
      <summary>
            Gets the collection of child items in that is associated with this DropDownItem.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DropDownItem.CheckOnClick">
      <summary>
            Gets or sets a value that indicates whether the item should toggle its pressed state when it is clicked.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DropDownItem.Text">
      <summary>
            Gets or sets the text associated with the component.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DropDownItem.Checked">
      <summary>
            Gets or sets a value that indicates whether the item is checked.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DropDownItem.DialogResult">
      <summary>
            Gets or sets the dialog-box result produced in a modal form by clicking the button.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DropDownItem.Image">
      <summary>
            Gets or sets the image associated with the <see cref="T:C1.Win.C1Input.DropDownItem" />.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DropDownItem.ImageIndex">
      <summary>
            Gets or sets the index of the image in the ImageList.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DropDownItem.ImageKey">
      <summary>
            Gets or sets the image key in the ImageList.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DropDownItem.ImageSize">
      <summary>
            Gets or sets the size of the image that will be displayed on the button.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DropDownItem.ImageAlign">
      <summary>
            Gets or sets the alignment of the image within the bounds specified by the <see cref="P:C1.Win.C1Input.DropDownItem.ImageSize" /> property.
            </summary>
      <remarks>
            The value of this property is only used if <see cref="P:C1.Win.C1Input.DropDownItem.ImageScaling" /> = Clip and <see cref="P:C1.Win.C1Input.DropDownItem.ImageSize" />
            exceeds the original size of the image.
            </remarks>
    </member>
    <member name="P:C1.Win.C1Input.DropDownItem.ImageScaling">
      <summary>
            Gets or sets how the image will be scaled to fit within the bounds specified by the <see cref="P:C1.Win.C1Input.DropDownItem.ImageSize" /> property.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DropDownItem.Enabled">
      <summary>
            Gets or sets a value indicating whether the item can respond to user interaction.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DropDownItem.Visible">
      <summary>
            Gets or sets a value indicating whether the item is visible.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DropDownItem.Tag">
      <summary>
            Gets or sets the object that contains data about the item.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DropDownItem.IsDisposed">
      <summary>
            Gets a value indicating whether the component has been disposed.
            </summary>
    </member>
    <member name="E:C1.Win.C1Input.DropDownItem.DropDown">
      <summary>
            Fires when the drop-down portion of this element is shown.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DropDownItem.OnDropDown(System.EventArgs)">
      <summary>
            Raises the <see cref="E:C1.Win.C1Input.DropDownItem.DropDown" /> event.
            </summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="E:C1.Win.C1Input.DropDownItem.DropDownClosed">
      <summary>
            Indicates that the drop-down portion of this element has closed.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DropDownItem.OnDropDownClosed(System.EventArgs)">
      <summary>
            Raises the <see cref="E:C1.Win.C1Input.DropDownItem.DropDownClosed" /> event.
            </summary>
    </member>
    <member name="E:C1.Win.C1Input.DropDownItem.Click">
      <summary>
            Fires when the component is clicked.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DropDownItem.OnClick(System.EventArgs)">
      <summary>
            Raises the <see cref="E:C1.Win.C1Input.DropDownItem.Click" /> event.
            </summary>
    </member>
    <member name="E:C1.Win.C1Input.DropDownItem.KeyDown">
      <summary>
            Fires when a key is pressed while the component has focus. 
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DropDownItem.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>
            Raises the <see cref="E:C1.Win.C1Input.DropDownItem.KeyDown" /> event.
            </summary>
      <param name="e">
        <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</param>
    </member>
    <member name="E:C1.Win.C1Input.DropDownItem.KeyPress">
      <summary>
            Fires when a key is pressed while the component has focus. 
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DropDownItem.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary>
            Raises the <see cref="E:C1.Win.C1Input.DropDownItem.KeyPress" /> event.
            </summary>
      <param name="e">
        <see cref="T:System.Windows.Forms.KeyPressEventArgs" /> that contains the event data.</param>
    </member>
    <member name="E:C1.Win.C1Input.DropDownItem.KeyUp">
      <summary>
            Fires when a key is released while the component has focus. 
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DropDownItem.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
      <summary>
            Raises the <see cref="E:C1.Win.C1Input.DropDownItem.KeyUp" /> event.
            </summary>
      <param name="e">
        <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</param>
    </member>
    <member name="E:C1.Win.C1Input.DropDownItem.GotFocus">
      <summary>
            Fires when the component receives the focus.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DropDownItem.OnGotFocus(System.EventArgs)">
      <summary>
            Raises the <see cref="E:C1.Win.C1Input.DropDownItem.GotFocus" /> event.
            </summary>
    </member>
    <member name="E:C1.Win.C1Input.DropDownItem.LostFocus">
      <summary>
            Fires when the component loses the focus.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DropDownItem.OnLostFocus(System.EventArgs)">
      <summary>
            Raises the <see cref="E:C1.Win.C1Input.DropDownItem.LostFocus" /> event.
            </summary>
    </member>
    <member name="E:C1.Win.C1Input.DropDownItem.DoubleClick">
      <summary>
            Fires when the component is double-clicked.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DropDownItem.OnDoubleClick(System.EventArgs)">
      <summary>
            Raises the <see cref="E:C1.Win.C1Input.DropDownItem.DoubleClick" /> event.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.C1SplitButton">
      <summary>
            Represents a composite button control supporting additional visual styles and drop down item list.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1SplitButton.#ctor">
      <summary>
            Initializes a new instance of the C1SplitButton class.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1SplitButton.Dispose(System.Boolean)">
      <summary>
            Releases the resources used by the C1SplitButton.
            </summary>
      <param name="disposing">
        <b>true</b> to release both managed and unmanaged resources; <b>false</b> to release only unmanaged resources.</param>
    </member>
    <member name="P:C1.Win.C1Input.C1SplitButton.Items">
      <summary>
            Gets the collection of <see cref="T:C1.Win.C1Input.DropDownItem" /> components on this button.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1SplitButton.DropDownImageList">
      <summary>
            The ImageList to get the images to display in the drop down items.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1SplitButton.DefaultItem">
      <summary>
            Gets or sets the default drop down item.
            </summary>
    </member>
    <member name="E:C1.Win.C1Input.C1SplitButton.DropDownItemClicked">
      <summary>
            Occurs when a <see cref="T:C1.Win.C1Input.DropDownItem" /> is clicked.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1SplitButton.OnDropDownItemClicked(C1.Win.C1Input.DropDownItemClickedEventArgs)">
      <summary>
            Raises <see cref="E:C1.Win.C1Input.C1SplitButton.DropDownItemClicked" /> event.
            </summary>
      <param name="e">A <see cref="T:C1.Win.C1Input.DropDownItemClickedEventArgs" /> that contains the event data. </param>
    </member>
    <member name="E:C1.Win.C1Input.C1SplitButton.DropDownClosed">
      <summary>
            Occurs when the dropdown has been closed.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1SplitButton.OnDropDownClosed(C1.Win.C1Input.DropDownClosedEventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="E:C1.Win.C1Input.C1SplitButton.DropDownOpened">
      <summary>
            Occurs after the dropdown is opened.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1SplitButton.OnDropDownOpened(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.C1SplitButton.GetPreferredSize(System.Drawing.Size)">
      <summary>
            Retrieves the size of a rectangular area into which a control can be fitted.
            </summary>
      <param name="proposedSize">The custom-sized area for a control.</param>
      <returns>An ordered pair of type <see cref="T:System.Drawing.Size" /> representing the width and height of a rectangle.</returns>
    </member>
    <member name="P:C1.Win.C1Input.C1SplitButton.DroppedDown">
      <summary>
            Run-time property indicating if the dropdown is currently open.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1SplitButton.DefaultThemeRootPath">
      <summary>
            Default path for the control in xml theme file.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.DropDownItemCollection">
      <summary>
            Represents collection of drop down items.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DropDownItemCollection.Item(System.Int32)">
      <summary>
            Gets or sets the item at the specified indexed location in the collection.
            </summary>
      <param name="index">The indexed location of the item in the collection. </param>
      <returns>An <see cref="T:C1.Win.C1Input.DropDownItem" /> that represents the item at the specified indexed location.</returns>
    </member>
    <member name="M:C1.Win.C1Input.DropDownItemCollection.Add(C1.Win.C1Input.DropDownItem)">
      <summary>
            Adds the specified item to the end of the collection. 
            </summary>
      <param name="value">The <see cref="T:C1.Win.C1Input.DropDownItem" /> to be added to the end of the collection. </param>
      <returns>The zero-based index value of the <see cref="T:C1.Win.C1Input.DropDownItem" /> added to the collection.</returns>
    </member>
    <member name="M:C1.Win.C1Input.DropDownItemCollection.IndexOf(C1.Win.C1Input.DropDownItem)">
      <summary>
            Returns the zero-based index of the first occurrence of a value in the list.
            </summary>
      <param name="value">The item to locate in the list.</param>
      <returns>The zero-based index of the first occurrence of value within the entire list, if found; otherwise, -1.</returns>
    </member>
    <member name="M:C1.Win.C1Input.DropDownItemCollection.Insert(System.Int32,C1.Win.C1Input.DropDownItem)">
      <summary>
            Inserts the specified item into the collection at the specified location.
            </summary>
      <param name="index">The indexed location within the collection to insert the item. </param>
      <param name="value">The item to insert.</param>
    </member>
    <member name="M:C1.Win.C1Input.DropDownItemCollection.Remove(C1.Win.C1Input.DropDownItem)">
      <summary>
            Removes the specified item from the collection.
            </summary>
      <param name="value">The item to remove from the collection. </param>
    </member>
    <member name="M:C1.Win.C1Input.DropDownItemCollection.Contains(C1.Win.C1Input.DropDownItem)">
      <summary>
            Indicates whether the collection contains a specific <see cref="T:C1.Win.C1Input.DropDownItem" />.
            </summary>
      <param name="value">The <see cref="T:C1.Win.C1Input.DropDownItem" /> object for which to search.</param>
      <returns>Whether the collection contains the specific <see cref="T:C1.Win.C1Input.DropDownItem" /> object.</returns>
    </member>
    <member name="M:C1.Win.C1Input.DropDownItemCollection.OnInsertComplete(System.Int32,System.Object)">
      <summary>
            Performs additional custom processes after inserting an <see cref="T:C1.Win.C1Input.DropDownItem" />
            into the <see cref="T:C1.Win.C1Input.DropDownItemCollection" /> instance.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DropDownItemCollection.OnRemoveComplete(System.Int32,System.Object)">
      <summary>
            Performs additional custom processes after removing an <see cref="T:C1.Win.C1Input.DropDownItem" />
            from the <see cref="T:C1.Win.C1Input.DropDownItemCollection" /> instance.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DropDownItemCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
      <summary>
            Performs additional custom processes after setting an <see cref="T:C1.Win.C1Input.DropDownItem" />
            in the <see cref="T:C1.Win.C1Input.DropDownItemCollection" /> instance.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DropDownItemCollection.OnClear">
      <summary>
            Performs additional custom processes when clearing the contents of
            the <see cref="T:C1.Win.C1Input.DropDownItemCollection" /> instance.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DropDownItemCollection.OnClearComplete">
      <summary>
            Performs additional custom processes after clearing the contents of
            the <see cref="T:C1.Win.C1Input.DropDownItemCollection" /> instance.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.Enums.BreakType">
      <summary>
            Specifies whether the layout should break the flow after the component.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.BreakType.None">
      <summary>
            The layout should not break the flow after the component.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.BreakType.Row">
      <summary>
            Causes next component to be placed in a new row within the flow.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.BreakType.Column">
      <summary>
            Creates a new column after this component.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.BreakType.Group">
      <summary>
            Creates a new row starting below the current component, at the left edge of the current group.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.Enums.ContentAlignment">
      <summary>
            Defines values for the content alignment within the <see cref="T:C1.Win.C1Input.DropDownItem" />.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.ContentAlignment.NotSet">
      <summary>
            Default value.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.ContentAlignment.Near">
      <summary>
            Near.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.ContentAlignment.Far">
      <summary>
            Far.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.ContentAlignment.Center">
      <summary>
            Center.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.ContentAlignment.Spread">
      <summary>
            Spread.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.Enums.InputComboBoxStyle">
      <summary>
            Determines whether the user can edit a value in the text portion of the <see cref="T:C1.Win.C1Input.C1ComboBox" />.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.InputComboBoxStyle.DropDown">
      <summary>
            The text portion is editable.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.InputComboBoxStyle.DropDownList">
      <summary>
            The user cannot directly edit the text portion.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.Enums.InputContentAlignment">
      <summary>
            Defines values for the content alignment within the <see cref="T:C1.Win.C1Input.DropDownItem" />.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.InputContentAlignment.NotSet">
      <summary>
            Default value.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.InputContentAlignment.Near">
      <summary>
            Near.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.InputContentAlignment.Far">
      <summary>
            Far.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.InputContentAlignment.Center">
      <summary>
            Center.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.InputContentAlignment.Spread">
      <summary>
            Spread.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.Enums.InputImageAlignment">
      <summary>
            Specifies the image alignment on the input components.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.InputImageAlignment.TopLeft">
      <summary>
            Image is vertically aligned at the top, 
            and horizontally aligned on the left. 
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.InputImageAlignment.TopCenter">
      <summary>
            Image is vertically aligned at the top, 
            and horizontally aligned at the center.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.InputImageAlignment.TopRight">
      <summary>
            Image is vertically aligned at the top, 
            and horizontally aligned on the right. 
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.InputImageAlignment.MiddleLeft">
      <summary>
            Image is vertically aligned in the middle, 
            and horizontally aligned on the left. 
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.InputImageAlignment.MiddleCenter">
      <summary>
            Image is vertically aligned in the middle, 
            and horizontally aligned at the center. 
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.InputImageAlignment.MiddleRight">
      <summary>
            Image is vertically aligned in the middle, 
            and horizontally aligned on the right. 
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.InputImageAlignment.BottomLeft">
      <summary>
            Image is vertically aligned at the bottom, 
            and horizontally aligned on the left. 		
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.InputImageAlignment.BottomCenter">
      <summary>
            Image is vertically aligned at the bottom, 
            and horizontally aligned at the center.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.InputImageAlignment.BottomRight">
      <summary>
            Image is vertically aligned at the bottom, 
            and horizontally aligned on the right. 
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.Enums.InputImageLayout">
      <summary>
            Specifies the layout logic used to display the background image in a rich tooltip.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.InputImageLayout.None">
      <summary>
            The image is left-aligned at the top across the control's client rectangle.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.InputImageLayout.Tile">
      <summary>
            The image is tiled across the control's client rectangle.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.InputImageLayout.Center">
      <summary>
            The image is centered within the control's client rectangle.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.InputImageLayout.Stretch">
      <summary>
            The image is stretched across the control's client rectangle. 
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.InputImageLayout.Zoom">
      <summary>
            The image is enlarged within the control's client rectangle.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.InputImageLayout.TileStretch">
      <summary>
            The image is split into nine pieces and tiled within the control's client rectangle.
            Center tiles are stretched, corner tiles are rendered with the original size.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.Enums.InputImageScaling">
      <summary>
            Specifies the image scaling on the input components.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.InputImageScaling.Clip">
      <summary>
            Use the image's original size, clipping it to the display area if necessary.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.InputImageScaling.Stretch">
      <summary>
            Stretch the image to fill the display area. 
            This mode will usually change the image's aspect ratio.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.InputImageScaling.Scale">
      <summary>
            Scale the image to fit the display area. 
            This mode may increase or reduce the size of the image while maintaining its aspect ratio.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.InputImageScaling.Tile">
      <summary>
            Tile the image to fill the display area.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.InputImageScaling.TileStretch">
      <summary>
            Tile the image into the 3x3 matrix and stretch it to fill the display area.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.InputImageScaling.TileStretchHorizontal">
      <summary>
            Tile the image into the row of 3 images and stretch it to fill the display area.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.InputImageScaling.TileStretchVertical">
      <summary>
            Tile the image into the column of 3 images and stretch it to fill the display area.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.Enums.InputNavigatorButton">
      <summary>
            A list of all available navigator buttons.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.InputNavigatorButton.MoveFirst">
      <summary>
            The 'Move First' button.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.InputNavigatorButton.MovePrevious">
      <summary>
            The 'Move Previous' button.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.InputNavigatorButton.MoveNext">
      <summary>
            The 'Move Next' button.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.InputNavigatorButton.MoveLast">
      <summary>
            The 'Move Last' button.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.InputNavigatorButton.AddNew">
      <summary>
            The 'Add New' button.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.InputNavigatorButton.Delete">
      <summary>
            The 'Delete' button.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.InputNavigatorButton.Edit">
      <summary>
            The 'Edit' button.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.InputNavigatorButton.Apply">
      <summary>
            The 'Apply' button.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.InputNavigatorButton.Cancel">
      <summary>
            The 'Cancel' button.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.InputNavigatorButton.Save">
      <summary>
            The 'Save Data' button.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.InputNavigatorButton.Reload">
      <summary>
            The 'Reload Data' button
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.Enums.InputNavigatorItems">
      <summary>
            A set of navigator items.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.InputNavigatorItems.None">
      <summary>
            No items are in the set.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.InputNavigatorItems.MoveFirstButton">
      <summary>
            The 'Move First' button.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.InputNavigatorItems.MovePreviousButton">
      <summary>
            The 'Move Previous' button.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.InputNavigatorItems.PositionInputBox">
      <summary>
            The input box that changes the current position.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.InputNavigatorItems.CountLabel">
      <summary>
            The text label that displays the total number of items.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.InputNavigatorItems.MoveNextButton">
      <summary>
            The 'Move Next' button.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.InputNavigatorItems.MoveLastButton">
      <summary>
            The 'Move Last' button.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.InputNavigatorItems.AddNewButton">
      <summary>
            The 'Add New' button.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.InputNavigatorItems.DeleteButton">
      <summary>
            The 'Delete' button.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.InputNavigatorItems.ApplyButton">
      <summary>
            The 'Apply' button.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.InputNavigatorItems.CancelButton">
      <summary>
            The 'Cancel' button.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.InputNavigatorItems.All">
      <summary>
            Includes all available items.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.Enums.Visibility">
      <summary>
            Specifies the display state of a component.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.Visibility.Visible">
      <summary>
            Display the component.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.Visibility.Hidden">
      <summary>
            Do not display the element, but reserve space for the element in layout.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.Enums.Visibility.Collapsed">
      <summary>
            Do not display the element, and do not reserve space for it in layout.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.DropDownItemClickedEventHandler">
      <summary>
            Represents the method that will handle the <see cref="E:C1.Win.C1Input.C1SplitButton.DropDownItemClicked" /> event of the <see cref="T:C1.Win.C1Input.C1SplitButton" /> class.
            </summary>
      <param name="sender">
      </param>
      <param name="e">
      </param>
    </member>
    <member name="T:C1.Win.C1Input.DropDownItemClickedEventArgs">
      <summary>
            Provides data for <see cref="E:C1.Win.C1Input.C1SplitButton.DropDownItemClicked" /> event.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DropDownItemClickedEventArgs.#ctor(C1.Win.C1Input.DropDownItem)">
      <summary>
            Initializes a new instance of the DropDownItemClickedEventArgs class for the specified control.
            </summary>
      <param name="clickedItem">The <see cref="T:C1.Win.C1Input.DropDownItem" /> to store in this event.</param>
    </member>
    <member name="P:C1.Win.C1Input.DropDownItemClickedEventArgs.ClickedItem">
      <summary>
            Returns the clicked item.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.C1TextBox">
      <summary>
            The main data bound control used for entering and editing information in a text form. 
            Supports data formatting for all data types, including special features for date-time formats. 
            Also supports edit mask, data validation and other features.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1TextBox.#ctor">
      <summary>
            Initializes a new instance of the C1TextBox class.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1TextBox.Dispose(System.Boolean)">
      <summary>
            Releases the resources used by the C1TextBox.
            </summary>
      <param name="disposing">
      </param>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.FlatSystemBorder">
      <summary>
            Makes Fixed3D borders old-style looking (flat) 
            for System VisualStyle.
            This property is only for compatibility with legacy applications only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.MarkEmpty">
      <summary>
            Draws a red dotted line if Value is empty.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.BorderColor">
      <summary>
            Gets or sets the border color of the control.
            </summary>
      <remarks>
        <para>Use the <b>BorderColor</b> property to specify the border color of the control. 
            This property is set using a <see cref="T:System.Drawing.Color" /> object.</para>
        <para>The <b>BorderColor</b> property has an effect only when the <see cref="P:C1.Win.C1Input.C1TextBox.BorderStyle" /> property is set to <b>FixedSingle</b>. </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.VisualStyle">
      <summary>
            Gets or sets the visual style of the control.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1TextBox.ResetVisualStyle">
      <summary>
            Resets <see cref="P:C1.Win.C1Input.C1TextBox.VisualStyle" /> to the default value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1TextBox.ShouldSerializeVisualStyle">
      <summary>
            Tests whether <see cref="P:C1.Win.C1Input.C1TextBox.VisualStyle" /> should be serialized.
            </summary>
      <returns>True if <see cref="P:C1.Win.C1Input.C1TextBox.VisualStyle" /> should be serialized, false otherwise.</returns>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.DisabledForeColor">
      <summary>
            Gets or sets the foreground color of the disabled control.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.NegativeForeColor">
      <summary>
            Gets or sets the foreground color of the control which contains negative value.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.UseColumnStyles">
      <summary>
            Indicates whether to honor the ColumnStyle properties defined on the
            C1ViewColumn object that this control is bound to.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.Culture">
      <summary>
            The culture ID.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.CalendarType">
      <summary>
            Calendar, used to format date.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.CultureName">
      <summary>
            The name selected for the Culture property in the Properties grid
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.UserCultureOverride">
      <summary>
            If True, current user regional settings override the selected culture.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.CultureInfo">
      <summary>
            The current CultureInfo object (available at runtime).
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.DisplayFormat">
      <summary>
            Format used to display the value when the control is not in edit mode (does not have input focus or is read-only).
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.EditFormat">
      <summary>
            Format used to display the value when the control is in edit mode (has input focus and is not read-only).
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.CharCategory">
      <summary>
            Defines rules to filter keyboard input.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.ParseInfo">
      <summary>
            Settings affecting parsing, that is, converting the string entered by the user to the data type.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.MaskInfo">
      <summary>
            Edit mask settings.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.MaxLength">
      <summary>
              Gets or sets the maximum number of characters or bytes that the control can hold.
            </summary>
      <value>
              The number of characters or bytes (determined by the 
              <b>LengthAsByte</b> property) 
              that can be entered into the control. <br />The default is <b>zero</b>.
            </value>
      <remarks>
              The <b>MaxLength</b> property allows you to limit the number of characters 
              a user can enter in the control. The default value is 0, 
              which does not limit the number of characters. Any number greater than 0 indicates 
              the maximum number of characters.
               The <see cref="P:C1.Win.C1Input.MaxLengthUnit" /> effects the displayed result along with the <b>MaxLength</b> property.
            </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">
              If value is less than zero, an ArgumentOutOfRangeException is thrown.
            </exception>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.MaxLineCount">
      <summary>
              Gets or sets the maximum number of lines.
            </summary>
      <value>
              An <b>int</b> value that indicates the maximum number of lines.
              <br />The default is <b>zero</b>.
            </value>
      <remarks>
        <para>
          <b>MaxLineCount</b> limits the acceptable lines of text when the <see cref="P:C1.Win.C1Input.C1TextBox.Multiline" />
              property is <see langword="true" />.
              </para>
        <para>
              This property does not work with wrapped lines, so preferrable is to use <b>MaxLineCount</b> when <see cref="P:System.Windows.Forms.TextBoxBase.WordWrap" />
              property is <see langword="true" />.
              </para>
        <para>
              The default value of this property, zero, means no limit.
              </para>
      </remarks>
      <seealso cref="P:C1.Win.C1Input.C1TextBox.Multiline" />
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.MaxLengthUnit">
      <summary>
              Gets or sets whether the maximum number of characters that fit in the control 
              are handled based on bytes, characters, or text elements.
            </summary>
      <remarks>
              Determines the unit for counting for the <see cref="P:C1.Win.C1Input.C1TextBox.MaxLength" /> property. 
              The value <b>LengthUnit.Byte</b> means the MaxLength is counted by Byte.
              The value <b>LengthUnit.Char</b> means the MaxLength is counted by Char.
            </remarks>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.CaseSensitive">
      <summary>
            True if string comparisons are case-sensitive; otherwise, False. Default: False
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.FormatType">
      <summary>
            Enumeration value determining the formatting method, including standard .NET format specifiers, custom and programmatic formatting.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.CustomFormat">
      <summary>
            Custom format specifier used if FormatType = FormatTypeEnum.CustomFormat.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.NullText">
      <summary>
            String representing a DBNull value.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.EmptyAsNull">
      <summary>
            If True, empty strings are interpreted as null values (DBNull).
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.TrimStart">
      <summary>
            If True, leading spaces are removed.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.TrimEnd">
      <summary>
            If True, trailing spaces are removed.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.EditMask">
      <summary>
            The edit mask string restricting user input.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.NumericInput">
      <summary>
            Sets or gets a value indicating whether a special edit mode is used for numeric values.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.NumericInputKeys">
      <summary>
            Enables/disables the special keys used when NumericInput = True. Default: NumericInputKeyFlags.Standard.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.DateTimeInput">
      <summary>
            Whether or not a special edit mode is applied to DateTime values.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.CurrentTimeZone">
      <summary>
            If True, the control’s stored Value is in current time zone; otherwise, the Value is adjusted to the time zone defined by the GMTOffset property
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.GMTOffset">
      <summary>
            The time zone of the Value property used if CurrentTimeZone = False.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.WrapDateTimeFields">
      <summary>
            If this property is False the month will be automatically incremented when the user spins the date past the end of the month. The same about other parts of the date/time value.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.LoopPosition">
      <summary>
            Gets or sets a value indicating whether the position of the caret is automatically moved to the first field when the last field is filled.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.AutoChangePosition">
      <summary>
            Gets or sets a value indicating whether the position of the character is automatically changed
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.DaylightTimeAdjustment">
      <summary>
            The value specified in the GMTOffset property can be advanced or set back due to daylight-saving time changes. Default: NoAdjustments.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.MinShortYear">
      <summary>
            The minimum year that can be entered without leading zeros.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.PreValidation">
      <summary>
            Validation rules applied before parsing, that is, before converting the string entered by the user to the DataType (raw string validation).
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.PostValidation">
      <summary>
            Validation rules applied after parsing, that is, after converting the string entered by the user to the DataType (typed validation).
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.CausesValidation">
      <summary>
            Gets or sets a value indicating whether the control causes validation (i.e. calls Validated and Validating events)
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.Tag">
      <summary>
            Gets or sets the object that contains data about the control
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.BaseText">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.TextLength">
      <summary>
            Gets the length of text in the control.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.Lines">
      <summary>
            The lines of text in a multiline control.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.TextDetached">
      <summary>
            Specifies whether the Value and Text properties can be set independently.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.DataSource">
      <summary>
            The data source object to which the control is bound.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.DataField">
      <summary>
            The field of the data source object to which the control is bound.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.DataType">
      <summary>
            Type of the Value property.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.ValueIsDbNull">
      <summary>
            Gets or sets a value indicating whether the Value is DBNull.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.Value">
      <summary>
            Gets or sets the current <see cref="P:C1.Win.C1Input.C1TextBox.DataType" /> representation of the visual information contained in the control.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.ErrorInfo">
      <summary>
            Settings affecting error handling in the control.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.AcceptsEscape">
      <summary>
            Indicates if the Escape key that cancels modified value is handled by the control without passing it to the owner form (AcceptsEscape=True), or it is then passed to the form and can close it if the form has CancelButton (AcceptsEscape=False).
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.AcceptsTab">
      <summary>
            Indicates if Tab and Shift+Tab keys are accepted by control and move the focus to the next (previous) group of input characters in edit mask and in DateTimeInput mode.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.Modified">
      <summary>
            Gets or sets a value that indicates that the control has been modified by the user since the control received the input focus or its Value last set.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.EditMode">
      <summary>
            Returns True, if the control has input focus and TextDetached = False.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.Label">
      <summary>
            Label control associated with this input field.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.InitialSelection">
      <summary>
            Determines the selection position when a control receives input focus. Default: InitialSelectionEnum.SelectAll.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.DisableOnNoData">
      <summary>
            Gets or sets whether the text box should be disabled when it is bound to an empty data source, i.e. CurrencyManager.Count = 0.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.ShowFocusRectangle">
      <summary>
            Specifies whether a focus rectangle should be displayed around the client area when the control has the input focus.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.ShowContextMenu">
      <summary>
            Specifies whether the context menu can be displayed for the control.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.AutoSize">
      <summary>
            Gets or sets a value indicating whether the height of the control automatically adjusts when the font assigned to the control is changed.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.Enabled">
      <summary>
            Gets or sets a value indicating whether the control can respond to user interaction.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.VerticalAlign">
      <summary>
            Gets or sets the vertical alignment of the content in the control. The default is VerticalAlignEnum.Top.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.Margins">
      <summary>
            Gets or sets the spacing between the input control content and its edges, in pixels. Default: all margins are set to 0.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.ValueChangedBehavior">
      <summary>
            Allows backward compatibility with the old behavior, when the ValueChanged event previously fired on any text change.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.ExitOnLastChar">
      <summary>
              Gets or sets whether the next control in the tab order receives the focus as 
              soon as the control is filled at the last character. 
            </summary>
      <value>
        <see langword="true" /> if the focus is moved to the next control in the tab order as soon as the control
              is filled at the last character defined by the input control; otherwise, <see langword="false" />. 
               <br />
              The default is <see langword="false" />.
            </value>
      <remarks>
              The input focus moves to the next control when the last entered character causes the text to exceed the limit of the control.
            </remarks>
      <seealso cref="P:C1.Win.C1Input.C1TextBox.ExitOnLeftRightKey" />
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.ExitOnLeftRightKey">
      <summary>
              Gets or sets whether the focus automatically moves to the previous or next control in the tab order 
              when pressing the left or right arrow keys.
            </summary>
      <value>
              One of the <see cref="P:C1.Win.C1Input.C1TextBox.ExitOnLeftRightKey" /> enumeration values.  
              <br /> 
              The default is <see cref="F:C1.Win.C1Input.ExitOnLeftRightKey.None" />.
            </value>
      <remarks>
              The value of this property indicates the key which moves the input focus to the next control. 
              When the caret is at the last character of this control, focus moves out by pressing the right arrow key. 
              When the caret is before the first character of this control, focus moves out by pressing the left key.
            </remarks>
      <seealso cref="P:C1.Win.C1Input.C1TextBox.ExitOnLastChar" />
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.Initialization">
      <summary>
            Gets a value indicating that the <see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" /> method was called and the <see cref="M:System.ComponentModel.ISupportInitialize.EndInit" /> method was not called.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1TextBox.SetProposedValue(System.Object)">
      <summary>
            This method works exactly as setting the Value property, except that it does not change the internal variable
            storing the value before editing, so the user can press Esc and restore the previous value. 
            This method works only in edit mode. If the control is not in edit mode, this methods does nothing.
            </summary>
      <param name="value">Value to set to the control.</param>
    </member>
    <member name="M:C1.Win.C1Input.C1TextBox.SuspendNumericInput(System.Boolean,System.Boolean)">
      <summary>
            This method temporarily disables numeric input mode
            </summary>
      <param name="suspend">True to suspend numeric input, False to resume it</param>
      <param name="updateValue">If True, control's Value is updated, obtained from the current control text.</param>
    </member>
    <member name="M:C1.Win.C1Input.C1TextBox.ParseContent(System.Object@,C1.Win.C1Input.ErrorInfo)">
      <summary>
            Parses the Text string.
            </summary>
      <param name="parsedValue">Output parameter: Parsing result</param>
      <param name="errorInfo">Output parameter: Object detailing error information, if an error occurred.</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.C1TextBox.SetCultureInfo(System.Globalization.CultureInfo)">
      <summary>
            Sets culture.
            </summary>
      <param name="cultureInfo">New culture.</param>
    </member>
    <member name="M:C1.Win.C1Input.C1TextBox.SetCutureInfo(System.Globalization.CultureInfo)">
      <summary>
            Sets culture.
            </summary>
      <param name="cultureInfo">New culture.</param>
    </member>
    <member name="M:C1.Win.C1Input.C1TextBox.CheckValidationResult(C1.Win.C1Input.ErrorReasonEnum,System.Object@,C1.Win.C1Input.ErrorInfo)">
      <summary>
            Checks the result of the ParseContent method.
            </summary>
      <param name="reason">Value indicating the reason of validation failure</param>
      <param name="parsedValue">Parsed value of type DataType that was undergoing validation</param>
      <param name="errorInfo">Object detailing error information, if an error occurred</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.C1TextBox.UpdateValueWithCurrentText">
      <summary>
            Triggers parsing of the Text property and updating the Value.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.C1TextBox.IncDateTimeInput">
      <summary>
            Increments the currently selected field in DateTimeInput mode.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1TextBox.DecDateTimeInput">
      <summary>
            Decrements the currently selected field in DateTimeInput mode.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1TextBox.ValidateText">
      <summary>
            Validates current Text property in the same manner as it usually validated after the control loses focus.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1TextBox.SafeRecreateHandle">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1TextBox.GoToField(C1.Win.C1Input.DateTimeField,System.Boolean)">
      <summary>
            Moves the selection to the specified date-time field. Works only if the <see cref="P:C1.Win.C1Input.C1TextBox.DataType" /> property 
            is set to <see cref="T:System.DateTime" /> and the date-time input is active.
            </summary>
      <param name="field">Field to select.</param>
      <param name="updateText">a value that determines whether the text should be updated.</param>
      <returns>returns true if success.</returns>
      <remarks>
            Can be used in the <see cref="M:C1.Win.C1Input.C1TextBox.UpdateSelection" /> method to customize initial selection if the value type is date-time.
            </remarks>
    </member>
    <member name="M:C1.Win.C1Input.C1TextBox.UpdateSelection">
      <summary>
            Updates selection of the text according to the <see cref="P:C1.Win.C1Input.C1TextBox.InitialSelection" /> property.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1TextBox.UpdateNC">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1TextBox.DrawBorder(System.Drawing.Graphics,System.Boolean)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="g">
      </param>
      <param name="clear">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.C1TextBox.DrawBorder(System.Drawing.Graphics,System.IntPtr,System.Boolean)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="g">
      </param>
      <param name="dc">
      </param>
      <param name="clear">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.C1TextBox.DrawFocusRectangle">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1TextBox.OnVisualStyleChanged(System.EventArgs)">
      <summary>
            Invokes the VisualStyleChanged event.
            </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:C1.Win.C1Input.C1TextBox.CalcSizeInternal">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1TextBox.WmNCPaintSingleline(System.Windows.Forms.Message@)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="m">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.C1TextBox.BeginInit">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1TextBox.EndInit">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1TextBox.UpdateDataType(System.Type)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="propertyType">
      </param>
    </member>
    <member name="E:C1.Win.C1Input.C1TextBox.BorderColorChanged">
      <summary>
            Occurs when the BorderColor property has changed.
            </summary>
    </member>
    <member name="E:C1.Win.C1Input.C1TextBox.VisualStyleChanged">
      <summary>
            Occurs when the VisualStyle property has changed.
            </summary>
    </member>
    <member name="E:C1.Win.C1Input.C1TextBox.CultureInfoSetup">
      <summary>
            CultureInfo can be set up (on startup) or has been changed.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1TextBox.OnCultureInfoSetup(C1.Win.C1Input.CultureInfoSetupEventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="E:C1.Win.C1Input.C1TextBox.FormatError">
      <summary>
            Occurs when the control receives data that cannot be formatted according to the current format and edit mask settings.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1TextBox.OnFormatError(C1.Win.C1Input.FormatErrorEventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="E:C1.Win.C1Input.C1TextBox.Formatting">
      <summary>
            Formatting the value programmatically.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1TextBox.OnFormatting(C1.Win.C1Input.FormatEventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="E:C1.Win.C1Input.C1TextBox.Formatted">
      <summary>
            Occurs after the value has been formatted.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1TextBox.OnFormatted(C1.Win.C1Input.FormatEventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="E:C1.Win.C1Input.C1TextBox.Parsing">
      <summary>
            Programmatic parsing of the input string.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1TextBox.OnParsing(C1.Win.C1Input.ParseEventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="E:C1.Win.C1Input.C1TextBox.Parsed">
      <summary>
            Occurs after the input string value has been converted to the DataType.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1TextBox.OnParsed(C1.Win.C1Input.ParseEventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="E:C1.Win.C1Input.C1TextBox.PreValidating">
      <summary>
            Programmatic input string validation.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1TextBox.OnPreValidating(C1.Win.C1Input.PreValidationEventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="E:C1.Win.C1Input.C1TextBox.PreValidated">
      <summary>
            Occurs after the input string value has been validated.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1TextBox.OnPreValidated(C1.Win.C1Input.PreValidationEventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="E:C1.Win.C1Input.C1TextBox.PostValidating">
      <summary>
            Programmatic typed value validation.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1TextBox.OnPostValidating(C1.Win.C1Input.PostValidationEventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="E:C1.Win.C1Input.C1TextBox.PostValidated">
      <summary>
            Occurs after the typed value has been validated
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1TextBox.OnPostValidated(C1.Win.C1Input.PostValidationEventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="E:C1.Win.C1Input.C1TextBox.DataTypeChanged">
      <summary>
            Occurs when the DataType property changes.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1TextBox.OnDataTypeChanged(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="E:C1.Win.C1Input.C1TextBox.ValueChanged">
      <summary>
            Occurs when the Value changes.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1TextBox.OnValueChanged(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="E:C1.Win.C1Input.C1TextBox.ValidationError">
      <summary>
            Error occurred while parsing or validating the input string.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1TextBox.OnValidationError(C1.Win.C1Input.ValidationErrorEventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="E:C1.Win.C1Input.C1TextBox.BindingFormatting">
      <summary>
            Occurs when Value is retrieved from the data source.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1TextBox.OnBindingFormatting(System.Windows.Forms.ConvertEventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="E:C1.Win.C1Input.C1TextBox.BindingParsing">
      <summary>
            Occurs when Value is stored in the data source.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1TextBox.OnBindingParsing(System.Windows.Forms.ConvertEventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="E:C1.Win.C1Input.C1TextBox.VerticalAlignChanged">
      <summary>
            Occurs when the value of the VerticalAlign property has changed.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1TextBox.OnVerticalAlignChanged(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="E:C1.Win.C1Input.C1TextBox.MarginsChanged">
      <summary>
            Occurs when the Margins property or one of the margins has changed.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1TextBox.OnMarginsChanged(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="E:C1.Win.C1Input.C1TextBox.InvalidInput">
      <summary>
              Occurs when invalid character is in input.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1TextBox.OnModifiedChanged(System.EventArgs)">
      <summary>
            Raises the ModifiedChanged event.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1TextBox.OnBorderColorChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:C1.Win.C1Input.C1TextBox.BorderColorChanged" /> event.
            </summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
      <remarks>
        <para>Raising an event invokes the event handler through a delegate. </para>
        <para>The <b>OnBorderColorChanged</b> method also allows derived classes to handle the event without attaching a delegate. 
            This is the preferred technique for handling the event in a derived class.</para>
        <para>
          <b>Notes to Inheritors.</b> When overriding <b>OnBorderColorChanged</b> in a derived class, 
            be sure to call the base class's <b>OnBorderColorChanged</b> method so that registered delegates receive the event. 
            </para>
      </remarks>
    </member>
    <member name="M:C1.Win.C1Input.C1TextBox.ResetText">
      <summary>
            Updates the control's Text with the current Value.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.C1TextBox.m_c1embedded">
      <summary>
            This member is for internal use only.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.C1TextBox.m_c1embedEndOnSideArrows">
      <summary>
            This member is for internal use only.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.C1TextBox.OnParentChanged(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="P:C1.Win.C1Input.C1TextBox.DefaultThemeRootPath">
      <summary>
            Default path for the control in xml theme file.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.CharType">
      <summary>
              Defines the category of a Unicode character.  
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.CharType.OtherChar">
      <summary>
              Indicates that the character is not of a particular category.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.CharType.Control">
      <summary>
              Indicates that the character is a control code.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.CharType.Numeric">
      <summary>
              Indicates that the character is a numeric digit.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.CharType.MathSymbol">
      <summary>
              Indicates that the character is a mathematical symbol.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.CharType.Symbol">
      <summary>
              Indicates that the character is a symbol.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.CharType.Punctuation">
      <summary>
              Indicates that the character is a punctuation. ( Open &amp; Close )
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.CharType.Space">
      <summary>
              Indicates that the character is a space character.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.CharType.UpperCase">
      <summary>
              Indicates that the character is an upper case letter.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.CharType.LowerCase">
      <summary>
              Indicates that the character is a lower case letter.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.CharType.Katakana">
      <summary>
              Indicates that the character is a Japanese Katakana character.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.CharType.Hiragana">
      <summary>
              Indicates that the character is a Japanese Hiragana character.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.CharType.FarEastPunctation">
      <summary>
              Indicates that the character is a CJK punctuation.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.CharType.Hangul">
      <summary>
              Indicates that the character is a Hangal character.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.CharType.FullWidth">
      <summary>
              Indicates that the character is of full width.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.CharHelper">
      <summary>
            Provides a set of static methods to work with Japanese encodings.
            </summary>
      <example>
            Shows how to use <see cref="T:C1.Win.C1Input.CharHelper" /> in <see cref="E:System.Windows.Forms.Control.KeyPress" /> event handler for conditioning filtering inputs.
            
            <code>
            		private void c1TextBox1_KeyPress(object sender, KeyPressEventArgs e)
                    {
                        if (CharHelper.IsKatakana(e.KeyChar))
                           e.KeyChar = CharHelper.ToHiragana(e.KeyChar);
                    } 
            </code></example>
    </member>
    <member name="F:C1.Win.C1Input.CharHelper.Null">
      <summary>
             Defines the Null char.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.CharHelper.Backspace">
      <summary>
              Defines the control char: Backspace
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.CharHelper.Tab">
      <summary>
              Defines the control char: Tab.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.CharHelper.Space">
      <summary>
              Defines the control char: Space.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.CharHelper.MinValue">
      <summary>
              Represents the smallest possible value of a Char. 
              This field is constant.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.CharHelper.MaxValue">
      <summary>
              Represents the largest possible value of a Char. 
              This field is constant.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.CharHelper.GetCharType(System.Char)">
      <summary>
              Retrieves the type of character.
            </summary>
      <param name="c">A Unicode character.</param>
      <returns>
              A CharType representing the type of character of c.
            </returns>
    </member>
    <member name="M:C1.Win.C1Input.CharHelper.IsCharOfType(System.Char,C1.Win.C1Input.CharType)">
      <summary>
              Determines whether the specified character is of the
              specified type.
            </summary>
      <param name="c">A Unicode character.</param>
      <param name="type">A CharType type.</param>
      <returns>
              true if specified c and type matches the type of the
              character; otherwise false.
            </returns>
    </member>
    <member name="M:C1.Win.C1Input.CharHelper.IsMultiWidth(System.Char)">
      <summary>
              Indicates whether the specified Unicode character is 
              categorized as a multi-width character.
            </summary>
      <param name="c">A Unicode character.</param>
      <returns>
              true if c is a multi-width character; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Win.C1Input.CharHelper.IsMultiWidth(System.String,System.Int32)">
      <summary>
              Indicates whether the character at the specified position 
              in a specified string is categorized as a multi-width 
              character. 
            </summary>
      <param name="s">A string.</param>
      <param name="index">The character position in s.</param>
      <returns>
              true if the character at position index in s is a multi-width 
              character; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Win.C1Input.CharHelper.IsFullWidth(System.Char)">
      <summary>
              Indicates whether the specified Unicode character is a 
              full width character. Usually CJK characters are considers 
              as full widths.
            </summary>
      <param name="c">A Unicode character.</param>
      <returns>
              true if c is a full width character; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Win.C1Input.CharHelper.IsFullWidth(System.String,System.Int32)">
      <summary>
              Indicates whether the character at the specified position 
              in the specified string is a full width character. Usually 
              CJK characters are considers as full widths.
            </summary>
      <param name="s">A string.</param>
      <param name="index">The character position in s.</param>
      <returns>
              true if the character at position index in s is a full width 
              character; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Win.C1Input.CharHelper.IsOther(System.Char)">
      <summary>
              Indicates whether a Unicode character doesn't belong to
              any specific letter.
            </summary>
      <param name="c">A Unicode character.</param>
      <returns>
              true if c is doesn't a Katakana character; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Win.C1Input.CharHelper.IsControl(System.Char)">
      <summary>
              Indicates whether the specified Unicode character is 
              categorized as a control code.
            </summary>
      <param name="c">A Unicode character.</param>
      <returns>
              true if c is a control code; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Win.C1Input.CharHelper.IsControl(System.String,System.Int32)">
      <summary>
              Indicates whether the character at the specified position 
              in the specified string is a control code.
            </summary>
      <param name="s">A string.</param>
      <param name="index">The character position in s.</param>
      <returns>
              true if the character at position index in s is a control 
              code; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Win.C1Input.CharHelper.IsKatakana(System.Char)">
      <summary>
              Indicates whether the specified Unicode character is 
              categorized as a Katakana letter.
            </summary>
      <param name="c">A Unicode character.</param>
      <returns>
              true if c is a Katakana character; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Win.C1Input.CharHelper.IsKatakana(System.String,System.Int32)">
      <summary>
              Indicates whether the character at the specified position 
              in the specified string is a Katakana character.
            </summary>
      <param name="s">A string.</param>
      <param name="index">The character position in s.</param>
      <returns>
              true if the character at position index in s is a Katakana 
              character; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Win.C1Input.CharHelper.IsHiragana(System.Char)">
      <summary>
              Indicates whether the specified Unicode character is 
              categorized as a Hiragana letter.
            </summary>
      <param name="c">A Unicode character.</param>
      <returns>
              true if c is a Hiragana character; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Win.C1Input.CharHelper.IsHiragana(System.String,System.Int32)">
      <summary>
              Indicates whether the character at the specified position 
              in the specified string is a Hiragana character.
            </summary>
      <param name="s">A string.</param>
      <param name="index">The character position in s.</param>
      <returns>
              true if the character at position index in s is a Hiragana 
              character; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Win.C1Input.CharHelper.IsDigit(System.Char)">
      <summary>
              Indicates whether the specified Unicode character is 
              categorized as a Numeric digit.
            </summary>
      <param name="c">A Unicode character.</param>
      <returns>
              true if c is a Numeric character; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Win.C1Input.CharHelper.IsDigit(System.String,System.Int32)">
      <summary>
              Indicates whether the character at the specified position 
              in the specified string is a Numeric digit.
            </summary>
      <param name="s">A string.</param>
      <param name="index">The character position in s.</param>
      <returns>
              true if the character at position index in s is a Numeric 
              digit; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Win.C1Input.CharHelper.IsPunctuation(System.Char)">
      <summary>
              Indicates whether the specified Unicode character is 
              categorized as a Punctuation character.
            </summary>
      <param name="c">A Unicode character.</param>
      <returns>
              true if c is a Punctuation character; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Win.C1Input.CharHelper.IsPunctuation(System.String,System.Int32)">
      <summary>
              Indicates whether the character at the specified position 
              in the specified string is a Punctuation character.
            </summary>
      <param name="s">A string.</param>
      <param name="index">The character position in s.</param>
      <returns>
              true if the character at position index in s is a Punctuation 
              character; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Win.C1Input.CharHelper.IsMathSymbol(System.Char)">
      <summary>
              Indicates whether the specified Unicode character is 
              categorized as a mathematical symbol.
            </summary>
      <param name="c">A Unicode character.</param>
      <returns>
              true if c is a mathematical character; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Win.C1Input.CharHelper.IsMathSymbol(System.String,System.Int32)">
      <summary>
              Indicates whether the character at the specified position 
              in the specified string is a mathematical symbol.
            </summary>
      <param name="s">A string.</param>
      <param name="index">The character position in s.</param>
      <returns>
              true if the character at position index in s is a mathematical 
              character; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Win.C1Input.CharHelper.IsSymbol(System.Char)">
      <summary>
              Indicates whether the specified Unicode character is 
              categorized as a Symbol character.
            </summary>
      <param name="c">A Unicode character.</param>
      <returns>
              true if c is a Symbol character; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Win.C1Input.CharHelper.IsSymbol(System.String,System.Int32)">
      <summary>
              Indicates whether the character at the specified position 
              in the specified string is a Symbol character.
            </summary>
      <param name="s">A string.</param>
      <param name="index">The character position in s.</param>
      <returns>
              true if the character at position index in s is a Symbol 
              character; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Win.C1Input.CharHelper.IsLower(System.Char)">
      <summary>
              Indicates whether the specified Unicode character is 
              categorized as a Lowercase letter.
            </summary>
      <param name="c">A Unicode character.</param>
      <returns>
              true if c is a Lowercase letter; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Win.C1Input.CharHelper.IsLower(System.String,System.Int32)">
      <summary>
              Indicates whether the character at the specified position 
              in the specified string is a Lowercase letter.
            </summary>
      <param name="s">A string.</param>
      <param name="index">The character position in s.</param>
      <returns>
              true if the character at position index in s is a Lowercase 
              letter; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Win.C1Input.CharHelper.IsUpper(System.Char)">
      <summary>
              Indicates whether the specified Unicode character is 
              categorized as a Uppercase letter.
            </summary>
      <param name="c">A Unicode character.</param>
      <returns>
              true if c is a Uppercase letter; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Win.C1Input.CharHelper.IsUpper(System.String,System.Int32)">
      <summary>
              Indicates whether the character at the specified position 
              in the specified string is a Uppercase letter.
            </summary>
      <param name="s">A string.</param>
      <param name="index">The character position in s.</param>
      <returns>
              true if the character at position index in s is a Uppercase 
              letter; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Win.C1Input.CharHelper.IsDigitOrSymbol(System.Char)">
      <summary>
              Indicates whether the specified Unicode character is 
              categorized as a Numeric or a Math symbol.
            </summary>
      <param name="c">A Unicode character.</param>
      <returns>
              true if c is a numeric or symbol character; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Win.C1Input.CharHelper.IsDigitOrSymbol(System.String,System.Int32)">
      <summary>
              Indicates whether the character at the specified position 
              in the specified string is a Numeric or a Math symbol.
            </summary>
      <param name="s">A string.</param>
      <param name="index">The character position in s.</param>
      <returns>
              true if the character at position index in s is a Numeric 
              or a Math symbol; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Win.C1Input.CharHelper.IsAlphabet(System.Char)">
      <summary>
              Indicates whether the specified Unicode character is 
              categorized as a alphabet letter.
            </summary>
      <param name="c">A Unicode character.</param>
      <returns>
              true if c is a alphabet letter; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Win.C1Input.CharHelper.IsAlphabet(System.String,System.Int32)">
      <summary>
              Indicates whether the character at the specified position 
              in the specified string is a alphabet letter.
            </summary>
      <param name="s">A string.</param>
      <param name="index">The character position in s.</param>
      <returns>
              true if the character at position index in s is a alphabet 
              letter; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Win.C1Input.CharHelper.IsAlphaOrDigit(System.Char)">
      <summary>
              Indicates whether the specified Unicode character is 
              categorized as a alphabet letter or digit.
            </summary>
      <param name="c">A Unicode character.</param>
      <returns>
              true if c is a alphabet letter or digit; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Win.C1Input.CharHelper.IsAlphaOrDigit(System.String,System.Int32)">
      <summary>
              Indicates whether the character at the specified position 
              in the specified string is a alphabet letter or digit.
            </summary>
      <param name="s">A string.</param>
      <param name="index">The character position in s.</param>
      <returns>
              true if the character at position index in s is a alphabet 
              letter or digit; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Win.C1Input.CharHelper.IsUpperKana(System.Char)">
      <summary>
              Indicates whether the specified Unicode character is 
              categorized as a upper (capital) case kana.
            </summary>
      <param name="c">A Unicode character.</param>
      <returns>
              true if c is a kana upper (capital) case; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Win.C1Input.CharHelper.IsBigKana(System.Char)">
      <summary>
              Indicates whether the specified Unicode character is 
              categorized as a big (capital) case kana.
            </summary>
      <param name="c">A Unicode character.</param>
      <returns>
              true if c is a kana upper (capital) case; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Win.C1Input.CharHelper.IsLowerKana(System.Char)">
      <summary>
              Indicates whether the specified Unicode character is 
              categorized as a lower (normal) case kana.
            </summary>
      <param name="c">A Unicode character.</param>
      <returns>
              true if c is a kana lower (normal) case; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Win.C1Input.CharHelper.HasLowerKana(System.Char)">
      <summary>
              Determines whether the related kana has a related lower case.
            </summary>
      <param name="c">A Unicode character.</param>
      <returns>
              true if c has a related lower case kana; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Win.C1Input.CharHelper.ToFullWidth(System.Char)">
      <summary>
              Transforms the specified character to a full width character
              if possible. Ranges are Latin basic, Katakana and Hangul 
              characters.
            </summary>
      <param name="c">A Unicode character.</param>
      <returns>
              Full width character of c, otherwise original character
              returned.
            </returns>
    </member>
    <member name="M:C1.Win.C1Input.CharHelper.ToFullWidth(System.Boolean@,System.Char[])">
      <summary>
              Tansforms the specified character to a full width character
              if possible. This method differs from the other where it 
              takes on an array of characters. In FarEast country there 
              are times when multiple half width characters make a one
              full width character.
            </summary>
      <param name="c">An array of characters.</param>
      <param name="processedAll">
              When the soundex character is processed a <b>true</b> is 
              returned; otherwise, a <b>false</b> returned.
            </param>
      <returns>
              Full width character of c, otherwise the original character
              is returned.
            </returns>
    </member>
    <member name="M:C1.Win.C1Input.CharHelper.ToHalfWidth(System.Char)">
      <summary>
              Converts the value of a Unicode character to it's half
              width equivalent. Ranges are Latin basic, Katakana and 
              Hangul characters.
            </summary>
      <param name="c">A Unicode character.</param>
      <returns>
        <para>The half width equivalent of c.</para>
        <para>- or -</para>
        <para>
                 The unchanged value of c, if c is already a half
                 width or not a multi-width character.
              </para>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.CharHelper.ToHalfWidthEx(System.Char)">
      <summary>
              Transforms the specified character to a half width character
              if possible. This method differs from the ToHalfWidth method
              where it tries to return the accurate half width character - 
              which most likely happens in FarEast countries.
            </summary>
      <param name="c">A Unicode character.</param>
      <returns>
              A character array representing c in half width form. In most
              cases this array will have only one element.
            </returns>
    </member>
    <member name="M:C1.Win.C1Input.CharHelper.ToKatakana(System.Char)">
      <summary>
              Converts the value of a Unicode character to it's 
              "Katakana" equivalent. Special character handling 
              for the Japanese language.
            </summary>
      <param name="c">A Unicode character.</param>
      <returns>
        <para>The Katakana equivalent of c.</para>
        <para>- or -</para>
        <para>
                 The unchanged value of c, if c is already a 
                 Katakana or not Hiragana.
              </para>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.CharHelper.ToKatakana(System.Char,System.Boolean)">
      <summary>
              Converts the value of a Unicode character to it's 
              "Katakana" equivalent with an optional setting of
              full or half width. Special character handling for
              the Japanese language 
            </summary>
      <param name="c">
              A Unicode character.
            </param>
      <param name="fullWidth">
        <b>true</b> to return a full width Katakana, and 
              <b>false</b> to return a half width Katakana.
            </param>
      <returns>
      </returns>
      <returns>
        <para>The Katakana equivalent of c.</para>
        <para>- or -</para>
        <para>
                 The unchanged value of c, if c is already a 
                 Katakana or not Hiragana.
              </para>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.CharHelper.ToHiragana(System.Char)">
      <summary>
              Converts the value of a Unicode character to it's 
              "Hiragana" equivalent. Special character handling 
              for the Japanese language.
            </summary>
      <param name="c">A Unicode character.</param>
      <returns>
        <para>The Hiragana equivalent of c.</para>
        <para>- or -</para>
        <para>
                 The unchanged value of c, if c is already a 
                 Hiragana or not Katakana.
              </para>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.CharHelper.ToAnsi(System.Char)">
      <summary>
              Converts the value of a Unicode character to it's
              ANSI equivalent.
            </summary>
      <param name="c">A Unicode character.</param>
      <returns>
              An Ansi character equivalent of c in the current culture.
            </returns>
      <remarks>
              Encodes the specified Unicode character to an ANSI
              character using the current culture.
            </remarks>
    </member>
    <member name="M:C1.Win.C1Input.CharHelper.ToAnsi(System.Char,System.Globalization.CultureInfo)">
      <summary>
              Converts the value of a Unicode character to it's
              ANSI equivalent using the specified culture information.
            </summary>
      <param name="c">A Unicode character.</param>
      <param name="culture">
              A CultureInfo object. If a null reference is passed, the 
              current culture is assumed. 
            </param>
      <returns>
              An Ansi character equivalent of c using the specified culture.
            </returns>
    </member>
    <member name="M:C1.Win.C1Input.CharHelper.ToSJIS(System.Char)">
      <summary>
              Converts the value of a JIS (Japanese encoding) character
              to it's Shift-JIS equivalent.
            </summary>
      <param name="c">A JIS character.</param>
      <returns>
        <para>The Shift-JIS equivalent of c.</para>
        <para>- or -</para>
        <para>
                The unchanged value of c, if c is not a full width
            	character.
              </para>
      </returns>
      <remarks>
        <newpara>
                Converts a JIS character to it's equivalent Shift-JIS
                character - used in the Japanese language.
              </newpara>
        <newpara>
                Please note that this method does not take a Unicode
                character as it's parameter - use the character value
                returned by the "ToJIS" method.
              </newpara>
      </remarks>
    </member>
    <member name="M:C1.Win.C1Input.CharHelper.ToJIS(System.Char)">
      <summary>
              Converts the value of a Shift-JIS (Japanese encoding) 
              character to it's JIS equivalent.
            </summary>
      <param name="c">A Shift-JIS character.</param>
      <returns>
        <para>The JIS equivalent of c.</para>
        <para>- or -</para>
        <para>
                The unchanged value of c, if c is not a full width
            	character.
              </para>
      </returns>
      <remarks>
        <newpara>
                Converts a Shift-JIS character to it's equivalent JIS
                character - used in the Japanese language.
              </newpara>
        <newpara>
                Please note that this method does not take a Unicode
                character as it's parameter - use the character value
                returned by the "ToSJIS" method.
              </newpara>
      </remarks>
    </member>
    <member name="M:C1.Win.C1Input.CharHelper.FromAnsi(System.Char)">
      <summary>
              Converts the value of an ANSI character to it's Unicode
              equivalent.
            </summary>
      <param name="c">An ANSI character.</param>
      <returns>
              A Unicode character equivalent of c.
            </returns>
    </member>
    <member name="M:C1.Win.C1Input.CharHelper.FromAnsi(System.Char,System.Globalization.CultureInfo)">
      <summary>
              Converts the value of a ANSI character to it's Unicode
              equivalent using the specified culture information.
            </summary>
      <param name="c">An ANSI character.</param>
      <param name="culture">
              A CultureInfo object. If a null reference is passed, the 
              current culture is assumed. 
            </param>
      <returns>
              An Unicode character equivalent of c using the specified culture.
            </returns>
    </member>
    <member name="M:C1.Win.C1Input.CharHelper.ToUpperKana(System.Char)">
      <summary>
              Converts an lower (normal) case kana into a upper (capital) case.
            </summary>
      <param name="c">A Unicode character.</param>
      <returns>The equivalent kana upper case character.</returns>
    </member>
    <member name="M:C1.Win.C1Input.CharHelper.ToLowerKana(System.Char)">
      <summary>
              Converts an upper (capital) case kana into a lower case (normal).
            </summary>
      <param name="c">A Unicode character.</param>
      <returns>The equivalent kana lower case character.</returns>
    </member>
    <member name="T:C1.Win.C1Input.DropDownCalendar">
      <summary>
            Represents drop down calendar form.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DropDownCalendar.#ctor">
      <summary>
            Creates a new instance of <see cref="T:C1.Win.C1Input.DropDownCalendar" /> class.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DropDownCalendar.Calendar">
      <summary>
            Calendar.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DropDownCalendar.OnPostChanges(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.DropDownCalendar.Dispose(System.Boolean)">
      <summary>
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
    </member>
    <member name="T:C1.Win.C1Input.DropDownCalculator">
      <summary>
            Represents the class of dropdown calculator form.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DropDownCalculator.#ctor">
      <summary>
            Initializes a new instance of the DropDownCalculator class.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DropDownCalculator.Dispose(System.Boolean)">
      <summary>
            Releases the resources used by the DropDownCalculator.
            </summary>
      <param name="disposing">
        <b>true</b> to release both managed and unmanaged resources; <b>false</b> to release only unmanaged resources.</param>
    </member>
    <member name="P:C1.Win.C1Input.DropDownCalculator.Calculator">
      <summary>
            The calculator used in a DropDownCalculator form.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.DropDownCalculator.OnPostChanges(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.DropDownCalculator.OnCancelChanges(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.DropDownCalculator.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.DropDownCalculator.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.DropDownCalculator.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.DropDownCalculator.OnHandleCreated(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.DropDownCalculator.OnVisibleChanged(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.DropDownCalculator.OnOpen(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.DropDownCalculator.WndProc(System.Windows.Forms.Message@)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="m">
      </param>
    </member>
    <member name="T:C1.Win.C1Input.ErrorActionEnum">
      <summary>
            Used by ErrorInfo.ErrorAction property.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.ErrorActionEnum.None">
      <summary>
            Control value remains as the user typed it.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.ErrorActionEnum.SetValueOnError">
      <summary>
            Control value is set to ValueOnError.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.ErrorActionEnum.ResetValue">
      <summary>
            Control value is reset to the value control had before entering edit mode.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.ErrorActionEnum.ThrowException">
      <summary>
            Control value is reset to the value control had before entering edit mode, and an exception is thrown.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.ErrorInfo">
      <summary>
            Settings affecting error handling.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.ErrorInfo.BeepOnError">
      <summary>
            If True, the control beeps signaling an error. Default: False.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.ErrorInfo.ShowErrorMessage">
      <summary>
            If True (default), the standard error message is shown.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.ErrorInfo.ErrorMessage">
      <summary>
            Error message shown in the standard message box and/or in the exception.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.ErrorInfo.ErrorMessageCaption">
      <summary>
            The text to display in the title bar of the error message box.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.ErrorInfo.ErrorAction">
      <summary>
            Enumerated value that determines what action is performed on the control value when an error occurs.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.ErrorInfo.CanLoseFocus">
      <summary>
            Determines whether or not the control is allowed to lose focus after the error. Works only if the ErrorAction is set to SetValueOnError or ResetValue.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.ErrorInfo.ValueOnError">
      <summary>
            Value used to reset the control if ErrorAction = SetValueOnError.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.ErrorInfo.ShouldSerializeValueOnError">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:C1.Win.C1Input.ErrorInfo.ValueOnErrorIsDbNull">
      <summary>
            Boolean property used to set ValueOnError to DbNull (only necessary at design time).
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.ErrorInfo.ErrorProvider">
      <summary>
            Gets or sets an ErrorProvider object used to indicate error state of the control.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.ErrorInfo.C1SuperErrorProvider">
      <summary>
            Gets or sets an C1SuperErrorProvider object used to indicate error state of the control.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.ErrorInfo.InnerException">
      <summary>
            Run-time-only read-only property returning the original exception object that caused the error.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.ErrorInfo.DataType">
      <summary>
            Type of the Value property.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.ErrorInfo.Reset">
      <summary>
            Resets whole ErrorInfo property in base control
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.FormatErrorEventHandler">
      <summary>
            Represents the method that handles a FormatError event.
            </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A FormatErrorEventArgs object that contains the event data.</param>
    </member>
    <member name="T:C1.Win.C1Input.FormatErrorEventArgs">
      <summary>
            Provides data for a FormatError event.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.FormatErrorEventArgs.Value">
      <summary>
            Source value for formatting.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.FormatErrorEventArgs.Target">
      <summary>
            Formatting target (ForEdit or ForDisplay).
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.FormatErrorEventArgs.Text">
      <summary>
            The text to show in the control. Your code in FormatError event can set this argument to a text
            you want to show in the control in case of a formatting error.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.FormatErrorEventArgs.FormatInfo">
      <summary>
            FormatInfo object that fired the event.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.FormatErrorEventArgs.ErrorMessage">
      <summary>
            Error description shown as the tooltip in the ErrorProvider icon, if ErrorInfo.ErrorProvider property is set.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.ErrorReasonEnum">
      <summary>
            Used by ValidationErrorEventArgs.Reason and ValidationException.Reason properties.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.ErrorReasonEnum.NoErrors">
      <summary>
            All validation checks were successful.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.ErrorReasonEnum.EditMaskError">
      <summary>
            Value does not match the edit mask.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.ErrorReasonEnum.PreValidationError">
      <summary>
            Value was rejected before parsing (in PreValidation).
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.ErrorReasonEnum.ParsingError">
      <summary>
            Parsing failed.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.ErrorReasonEnum.PostValidationError">
      <summary>
            Value rejected after parsing (in PostValidation).
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.ErrorReasonEnum.DataSourceError">
      <summary>
            Value rejected by the data source, setting the data source field to that value failed.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.ValidationErrorEventHandler">
      <summary>
            Represents the method that handles a ValidationError event.
            </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A ValidationErrorEventArgs object that contains the event data.</param>
    </member>
    <member name="T:C1.Win.C1Input.ValidationErrorEventArgs">
      <summary>
            Provides data for a ValidationError event.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.ValidationErrorEventArgs.Reason">
      <summary>
            Validation phase on which the error has been detected.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.ValidationErrorEventArgs.Text">
      <summary>
            The input text that caused the error.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.ValidationErrorEventArgs.Value">
      <summary>
            If Reason = ErrorReasonEnum.PostValidationError, this is the value that caused the error. Otherwise, this property is null or DBNull.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.ValidationErrorEventArgs.ErrorInfo">
      <summary>
            Error information.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.ValidationException">
      <summary>
            An exception that follows the ValidationError event if ValidationErrorEventArgs.ErrorInfo is set to ErrorActionEnum.ThrowException.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.ValidationException.Sender">
      <summary>
            Control that fired the exception.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.ValidationException.Reason">
      <summary>
            Validation phase on which the error has been detected.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.ValidationException.Text">
      <summary>
            The input text that caused the error.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.ValidationException.Value">
      <summary>
            The typed value that caused the error.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.DataSourceException">
      <summary>
            An exception thrown by C1Input when a control's Value property is set, but the new value is rejected by the data source, 
            setting the data field to that value is cancelled by the data source throwing an exception.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DataSourceException.Sender">
      <summary>
            Control that caused the exception.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.DataSourceException.Value">
      <summary>
            Current value in the control that caused the exception.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.FormatInfoInheritFlags">
      <summary>
            Used by FormatInfo.Inherit property.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.FormatInfoInheritFlags.None">
      <summary>
            Indicates that none of the properties are inherited from the control.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.FormatInfoInheritFlags.FormatType">
      <summary>
            Indicates that the FormatType property is inherited from the control.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.FormatInfoInheritFlags.CustomFormat">
      <summary>
            Indicates that the CustomFormat property is inherited from the control.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.FormatInfoInheritFlags.NullText">
      <summary>
            Indicates that the NullText property is inherited from the control.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.FormatInfoInheritFlags.EmptyAsNull">
      <summary>
            Indicates that the EmptyAsNull property is inherited from the control.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.FormatInfoInheritFlags.TrimStart">
      <summary>
            Indicates that the TrimStart property is inherited from the control.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.FormatInfoInheritFlags.TrimEnd">
      <summary>
            Indicates that the TrimEnd property is inherited from the control.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.FormatInfoInheritFlags.CalendarType">
      <summary>
            Indicates that the CalendarType property is inherited from the control.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.FormatInfoInheritFlags.All">
      <summary>
            Indicates that values of FormatType, CustomFormat, NullText, EmptyAsNull, TrimStart, TrimEnd, CalendarType properties are inherited from the control.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.FormatTargetEnum">
      <summary>
            Used by FormatEventArgs.Target property.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.FormatTargetEnum.ForDisplay">
      <summary>
            Formatting (or Formatted) event was called while the control is not in edit mode.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.FormatTargetEnum.ForEdit">
      <summary>
            Formatting (or Formatted) event was called while the control is in edit mode.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.FormatEventHandler">
      <summary>
            Represents the method that handles Formatting or Formatted events.
            </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A FormatEventArgs object that contains the event data</param>
    </member>
    <member name="T:C1.Win.C1Input.FormatEventArgs">
      <summary>
            Provides data for Formatting or Formatted events.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.FormatEventArgs.Value">
      <summary>
            Source value for formatting.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.FormatEventArgs.Target">
      <summary>
            Formatting target (ForEdit or ForDisplay).
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.FormatEventArgs.Text">
      <summary>
            The out parameter for the resulting string (in Formatting), or the in parameter for the formatted string (in Formatted).
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.FormatEventArgs.FormatInfo">
      <summary>
            FormatInfo object that fired the event.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.FormatEventArgs.ErrorMessage">
      <summary>
            The out parameter for specifying error description if Succeeded is set to False.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.FormatEventArgs.Succeeded">
      <summary>
            Formatting result (assigned in the event code in Formatting). Default: True
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.FormatInfo">
      <summary>
            Settings for data formatting, converting data to string.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.FormatInfo.Inherit">
      <summary>
            Manages inheritance of the FormatInfo properties from the host control properties.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.FormatInfo.FormatType">
      <summary>
            Enumeration value determining the formatting method, including standard .NET format specifiers, custom and programmatic formatting.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.FormatInfo.ShouldSerializeFormatType">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.FormatInfo.ResetFormatType">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.FormatInfo.CalendarType">
      <summary>
            Calendar, used to format date.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.FormatInfo.CustomFormat">
      <summary>
            Custom format specifier used if FormatType = FormatTypeEnum.CustomFormat.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.FormatInfo.ShouldSerializeCustomFormat">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.FormatInfo.ResetCustomFormat">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.FormatInfo.NullText">
      <summary>
            String representing a DbNull value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.FormatInfo.ShouldSerializeNullText">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.FormatInfo.ResetNullText">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.FormatInfo.EmptyAsNull">
      <summary>
            If True, empty strings are interpreted as null values (DbNull).
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.FormatInfo.ShouldSerializeEmptyAsNull">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.FormatInfo.ResetEmptyAsNull">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.FormatInfo.TrimStart">
      <summary>
            If True, leading spaces are removed.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.FormatInfo.ShouldSerializeTrimStart">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.FormatInfo.ResetTrimStart">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.FormatInfo.TrimEnd">
      <summary>
            If True, trailing spaces are removed.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.FormatInfo.ShouldSerializeTrimEnd">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.FormatInfo.ResetTrimEnd">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.FormatInfo.Reset">
      <summary>
            Resets whole FormatInfo property of base control
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.FormatInfo.Format(System.Object)">
      <summary>
            Formats a value, converts it to a string.
            </summary>
      <param name="value">Typed value to convert to a string</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.FormatInfo.Format(System.Object,C1.Win.C1Input.FormatTypeEnum,System.Globalization.CultureInfo)">
      <summary>
            Formats a value, converts it to a string.
            </summary>
      <param name="value">Typed value to convert to a string.</param>
      <param name="formatType">Format method or specifier used for conversion.</param>
      <param name="culture">Culture used for conversion.</param>
      <returns>
      </returns>
    </member>
    <member name="T:C1.Win.C1Input.MaskInfoInheritFlags">
      <summary>
            Used by MaskInfo.Inherit property.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.MaskInfoInheritFlags.None">
      <summary>
            Indicates that none of the properties are inherited from the control.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.MaskInfoInheritFlags.CaseSensitive">
      <summary>
            Indicates that the CaseSensitive property is inherited from the control.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.MaskInfoInheritFlags.EmptyAsNull">
      <summary>
            Indicates that the EmptyAsNull property is inherited from the control.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.MaskInfoInheritFlags.ErrorMessage">
      <summary>
            Indicates that the ErrorMessage property is inherited from the control.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.MaskInfoInheritFlags.All">
      <summary>
            Indicates that all properties are inherited from the control.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.ShowLiteralsEnum">
      <summary>
            Used by MaskInfo.ShowLiterals property.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.ShowLiteralsEnum.ShowAlways">
      <summary>
            The whole mask is shown when editing begins (empty spaces filled with PromptChar).
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.ShowLiteralsEnum.FreeFormatEntry">
      <summary>
            The mask is validated on exit (no literals or prompt chars displayed automatically).
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.ShowLiteralsEnum.WhenNextStarted">
      <summary>
            The literals will be inserted after the user enters the first character of the field that follows the literals.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.ShowLiteralsEnum.WhenPrevFilled">
      <summary>
            Literals that follows the input mask will be inserted after the user enters the last character in the current field.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.MaskInfo">
      <summary>
            Contains edit mask settings.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.MaskInfo.EditMask">
      <summary>
            The edit mask string restricting user input.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.MaskInfo.ShouldSerializeEditMask">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:C1.Win.C1Input.MaskInfo.RegexpEditMask">
      <summary>
            A <see cref="T:System.String" /> representing the mask in regular expression style. 
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.MaskInfo.Inherit">
      <summary>
            Manages inheritance of the MaskInfo properties from the host control properties.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.MaskInfo.CaseSensitive">
      <summary>
            True if comparison with mask literals is case-sensitive; otherwise, False.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.MaskInfo.ShouldSerializeCaseSensitive">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.MaskInfo.ResetCaseSensitive">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.MaskInfo.CopyWithLiterals">
      <summary>
            If True, text copied to the clipboard includes literals.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.MaskInfo.EmptyAsNull">
      <summary>
            If True, empty strings are interpreted as null values (DbNull).
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.MaskInfo.ShouldSerializeEmptyAsNull">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.MaskInfo.ResetEmptyAsNull">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.MaskInfo.ErrorMessage">
      <summary>
            Error message shown in the standard message box and/or if an exception occurs.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.MaskInfo.ShouldSerializeErrorMessage">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.MaskInfo.ResetErrorMessage">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.MaskInfo.AutoTabWhenFilled">
      <summary>
            If True, focus automatically moves to the next control when the mask is filled.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.MaskInfo.PromptChar">
      <summary>
            Character displayed on empty mask positions in edit mode.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.MaskInfo.SkipOptional">
      <summary>
            If True (default), optional mask positions are automatically skipped until the first position allowing the typed character.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.MaskInfo.SaveLiterals">
      <summary>
            If True (default), the stored text includes literals.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.MaskInfo.SaveBlanks">
      <summary>
            If True, the stored text includes blank positions as StoredEmptyChar.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.MaskInfo.StoredEmptyChar">
      <summary>
            Character stored in empty mask positions.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.MaskInfo.ShowLiterals">
      <summary>
            Literal display method.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.MaskInfo.CustomPlaceholders">
      <summary>
            The collection of user-defined mask characters.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.MaskInfo.ShouldSerializeCustomPlaceholders">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.MaskInfo.ResetCustomPlaceholders">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.MaskInfo.EditablePositionCount">
      <summary>
            Returns the number of editable positions in the edit mask.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.MaskInfo.Content">
      <summary>
            Text entered by the user without literals (mask literals stripped).
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.MaskInfo.EffectiveText">
      <summary>
            Text in a readable format, with literals and without blanks.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.MaskInfo.StoredContent">
      <summary>
            The stored string obtained from the user input string.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.MaskInfo.IsMaskedMode">
      <summary>
            Returns True if EditMask is non-empty and the control is in edit mode.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.MaskInfo.Reset">
      <summary>
            Resets whole MaskInfo property of base control
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.MaskInfo.ResetContent">
      <summary>
            Resets the text to the string representing a DBNull value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.MaskInfo.GetDisplayText(System.String,System.Boolean)">
      <summary>
            Returns a string formatted for display using edit mask.
            </summary>
      <param name="content">String containing characters entered by the user, including those on optional positions that were left blank (skipped).</param>
      <param name="skipBlanks">If set to True, the result will omit blank positions. If set to False, the resulting text will contain PromptChar on blank positions</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.MaskInfo.GetStoredText(System.String)">
      <summary>
            Returns the string that will be stored in the database, in accordance with current values of SaveLiterals, SaveBlanks and StoredEmptyChar properties.
            </summary>
      <param name="content">String containing characters entered by the user, including those on optional positions that were left blank (skipped).</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.MaskInfo.GetContent(System.String,System.Boolean,System.Boolean,System.Char)">
      <summary>
            Returns the string containing characters entered by the user, including those on optional positions that were left blank (skipped).
            </summary>
      <param name="text">Text to parse.</param>
      <param name="textContainsLiterals">Same as MaskInfo.SaveLiterals property.</param>
      <param name="textContainsBlanks">Same as MaskInfo.SaveBlanks property.</param>
      <param name="blankCharacter">Same as MaskInfo.StoredEmptyChar property</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.MaskInfo.IsValid">
      <summary>
            Returns True if the input string is valid with respect to the edit mask.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:C1.Win.C1Input.CharCategory">
      <summary>
            Defines rules to filter keyboard input.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.CharCategory.SingleByte">
      <summary>
            Only single byte characters are allowed.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.CharCategory.DoubleByte">
      <summary>
            Only double byte characters are allowed.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.CharCategory.Letter">
      <summary>
            Letters allowed.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.CharCategory.Number">
      <summary>
            Numbers are allowed.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.CharCategory.Symbol">
      <summary>
            Symbols are allowed.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.CharCategory.UpperCase">
      <summary>
            Only upper case letters are allowed.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.CharCategory.LowerCase">
      <summary>
            Only lower case letters are allowed.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.CharCategory.Katakana">
      <summary>
            Only katakana is allowed.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.CharCategory.Hiragana">
      <summary>
            Only hiragana is allowed.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.CharCategory.BigKana">
      <summary>
            Only big kana letters are allowed.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.CharCategory.AutoConvert">
      <summary>
            Auto conversion if possible.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.NumericInputKeyFlags">
      <summary>
            Used by C1TextBox.NumericInputKeys property.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NumericInputKeyFlags.None">
      <summary>
            Indicates that none of the Input Keys are used.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NumericInputKeyFlags.F2">
      <summary>
            Indicates that F2 enters negative infinity (-Infinity).
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NumericInputKeyFlags.F3">
      <summary>
            Indicates that F3 enters positive infinity (+Infinity).
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NumericInputKeyFlags.F4">
      <summary>
            Indicates that F4 enters the "not a number" value (NaN).
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NumericInputKeyFlags.F9">
      <summary>
            Indicates that F9 toggles the sign of the displayed number.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NumericInputKeyFlags.Minus">
      <summary>
            Indicates that '-' makes the displayed number negative.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NumericInputKeyFlags.Plus">
      <summary>
            Indicates that '+' makes the displayed number positive.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NumericInputKeyFlags.Decimal">
      <summary>
            Indicates that Decimal key enters a decimal separator regardless of culture settings.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NumericInputKeyFlags.X">
      <summary>
            Indicates that the X key starts entry of the exponent part in scientific-notation numbers.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NumericInputKeyFlags.Standard">
      <summary>
            This value is a combination of the F9, Minus, Plus, Decimal, and X values.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NumericInputKeyFlags.All">
      <summary>
            This value is a combination of all enum values
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.ParseInfoInheritFlags">
      <summary>
            Used by ParseInfo.Inherit property.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.ParseInfoInheritFlags.None">
      <summary>
            Indicates that none of the properties are inherited from the control.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.ParseInfoInheritFlags.CaseSensitive">
      <summary>
            Indicates that the value of the CaseSensitive property is inherited from the control.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.ParseInfoInheritFlags.FormatType">
      <summary>
            Indicates that the value of the FormatType property is inherited from the control.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.ParseInfoInheritFlags.CustomFormat">
      <summary>
            Indicates that the value of the CustomFormat property is inherited from the control.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.ParseInfoInheritFlags.NullText">
      <summary>
            Indicates that the value of the NullText property is inherited from the control.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.ParseInfoInheritFlags.EmptyAsNull">
      <summary>
            Indicates that the value of the EmptyAsNull property is inherited from the control.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.ParseInfoInheritFlags.ErrorMessage">
      <summary>
            Indicates that the value of the ErrorMessage property is inherited from the control.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.ParseInfoInheritFlags.TrimStart">
      <summary>
            Indicates that the value of the TrimStart property is inherited from the control.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.ParseInfoInheritFlags.TrimEnd">
      <summary>
            Indicates that the value of the TrimEnd property is inherited from the control.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.ParseInfoInheritFlags.All">
      <summary>
            Indicates that all properties are inherited from the control.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.NumberStyleFlags">
      <summary>
            Used by ParseInfo.NumberStyle property.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NumberStyleFlags.None">
      <summary>
            Indicates that none of the bit styles are allowed.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NumberStyleFlags.AllowCurrencySymbol">
      <summary>
            Indicates that the numeric string is parsed as currency if it contains a currency symbol; otherwise, it is parsed as a number.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NumberStyleFlags.AllowDecimalPoint">
      <summary>
            Indicates that the numeric string can have a decimal point.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NumberStyleFlags.AllowExponent">
      <summary>
            Indicates that the numeric string can be in exponential notation.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NumberStyleFlags.AllowHexSpecifier">
      <summary>
            Indicates that the numeric string can have notation that signifies that the number is hexadecimal.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NumberStyleFlags.AllowLeadingSign">
      <summary>
            Indicates that the numeric string can have a leading sign.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NumberStyleFlags.AllowLeadingWhite">
      <summary>
            Indicates that a leading white-space character is ignored during parsing.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NumberStyleFlags.AllowParentheses">
      <summary>
            Indicates that the numeric string can have one pair of parentheses enclosing the number.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NumberStyleFlags.AllowThousands">
      <summary>
            Indicates that the numeric string can have group separators.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NumberStyleFlags.AllowTrailingSign">
      <summary>
            Indicates that the numeric string can have a trailing sign.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NumberStyleFlags.AllowTrailingWhite">
      <summary>
            Indicates that trailing white-space character must be ignored during parsing.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NumberStyleFlags.Any">
      <summary>
            Indicates that all the AllowXXX bit styles are used.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NumberStyleFlags.Currency">
      <summary>
            Indicates all styles except AllowExponent and AllowHexSpecifier.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NumberStyleFlags.Float">
      <summary>
            Indicates that the AllowLeadingWhite, AllowTrailingWhite, AllowLeadingSign,
            AllowDecimalPoint, and AllowExponent styles are used.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NumberStyleFlags.HexNumber">
      <summary>
            Indicates that the AllowLeadingWhite, AllowTrailingWhite, and AllowHexSpecifier styles are used.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NumberStyleFlags.Integer">
      <summary>
            Indicates that the AllowLeadingWhite, AllowTrailingWhite, and AllowLeadingSign styles are used.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.NumberStyleFlags.Number">
      <summary>
            Indicates that the AllowLeadingWhite, AllowTrailingWhite, AllowLeadingSign,
            AllowTrailingSign, AllowDecimalPoint, and AllowThousands styles are used.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.DateTimeStyleFlags">
      <summary>
            Used by ParseInfo.DateTimeStyle property.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.DateTimeStyleFlags.None">
      <summary>
            Indicates that the default formatting options must be used.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.DateTimeStyleFlags.AllowInnerWhite">
      <summary>
            Indicates that extra white space characters in the middle of the string must be ignored during parsing.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.DateTimeStyleFlags.AllowLeadingWhite">
      <summary>
            Indicates that leading white space characters must be ignored during parsing.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.DateTimeStyleFlags.AllowTrailingWhite">
      <summary>
            Indicates that trailing white space characters must be ignored during parsing.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.DateTimeStyleFlags.AllowWhiteSpaces">
      <summary>
            Indicates that extra white space characters anywhere in the string must be ignored during parsing.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.DateTimeStyleFlags.NoCurrentDateDefault">
      <summary>
            Indicates that, if the parsed string contains only the time and not the date, the parsing methods
            assume the Gregorian date with year = 1, month = 1, and day = 1. If this value is not used, the current date is assumed.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.ParseEventHandler">
      <summary>
            Represents the method that handles Parsing or Parsed events.
            </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A ParseEventArgs object that contains the event data.</param>
    </member>
    <member name="T:C1.Win.C1Input.ParseEventArgs">
      <summary>
            Provides data for Parsing or Parsed events.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.ParseEventArgs.Text">
      <summary>
            Source string for parsing.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.ParseEventArgs.DestinationType">
      <summary>
            Data type to convert the string to.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.ParseEventArgs.Succeeded">
      <summary>
            Parse result (assigned in the event code in Parsing). Default: True
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.ParseEventArgs.Value">
      <summary>
            Property to save the result to (in Parsing) or to get the resulting value from (in Parsed).
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.ParseEventArgs.ErrorInfo">
      <summary>
            Error information in case of parsing failure. Can be set in event code in Parsing.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.ParseEventArgs.ParseInfo">
      <summary>
            ParseInfo object that fired the event.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.ParseInfo">
      <summary>
            Contains settings affecting parsing, that is, converting a string to the required data type.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.ParseInfo.Inherit">
      <summary>
            Manages inheritance of the ParseInfo properties from the host control properties.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.ParseInfo.CaseSensitive">
      <summary>
            True if string comparisons are case-sensitive; otherwise, False.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.ParseInfo.ShouldSerializeCaseSensitive">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.ParseInfo.ResetCaseSensitive">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.ParseInfo.FormatType">
      <summary>
            The format used for parsing.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.ParseInfo.ShouldSerializeFormatType">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.ParseInfo.ResetFormatType">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.ParseInfo.CustomFormat">
      <summary>
            Custom format specifier (in parsing used for DateTime and Boolean types only).
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.ParseInfo.ShouldSerializeCustomFormat">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.ParseInfo.ResetCustomFormat">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.ParseInfo.NullText">
      <summary>
            The string representing DbNull value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.ParseInfo.ShouldSerializeNullText">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.ParseInfo.ResetNullText">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.ParseInfo.EmptyAsNull">
      <summary>
            If True, empty strings are interpreted as null values (DbNull).
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.ParseInfo.ShouldSerializeEmptyAsNull">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.ParseInfo.ResetEmptyAsNull">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.ParseInfo.ErrorMessage">
      <summary>
            Error message shown in the standard message box and/or in the exception.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.ParseInfo.ShouldSerializeErrorMessage">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.ParseInfo.ResetErrorMessage">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.ParseInfo.TrimStart">
      <summary>
            If True, leading spaces are removed before parsing.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.ParseInfo.ShouldSerializeTrimStart">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.ParseInfo.ResetTrimStart">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.ParseInfo.TrimEnd">
      <summary>
            If True, trailing spaces are removed before parsing.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.ParseInfo.ShouldSerializeTrimEnd">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.ParseInfo.ResetTrimEnd">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.ParseInfo.NumberStyle">
      <summary>
            Determines the styles (flags) permitted in input strings representing numbers.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.ParseInfo.DateTimeStyle">
      <summary>
            Determines the styles (flags) permitted in input strings representing date/time.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.ParseInfo.Reset">
      <summary>
            Resets whole ParseInfo property of base control
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.ParseInfo.IsTextDbNull(System.String,System.Globalization.CultureInfo)">
      <summary>
            Returns True if the argument represents a null value (DBNull).
            </summary>
      <param name="text">The string to parse.</param>
      <param name="culture">Culture used in parsing.</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.ParseInfo.ParseFixed(System.String,C1.Win.C1Input.FormatTypeEnum,System.Globalization.CultureInfo)">
      <summary>
            Converts the text to a Decimal value using a fixed numeric format.
            </summary>
      <param name="text">The string to parse.</param>
      <param name="formatType">Format type used in parsing.</param>
      <param name="culture">Culture used in parsing.</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.ParseInfo.ParseFloat(System.String,C1.Win.C1Input.FormatTypeEnum,System.Globalization.CultureInfo)">
      <summary>
            Converts the text to a Double value using a float numeric format.
            </summary>
      <param name="text">The string to parse.</param>
      <param name="formatType">Format type used in parsing.</param>
      <param name="culture">Culture used in parsing.</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.ParseInfo.ParseInteger(System.String,C1.Win.C1Input.FormatTypeEnum,System.Globalization.CultureInfo)">
      <summary>
            Converts the text to Int64 value using an integer numeric format.
            </summary>
      <param name="text">
      </param>
      <param name="formatType">
      </param>
      <param name="culture">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.ParseInfo.ParseBoolean(System.String,C1.Win.C1Input.FormatTypeEnum,System.Globalization.CultureInfo)">
      <summary>
            Converts the text to a Boolean value.
            </summary>
      <param name="text">The string to parse.</param>
      <param name="formatType">Format type used in parsing.</param>
      <param name="culture">Culture used in parsing.</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.ParseInfo.ParseDateTime(System.String,C1.Win.C1Input.FormatTypeEnum,System.Globalization.CultureInfo)">
      <summary>
            Converts text to a value using one of DateTime formats.
            </summary>
      <param name="text">The string to parse.</param>
      <param name="formatType">Format type used in parsing.</param>
      <param name="culture">Culture used in parsing.</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.ParseInfo.Parse(System.String,System.Type,System.Object@,C1.Win.C1Input.ErrorInfo)">
      <summary>
            Converts text to the specified data type.
            </summary>
      <param name="text">The string to parse.</param>
      <param name="destinationType">Type to which the string is converted.</param>
      <param name="result">Conversion result.</param>
      <param name="errorInfo">Object detailing error information, if an error occurred.</param>
      <returns>
      </returns>
    </member>
    <member name="T:C1.Win.C1Input.PostValidationInheritFlags">
      <summary>
            Used by PostValidation.Inherit property.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.PostValidationInheritFlags.None">
      <summary>
            Indicates that none of the properties are inherited from the control.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.PostValidationInheritFlags.CaseSensitive">
      <summary>
            Indicates that the value of the CaseSensitive property is inherited from the control.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.PostValidationInheritFlags.ErrorMessage">
      <summary>
            Indicates that the value of the ErrorMessage property is inherited from the control.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.PostValidationInheritFlags.All">
      <summary>
            Indicates that all properties are inherited from the control.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.PostValidationTypeEnum">
      <summary>
            Used by PostValidation.Validation property.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.PostValidationTypeEnum.ValuesAndIntervals">
      <summary>
            Validation using Values and Intervals.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.PostValidationTypeEnum.PostValidatingEvent">
      <summary>
            Using the PostValidating event.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.PostValidationEventHandler">
      <summary>
            Represents the method that handles PostValidating or PostValidated events.
            </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A PostValidationEventArgs object that contains the event data.</param>
    </member>
    <member name="T:C1.Win.C1Input.PostValidationEventArgs">
      <summary>
            Provides data for PostValidating or PostValidated events.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.PostValidationEventArgs.Value">
      <summary>
            The value to validate.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.PostValidationEventArgs.PostValidation">
      <summary>
            PostValidation object that fired the event.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.PostValidationEventArgs.ErrorInfo">
      <summary>
            Error information in case of validation failure. Can be set in event code in PostValidating.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.PostValidationEventArgs.Succeeded">
      <summary>
            Validation result (assigned in the event code in PostValidating). Default: True
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.ValueInterval">
      <summary>
            An interval in a collection of intervals of possible values used in post-validation.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.ValueInterval.#ctor">
      <summary>
            Initializes a new instance of the ValueInterval class.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.ValueInterval.#ctor(System.Object,System.Object,System.Boolean,System.Boolean)">
      <summary>
            ValueInterval Constructor.
            </summary>
      <param name="minValue">MinValue property value.</param>
      <param name="maxValue">MaxValue property value.</param>
      <param name="includeMin">IncludeMin property value.</param>
      <param name="includeMax">IncludeMax property value.</param>
    </member>
    <member name="M:C1.Win.C1Input.ValueInterval.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the ValueInterval class.
            </summary>
      <param name="info">
      </param>
      <param name="context">
      </param>
    </member>
    <member name="P:C1.Win.C1Input.ValueInterval.DataType">
      <summary>
            The type of lower and upper bounds (taken from the control’s DataType).
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.ValueInterval.MinValue">
      <summary>
            Lower bound.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.ValueInterval.ShouldSerializeMinValue">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:C1.Win.C1Input.ValueInterval.MaxValue">
      <summary>
            Upper bound.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.ValueInterval.ShouldSerializeMaxValue">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:C1.Win.C1Input.ValueInterval.UseMinValue">
      <summary>
            If False (default), the lower bound is negative infinity.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.ValueInterval.UseMaxValue">
      <summary>
            If False (default), the upper bound is positive infinity.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.ValueInterval.IncludeMin">
      <summary>
            If True (default), the lower bound is included.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.ValueInterval.IncludeMax">
      <summary>
            If True (default), the upper bound is included.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.ValueIntervalCollection">
      <summary>
            A collection of ValueInterval objects used by a PostValidation object. 
            The collection is used if the Validation = PostValidationTypeEnum.ValuesAndIntervals
            or if the user calls the ValidateValuesAndIntervals method.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.ValueIntervalCollection.Item(System.Int32)">
      <summary>
            Gets the collection element at the specified index.
            </summary>
      <param name="index">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.ValueIntervalCollection.AddRange(C1.Win.C1Input.ValueInterval[])">
      <summary>
            Adds the elements of an array to the end of the collection.
            </summary>
      <param name="c">The array whose elements should be added to the end of the collection.</param>
    </member>
    <member name="M:C1.Win.C1Input.ValueIntervalCollection.Add(C1.Win.C1Input.ValueInterval)">
      <summary>
            Adds a new value interval to the collection.
            </summary>
      <param name="vi">The ValueInterval to add.</param>
    </member>
    <member name="M:C1.Win.C1Input.ValueIntervalCollection.Insert(System.Int32,C1.Win.C1Input.ValueInterval)">
      <summary>
            Inserts a new value interval to the collection at the specified position.
            </summary>
      <param name="index">The zero-based index at which ValueInterval should be inserted.</param>
      <param name="vi">The ValueInterval to insert.</param>
    </member>
    <member name="M:C1.Win.C1Input.ValueIntervalCollection.OnInsert(System.Int32,System.Object)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="index">
      </param>
      <param name="value">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.ValueIntervalCollection.OnSet(System.Int32,System.Object,System.Object)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="index">
      </param>
      <param name="oldValue">
      </param>
      <param name="newValue">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.ValueIntervalCollection.Contains(C1.Win.C1Input.ValueInterval)">
      <summary>
            Returns True if the collection contains the specific value interval, False otherwise.
            </summary>
      <param name="vi">The ValueInterval to locate in the collection.</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.ValueIntervalCollection.IndexOf(C1.Win.C1Input.ValueInterval)">
      <summary>
            Determines the index of a specific value interval in the collection, return -1 if this item not found.
            </summary>
      <param name="vi">The ValueInterval to locate in the collection.</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.ValueIntervalCollection.Remove(C1.Win.C1Input.ValueInterval)">
      <summary>
            Removes a specific value interval from the collection.
            </summary>
      <param name="vi">The ValueInterval to remove from the collection.</param>
    </member>
    <member name="M:C1.Win.C1Input.ValueIntervalCollection.CopyTo(C1.Win.C1Input.ValueInterval[],System.Int32)">
      <summary>
            Copies elements of the collection to an array starting at a particular array index.
            </summary>
      <param name="array">The one-array that is the destination of the elements copied from the collection. </param>
      <param name="index">The zero-based index in array at which copying begins.</param>
    </member>
    <member name="T:C1.Win.C1Input.PostValidation">
      <summary>
            Validating the typed value after parsing, after the input string has been converted to the DataType.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.PostValidation.Validation">
      <summary>
            Validation method.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.PostValidation.AllowDbNull">
      <summary>
            Determines whether it is possible to enter DbNull value in the control.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.PostValidation.Inherit">
      <summary>
            Manages inheritance of the PostValidation properties from the host control properties.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.PostValidation.CaseSensitive">
      <summary>
            True if string comparisons are case-sensitive; otherwise, False.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.PostValidation.ShouldSerializeCaseSensitive">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.PostValidation.ResetCaseSensitive">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.PostValidation.ErrorMessage">
      <summary>
            Error message shown in the standard message box and/or in the exception.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.PostValidation.ShouldSerializeErrorMessage">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.PostValidation.ResetErrorMessage">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.PostValidation.Values">
      <summary>
            Predefined values used for matching the input value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.PostValidation.ShouldSerializeValues">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:C1.Win.C1Input.PostValidation.ValuesExcluded">
      <summary>
            List of values that are not permitted as input value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.PostValidation.ShouldSerializeValuesExcluded">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:C1.Win.C1Input.PostValidation.Intervals">
      <summary>
            Collection of intervals. The input value must belong to one of these intervals.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.PostValidation.ShouldSerializeIntervals">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.PostValidation.Reset">
      <summary>
            Resets whole PostValidation property of base control
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.PostValidation.ValidateValuesAndIntervals(System.Object,C1.Win.C1Input.ErrorInfo)">
      <summary>
            Performs validation of the value against the collections of Values, ValuesExcluded and Intervals.
            </summary>
      <param name="value">The value to validate.</param>
      <param name="errorInfo">Error information filled in case of failure.</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.PostValidation.Validate(System.Object,C1.Win.C1Input.ErrorInfo)">
      <summary>
            Performs validation using the current settings of the PostValidation object. Returns true if vaidation was successful.
            </summary>
      <param name="value">The value to validate.</param>
      <param name="errorInfo">Error information filled in case of failure.</param>
      <returns>
      </returns>
    </member>
    <member name="T:C1.Win.C1Input.PreValidationInheritFlags">
      <summary>
            Used by PreValidation.Inherit property.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.PreValidationInheritFlags.None">
      <summary>
            Indicates that none of the properties are inherited from the control.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.PreValidationInheritFlags.CaseSensitive">
      <summary>
            Indicates that the value of the CaseSensitive property is inherited from the control.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.PreValidationInheritFlags.ErrorMessage">
      <summary>
            Indicates that the value of the ErrorMessage property is inherited from the control.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.PreValidationInheritFlags.TrimStart">
      <summary>
            Indicates that the value of the TrimStart property is inherited from the control.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.PreValidationInheritFlags.TrimEnd">
      <summary>
            Indicates that the value of the TrimEnd property is inherited from the control.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.PreValidationInheritFlags.All">
      <summary>
            Indicates that all properties are inherited from the control.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.PreValidationTypeEnum">
      <summary>
            Used by PreValidation.Validation property.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.PreValidationTypeEnum.ExactList">
      <summary>
            The PatternString property contains a list of possible values separated by the ItemSeparator.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.PreValidationTypeEnum.PreValidatingEvent">
      <summary>
            Using the PreValidating event.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.PreValidationTypeEnum.Wildcards">
      <summary>
            The PatternString property contains a list of wildcard patterns separated by the ItemSeparator. 
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.PreValidationTypeEnum.RegexPattern">
      <summary>
            The PatternString property contains a regular expression.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.RegexOptionFlags">
      <summary>
            Used by PreValidation.RegexOptions property.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.RegexOptionFlags.None">
      <summary>
            Specifies that no options are set.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.RegexOptionFlags.ECMAScript">
      <summary>
            Enables ECMAScript-compliant behavior for the expression. This flag can be used only
            in conjunction with the IgnoreCase, Multiline, and Compiled flags.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.RegexOptionFlags.ExplicitCapture">
      <summary>
            Specifies that the only valid captures are explicitly named or numbered groups of the form.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.RegexOptionFlags.IgnorePatternWhitespace">
      <summary>
            Eliminates unescaped white space from the pattern and enables comments marked with #.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.RegexOptionFlags.Multiline">
      <summary>
            Multiline mode. Changes the meaning of ^ and $ so they match at the beginning and end, 
            respectively, of any line, and not just the beginning and end of the entire string.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.RegexOptionFlags.RightToLeft">
      <summary>
            Specifies that the search will be from right to left instead of from left to right.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.RegexOptionFlags.Singleline">
      <summary>
            Specifies single-line mode. Changes the meaning of the dot (.) so it matches every character (instead of every character except \n).
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.PreValidationEventHandler">
      <summary>
            Represents the method that handles PreValidating or PreValidated events.
            </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A PreValidationEventArgs object that contains the event data.</param>
    </member>
    <member name="T:C1.Win.C1Input.PreValidationEventArgs">
      <summary>
            Provides data for PreValidating or PreValidated events.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.PreValidationEventArgs.Text">
      <summary>
            The text to validate.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.PreValidationEventArgs.PreValidation">
      <summary>
            PreValidation object that fired the event.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.PreValidationEventArgs.ErrorInfo">
      <summary>
            Error information in case of validation failure. Can be set in event code in PreValidating.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.PreValidationEventArgs.Succeeded">
      <summary>
            Validation result (assigned in the event code in PreValidating). Default: True.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.PreValidation">
      <summary>
            Validating the input string entered by the user, before parsing.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.PreValidation.Validation">
      <summary>
            Validation method.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.PreValidation.Inherit">
      <summary>
            Manages inheritance of the PreValidation properties from the host control properties.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.PreValidation.CaseSensitive">
      <summary>
            True if string comparisons are case-sensitive; otherwise, False.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.PreValidation.ShouldSerializeCaseSensitive">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.PreValidation.ResetCaseSensitive">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.PreValidation.ErrorMessage">
      <summary>
            Error message shown in the standard message box and/or in the exception.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.PreValidation.ShouldSerializeErrorMessage">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.PreValidation.ResetErrorMessage">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.PreValidation.TrimStart">
      <summary>
            If True, leading spaces are removed before validation.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.PreValidation.ShouldSerializeTrimStart">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.PreValidation.ResetTrimStart">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.PreValidation.TrimEnd">
      <summary>
            If True, trailing spaces are removed before validation.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.PreValidation.ShouldSerializeTrimEnd">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.PreValidation.ResetTrimEnd">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.PreValidation.PatternString">
      <summary>
            String containing the validation pattern.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.PreValidation.ItemSeparator">
      <summary>
            String separating list items in PatternString.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.PreValidation.CustomPlaceholders">
      <summary>
            The collection of user-defined characters to use in a wildcard pattern.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.PreValidation.ShouldSerializeCustomPlaceholders">
      <summary>
            This method is for internal use only.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.PreValidation.ResetCustomPlaceholders">
      <summary>
            This method is for internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.PreValidation.RegexOptions">
      <summary>
            Settings affecting regular expression matching.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.PreValidation.Reset">
      <summary>
            Resets whole PreValidation property of base control
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.PreValidation.MatchExactList(System.String,C1.Win.C1Input.ErrorInfo)">
      <summary>
            Returns True if the input text matches one of the exact list items specified in PatternString.
            </summary>
      <param name="text">The input string to match.</param>
      <param name="errorInfo">Error information filled in case of failure.</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.PreValidation.MatchWildcardPattern(System.String,System.String)">
      <summary>
            Returns True if the input text matches the specified wildcard pattern passed as argument.
            </summary>
      <param name="text">The input string to match.</param>
      <param name="pattern">The wildcard pattern.</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.PreValidation.MatchWildcardPatterns(System.String,C1.Win.C1Input.ErrorInfo)">
      <summary>
            Returns True if the input text matches at least one of the wildcard patterns specified in PatternString.
            </summary>
      <param name="text">The input string to match.</param>
      <param name="errorInfo">Error information filled in case of failure.</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.PreValidation.MatchRegex(System.String,C1.Win.C1Input.ErrorInfo)">
      <summary>
            Returns True if the input text matches the regular expression pattern specified in PatternString.
            </summary>
      <param name="text">The input string to match.</param>
      <param name="errorInfo">Error information filled in case of failure.</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.PreValidation.Validate(System.String,C1.Win.C1Input.ErrorInfo)">
      <summary>
            Returns True if the text successfully passes validation using the current settings of the PreValidation object.
            </summary>
      <param name="text">The input string to validate.</param>
      <param name="errorInfo">Error information filled in case of failure.</param>
      <returns>
      </returns>
    </member>
    <member name="T:C1.Win.C1Input.NullableDateTimeEventHandler">
      <summary>
            Represents the method that handles DateValueChanged and DateValueSelected events.
            </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A NullableDateTimeEventArgs object that contains the event data.</param>
    </member>
    <member name="T:C1.Win.C1Input.NullableDateTimeEventArgs">
      <summary>
            Provides data for DateValueChanged and DateValueSelected events.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.NullableDateTimeEventArgs.Date">
      <summary>
            The date value.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.NullableDateTimeEventArgs.DateIsNull">
      <summary>
            Set to True if the date value is null.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.CreationTime">
      <summary>
            Determines when drop down form will be created.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.CreationTime.Default">
      <summary>
            At the host control creation time.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.CreationTime.OnFirstCall">
      <summary>
            On first call of the drop down form.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.LengthUnit">
      <summary>
               Defines the <b>LengthUnit</b> enumeration.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.LengthUnit.Char">
      <summary>
              Indicates the calculational unit is a .Net character when calculating the length of the string.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.LengthUnit.Byte">
      <summary>
              Indicates the calculational unit is a byte when calculating the length of the string.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.VisualStyle">
      <summary>
            Determines the visual style of a control.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.VisualStyle.Custom">
      <summary>
            Custom style.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.VisualStyle.System">
      <summary>
            Standard system style.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.VisualStyle.Office2007Blue">
      <summary>
            MS Office 2007 Blue color scheme.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.VisualStyle.Office2007Black">
      <summary>
            MS Office 2007 Black color scheme.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.VisualStyle.Office2007Silver">
      <summary>
            MS Office 2007 Silver color scheme.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.VisualStyle.Office2010Blue">
      <summary>
            MS Office 2010 Blue color scheme.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.VisualStyle.Office2010Black">
      <summary>
            MS Office 2010 Black color scheme.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.VisualStyle.Office2010Silver">
      <summary>
            MS Office 2010 Silver color scheme.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.FormatTypeEnum">
      <summary>
            Used by <see cref="P:C1.Win.C1Input.C1TextBox.FormatType" /> property.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.FormatTypeEnum.DefaultFormat">
      <summary>
            Conversion using TypeConverter.ConvertToString().
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.FormatTypeEnum.UseEvent">
      <summary>
            Conversion performed by user code in the Formatting (or Parsing) event.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.FormatTypeEnum.CustomFormat">
      <summary>
            Formatting uses the string assigned to the CustomFormat property.
            Parsing uses NumberStyle, DateTimeStyle, and CustomFormat properties.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.FormatTypeEnum.GeneralNumber">
      <summary>
            The number is converted to the most compact decimal form, using fixed point or scientific notation.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.FormatTypeEnum.Currency">
      <summary>
            The number is converted to a string that represents a currency amount.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.FormatTypeEnum.FixedPoint">
      <summary>
            The number is converted to a string of the form “-ddd.ddd…” where each 'd' indicates a digit (0-9). 
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.FormatTypeEnum.StandardNumber">
      <summary>
            The number is converted to a string of the form "-d,ddd,ddd.ddd…", where each 'd' indicates a digit (0-9).
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.FormatTypeEnum.Percent">
      <summary>
            The number is converted to a string that represents a percent as defined by the <see cref="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" /> property
            or the <see cref="P:System.Globalization.NumberFormatInfo.PercentPositivePattern" /> property. 
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.FormatTypeEnum.Scientific">
      <summary>
            The number is converted to a string of the form "-d.ddd…E+ddd" or "-d.ddd…e+ddd", where each 'd' indicates a digit (0-9). 
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.FormatTypeEnum.RoundTrip">
      <summary>
            The round-trip specifier guarantees that a numeric value converted to a string will be parsed back
            into the same numeric value. This format is supported by floating-point types only.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.FormatTypeEnum.Integer">
      <summary>
            Displays number as a string that contains the value of the number in Decimal (base 10) format. This format is supported for integral types only.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.FormatTypeEnum.Hexadecimal">
      <summary>
            The number is converted to a string of hexadecimal digits. This format is supported for integral types only.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.FormatTypeEnum.YesNo">
      <summary>
            Converts to Boolean and shows No for false, Yes for true.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.FormatTypeEnum.TrueFalse">
      <summary>
            Converts to Boolean and shows True or False.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.FormatTypeEnum.OnOff">
      <summary>
            Converts to Boolean and shows Off for false, On for true.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.FormatTypeEnum.GeneralDate">
      <summary>
            General date/time pattern (short time).
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.FormatTypeEnum.LongDate">
      <summary>
            Displays a date according to specified CultureInfo's long date format.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.FormatTypeEnum.MediumDate">
      <summary>
            Displays a date using the medium date format ("dd-MMM-yy").
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.FormatTypeEnum.ShortDate">
      <summary>
            Displays a date using specified CultureInfo's short date format.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.FormatTypeEnum.LongTime">
      <summary>
            Displays a time using your locale's long time format; includes hours, minutes, seconds.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.FormatTypeEnum.MediumTime">
      <summary>
            Displays time in 12-hour format using hours and minutes and the AM/PM designator ("hh:mm tt").
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.FormatTypeEnum.ShortTime">
      <summary>
            Displays a time using the 24-hour format, for example, 17:45.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.FormatTypeEnum.LongDateShortTime">
      <summary>
            Displays the long date and short time according to specified CultureInfo's format.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.FormatTypeEnum.LongDateLongTime">
      <summary>
            Displays the long date and long time according to specified CultureInfo's format.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.FormatTypeEnum.ShortDateShortTime">
      <summary>
            Displays the short date and short time according to specified CultureInfo's format.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.FormatTypeEnum.ShortDateLongTime">
      <summary>
            Displays the short date and long time according to specified CultureInfo's format.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.FormatTypeEnum.MonthAndDay">
      <summary>
            Displays the month and the day of a date.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.FormatTypeEnum.DateAndTimeGMT">
      <summary>
            Formats the date and time as Greenwich Mean Time (GMT).
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.FormatTypeEnum.DateTimeSortable">
      <summary>
            Formats the date and time as a sortable index.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.FormatTypeEnum.GMTSortable">
      <summary>
            Formats the date and time as a GMT sortable index.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.FormatTypeEnum.LongDateTimeGMT">
      <summary>
            Formats the date and time with the long date and long time as GMT.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.FormatTypeEnum.YearAndMonth">
      <summary>
            Formats the date as the year and month.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.TypeRestrictionEnum">
      <summary>
            This enum is for internal use only
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.TypeRestrictionEnum.AnyType">
      <summary>
            Any type of data.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.TypeRestrictionEnum.Numbers">
      <summary>
            Only number data type.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.TypeRestrictionEnum.DateTime">
      <summary>
            Only DateTime data type.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.DropDownFormAlignmentEnum">
      <summary>
            Used by <see cref="P:C1.Win.C1Input.DropDownForm.DropDownAlign" /> and <see cref="P:C1.Win.C1Input.C1DropDownControl.DropDownFormAlign" /> properties.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.DropDownFormAlignmentEnum.Default">
      <summary>
            In a <see cref="T:C1.Win.C1Input.C1DropDownControl" />, the alignment of the dropdown form is determined by the 
            <see cref="P:C1.Win.C1Input.C1DropDownControl.DropDownAlign" /> property of the drop down form.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.DropDownFormAlignmentEnum.Left">
      <summary>
            Left alignment.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.DropDownFormAlignmentEnum.Center">
      <summary>
            Center alignment.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.DropDownFormAlignmentEnum.Right">
      <summary>
            Right alignment.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.VerticalAlignEnum">
      <summary>
            Used by <see cref="P:C1.Win.C1Input.C1TextBox.VerticalAlign" /> property.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.VerticalAlignEnum.Top">
      <summary>
            Text is aligned with the top of the enclosing control.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.VerticalAlignEnum.Middle">
      <summary>
            Text is aligned with the center of the enclosing control.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.VerticalAlignEnum.Bottom">
      <summary>
            Text is aligned with the bottom of the enclosing control.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.DaylightTimeAdjustmentEnum">
      <summary>
            Used by <see cref="P:C1.Win.C1Input.C1Label.DaylightTimeAdjustment" /> and <see cref="P:C1.Win.C1Input.C1TextBox.DaylightTimeAdjustment" /> properties.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.DaylightTimeAdjustmentEnum.NoAdjustments">
      <summary>
            No daylight-saving time adjustments.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.DaylightTimeAdjustmentEnum.AdvanceGMTOffsetForTheDaylightSavingTime">
      <summary>
            Use this option if the GMTOffset property corresponds to the standard time offset.
            For the daylight-saving time GMTOffset should be advanced by an hour.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.DaylightTimeAdjustmentEnum.SetGMTOffsetBackForTheStandardTime">
      <summary>
            Use this option if the GMTOffset property is set to the daylight time offset. 
            So, for the standard time it should be set back by an hour.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.InitialSelectionEnum">
      <summary>
            Used by <see cref="P:C1.Win.C1Input.C1TextBox.InitialSelection" />  property.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.InitialSelectionEnum.SelectAll">
      <summary>
            The whole text is selected.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.InitialSelectionEnum.CaretAtStart">
      <summary>
            Nothing selected, the caret is moved at the beginning of the text.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.InitialSelectionEnum.CaretAtEnd">
      <summary>
            Nothing selected, the caret is moved at the end of the text.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.DateTimeField">
      <summary>
            Used by <see cref="P:C1.Win.C1Input.C1DateEdit.InitialField" /> property and <see cref="M:C1.Win.C1Input.C1TextBox.GoToField(C1.Win.C1Input.DateTimeField,System.Boolean)" /> method.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.DateTimeField.Manual">
      <summary>
            Used the default date-time field.
            </summary>
      <remarks>
        <see cref="T:C1.Win.C1Input.C1DateEdit" /> uses this value to use the <see cref="P:C1.Win.C1Input.C1TextBox.InitialSelection" />  
            instead of the <see cref="P:C1.Win.C1Input.C1DateEdit.InitialField" /> property to specify initial selection. 
            </remarks>
    </member>
    <member name="F:C1.Win.C1Input.DateTimeField.DayOfMonth">
      <summary>
            The date-time field that contains the DayOfMonth part of the value.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.DateTimeField.Month">
      <summary>
            The date-time field that contains the Month part of the value.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.DateTimeField.Year">
      <summary>
            The date-time field that contains the Year part of the value.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.DateTimeField.Era">
      <summary>
            The date-time field that contains the Era part of the value.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.DateTimeField.AMPM">
      <summary>
            The date-time field that contains the AMPM part of the value.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.DateTimeField.Hour">
      <summary>
            The date-time field that contains the Hour part of the value.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.DateTimeField.Minute">
      <summary>
            The date-time field that contains the Minute part of the value.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.DateTimeField.Second">
      <summary>
            The date-time field that contains the Second part of the value.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.ValueChangedBehaviorEnum">
      <summary>
            Used by C1TextBox.ValueChangedBehavior.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.ValueChangedBehaviorEnum.Default">
      <summary>
            The ValueChanged event is fired only when the Value property changes.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.ValueChangedBehaviorEnum.FireOnAnyChange">
      <summary>
            The ValueChanged event is fired on any text change.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.ExitOnLeftRightKey">
      <summary>
              Specifies the action for the left or right arrow key.
            </summary>
      <remarks>
              The left or right key causes focus to be lost when the caret is at the left-most or right-most position.
            </remarks>
    </member>
    <member name="F:C1.Win.C1Input.ExitOnLeftRightKey.None">
      <summary>
              Specifies no action.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.ExitOnLeftRightKey.Left">
      <summary>
              Specifies to move to the previous control when pressing left or Ctrl+left keys on the first character of the control.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.ExitOnLeftRightKey.Right">
      <summary>
              Specifies to move to the next control when pressing right or Ctrl+right keys on the last character of the control.
            </summary>
    </member>
    <member name="F:C1.Win.C1Input.ExitOnLeftRightKey.Both">
      <summary>
              Specifies to move to the previous or next control when pressing the left or right or Ctrl+left or Ctrl+right keys on the first or last character of the control.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.CultureInfoSetupEventHandler">
      <summary>
            Represents the method that handles a CultureInfoSetup event.
            </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A CultureInfoSetupEventArgs object that contains the event data.</param>
    </member>
    <member name="T:C1.Win.C1Input.CultureInfoSetupEventArgs">
      <summary>
            Provides data for a CultureInfoSetup event.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.CultureInfoSetupEventArgs.CultureInfo">
      <summary>
            Regional settings.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.Margins">
      <summary>
            Represents the four margins around a control’s content.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.Margins.#ctor">
      <summary>
            Initializes a new instance of the Margins class.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.Margins.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the Margins class.
            </summary>
      <param name="left">
      </param>
      <param name="right">
      </param>
      <param name="top">
      </param>
      <param name="bottom">
      </param>
    </member>
    <member name="P:C1.Win.C1Input.Margins.Left">
      <summary>
            Gets or sets the left margin, in pixels.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.Margins.Right">
      <summary>
            Gets or sets the right margin, in pixels.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.Margins.Top">
      <summary>
            Gets or sets the top margin, in pixels.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.Margins.Bottom">
      <summary>
            Gets or sets the bottom margin, in pixels.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.Margins.Clone">
      <summary>
            Creates an identical copy of the current Margins.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.Margins.Equals(System.Object)">
      <summary>
            Overloaded. Determines whether two Object instances are equal.
            </summary>
      <param name="obj">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.Margins.GetHashCode">
      <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.Margins.ToString">
      <summary>
            Converts this Margins to a human readable string.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.Margins.Set(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Overloaded. Sets the margin values.
            </summary>
      <param name="left">
      </param>
      <param name="right">
      </param>
      <param name="top">
      </param>
      <param name="bottom">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.Margins.Set(System.Drawing.Printing.Margins)">
      <summary>
            Overloaded. Sets the margin values.
            </summary>
      <param name="printMargins">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.Margins.Reset">
      <summary>
            Sets all margins to zero.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.Margins.ShouldSerialize">
      <summary>
            Returns true if at least one margin differs from the default zero value. Otherwise, returns false.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:C1.Win.C1Input.CustomPlaceholder">
      <summary>
            Custom user-defined characters (placeholders) used in edit mask and in wildcard patterns in pre-validation 
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.CustomPlaceholder.#ctor">
      <summary>
            Initializes a new instance of the CustomPlaceholder class.
            </summary>
    </member>
    <member name="M:C1.Win.C1Input.CustomPlaceholder.#ctor(System.Char,System.Boolean,System.String,System.Boolean,System.Boolean)">
      <summary>
            Initializes a new instance of the CustomPlaceholder class.
            </summary>
      <param name="placeholder">The value of the Placeholder property.</param>
      <param name="optionalPlace">The value of the Optional property.</param>
      <param name="lookupChars">The value of the LookupChars property.</param>
      <param name="caseSensitive">The value of the CaseSensitive property.</param>
      <param name="excluding">The value of the Excluding property.</param>
    </member>
    <member name="M:C1.Win.C1Input.CustomPlaceholder.#ctor(System.Int32,System.Boolean,System.String,System.Boolean,System.Boolean)">
      <summary>
            Initializes a new instance of the CustomPlaceholder class.
            </summary>
      <param name="placeholder">The value of the Placeholder property.</param>
      <param name="optionalPlace">The value of the Optional property.</param>
      <param name="lookupChars">The value of the LookupChars property.</param>
      <param name="caseSensitive">The value of the CaseSensitive property.</param>
      <param name="excluding">The value of the Excluding property.</param>
    </member>
    <member name="M:C1.Win.C1Input.CustomPlaceholder.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the CustomPlaceholder class.
            </summary>
      <param name="info">
      </param>
      <param name="context">
      </param>
    </member>
    <member name="P:C1.Win.C1Input.CustomPlaceholder.Placeholder">
      <summary>
            The special character used as a user-defined placeholder.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.CustomPlaceholder.Optional">
      <summary>
            True if character is optional and can be omitted.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.CustomPlaceholder.LookupChars">
      <summary>
            The list (string) of characters matching the placeholder (see also Excluding).
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.CustomPlaceholder.CaseSensitive">
      <summary>
            True if string comparison is case-sensitive; otherwise, False.
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.CustomPlaceholder.Excluding">
      <summary>
            Specifies whether the LookupChars are interpreted as allowed or disallowed characters.
            </summary>
    </member>
    <member name="T:C1.Win.C1Input.PlaceholderCollection">
      <summary>
            A collection of CustomPlaceholder objects.
            </summary>
    </member>
    <member name="E:C1.Win.C1Input.PlaceholderCollection.Changed">
      <summary>
            Occurs when PlaceholderCollection is changed 
            </summary>
    </member>
    <member name="P:C1.Win.C1Input.PlaceholderCollection.Item(System.Int32)">
      <summary>
            Gets or sets the the special character at the specified index.
            </summary>
      <param name="index">The zero-based index of the element to get or set.</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.PlaceholderCollection.AddRange(C1.Win.C1Input.CustomPlaceholder[])">
      <summary>
            Adds the special characters of an ICollection to the end of the PlaceholderCollection.
            </summary>
      <param name="c">The ICollection whose elements should be added.</param>
    </member>
    <member name="M:C1.Win.C1Input.PlaceholderCollection.CheckItemBeforeAdding(C1.Win.C1Input.CustomPlaceholder)">
      <summary>
            Checks validity of the placeholder
            </summary>
      <param name="cph">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.PlaceholderCollection.Add(C1.Win.C1Input.CustomPlaceholder)">
      <summary>
            Adds a new special character to the collection.
            </summary>
      <param name="cph">The CustomPlaceholder to add.</param>
    </member>
    <member name="M:C1.Win.C1Input.PlaceholderCollection.Insert(System.Int32,C1.Win.C1Input.CustomPlaceholder)">
      <summary>
            Inserts a new special character to the collection at the specified position.
            </summary>
      <param name="index">The zero-based index at which CustomPlaceholder should be inserted.</param>
      <param name="cph">The CustomPlaceholder to insert.</param>
    </member>
    <member name="M:C1.Win.C1Input.PlaceholderCollection.OnInsert(System.Int32,System.Object)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="index">
      </param>
      <param name="value">
      </param>
    </member>
    <member name="M:C1.Win.C1Input.PlaceholderCollection.Contains(System.Char)">
      <summary>
            Determines whether a character is in the placeholder collection.
            </summary>
      <param name="placeholder">The character argument.</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.PlaceholderCollection.IndexOf(System.Char)">
      <summary>
            Returns the index of a character in the placeholder collection, or –1 if it does not belong to the collection.
            </summary>
      <param name="placeholder">The character argument.</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.PlaceholderCollection.Remove(System.Char)">
      <summary>
            Removes a specific character from the collection.
            </summary>
      <param name="placeholder">The character to remove from the collection.</param>
    </member>
    <member name="M:C1.Win.C1Input.PlaceholderCollection.CopyTo(C1.Win.C1Input.CustomPlaceholder[],System.Int32)">
      <summary>
            Copies elements of the collection to an array starting at a particular array index.
            </summary>
      <param name="array">The one-array that is the destination of the elements copied from the collection. </param>
      <param name="index">The zero-based index in array at which copying begins.</param>
    </member>
    <member name="M:C1.Win.C1Input.PlaceholderCollection.GetItem(System.Char)">
      <summary>
            Returns the CustomPlaceholder object corresponding to the character argument, or null if it does not belong to the collection.
            </summary>
      <param name="placeholder">The character argument.</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Input.PlaceholderCollection.OnChanged(System.EventArgs)">
      <summary>
            This method is for internal use only.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="T:C1.Globalization.EraInfo">
      <summary>
              Represents the era info.
            </summary>
    </member>
    <member name="M:C1.Globalization.EraInfo.#ctor(System.Int32,System.DateTime,System.DateTime,System.String,System.String,System.String,System.String)">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Globalization.EraInfo" /> class.
            </summary>
      <param name="era">The era.</param>
      <param name="startTime">The start time.</param>
      <param name="endTime">The end time.</param>
      <param name="eraName">Name of the era.</param>
      <param name="abbreviatedEraName">Name of the abbreviated era.</param>
      <param name="englishEraName">Name of the English era.</param>
      <param name="symbolEraName">Name of the symbol era.</param>
    </member>
    <member name="P:C1.Globalization.EraInfo.Era">
      <summary>
              Gets the era.
            </summary>
      <value>The era.</value>
    </member>
    <member name="P:C1.Globalization.EraInfo.StartTime">
      <summary>
              Gets the start time.
            </summary>
      <value>The start time.</value>
    </member>
    <member name="P:C1.Globalization.EraInfo.EndTime">
      <summary>
              Gets the end time.
            </summary>
      <value>The end time.</value>
    </member>
    <member name="P:C1.Globalization.EraInfo.EraName">
      <summary>
              Gets the name of the era.
            </summary>
      <value>The name of the era.</value>
    </member>
    <member name="P:C1.Globalization.EraInfo.AbbreviatedEraName">
      <summary>
              Gets the name of the abbreviated era.
            </summary>
      <value>The name of the abbreviated era.</value>
    </member>
    <member name="P:C1.Globalization.EraInfo.EnglishEraName">
      <summary>
              Gets the name of the English era.
            </summary>
      <value>The name of the English era.</value>
    </member>
    <member name="P:C1.Globalization.EraInfo.SymbolEraName">
      <summary>
              Gets the name of the symbol era.
            </summary>
      <value>The name of the symbol era.</value>
    </member>
    <member name="M:C1.Globalization.EraInfo.IsValid(System.DateTime)">
      <summary>
              Determines whether the specified date time is valid.
            </summary>
      <param name="dateTime">The date time.</param>
      <returns>
        <b>true</b> if the specified date time is valid; otherwise, <b>false</b>.
            </returns>
    </member>
    <member name="M:C1.Globalization.EraInfo.Clone">
      <summary>
              Creates a new object that is a copy of the current instance.
            </summary>
      <returns>
              A new object that is a copy of this instance.
            </returns>
    </member>
    <member name="T:C1.Globalization.CalendarEx">
      <summary>
              This class implement a calendar extend in order to we can configure era information.
            </summary>
    </member>
    <member name="M:C1.Globalization.CalendarEx.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:CalendarEx"></see> class.
            </summary>
    </member>
    <member name="P:C1.Globalization.CalendarEx.ErasInfo">
      <summary>
              Gets the eras information of this calendar.
            </summary>
      <returns>
              Return a <see cref="T:C1.Globalization.EraInfo" /> array.
            </returns>
    </member>
    <member name="P:C1.Globalization.CalendarEx.Eras">
      <summary>
              Gets the list of eras in the <see cref="T:CalendarEx"></see>.
            </summary>
      <returns>
              An array of integers that represents the eras in the <see cref="T:CalendarEx"></see>.
            </returns>
    </member>
    <member name="M:C1.Globalization.CalendarEx.GetMaxEra">
      <summary>
              Gets the max era.
            </summary>
      <returns>A max era.</returns>
    </member>
    <member name="M:C1.Globalization.CalendarEx.GetMinEra">
      <summary>
              Gets the min era.
            </summary>
      <returns>A min era.</returns>
    </member>
    <member name="M:C1.Globalization.CalendarEx.GetMaxEraYear(System.Int32)">
      <summary>
              Gets the max era year.
            </summary>
      <param name="era">The era.</param>
      <returns>A max era year.</returns>
    </member>
    <member name="M:C1.Globalization.CalendarEx.GetMinEraYear(System.Int32)">
      <summary>
              Gets the min era year.
            </summary>
      <param name="era">The era.</param>
      <returns>A min era year.</returns>
    </member>
    <member name="M:C1.Globalization.CalendarEx.GetMaxEraYear(System.DateTime)">
      <summary>
              Gets the max era year.
            </summary>
      <param name="dateTime">The date time.</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Globalization.CalendarEx.GetMinEraYear(System.DateTime)">
      <summary>
              Gets the min era year.
            </summary>
      <param name="dateTime">The date time.</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Globalization.CalendarEx.GetMaxYear(System.DateTime)">
      <summary>
              Gets the max year.
            </summary>
      <param name="dateTime">The date time.</param>
      <returns>An <b>int</b> max year value.</returns>
    </member>
    <member name="M:C1.Globalization.CalendarEx.GetMinYear(System.DateTime)">
      <summary>
              Gets the min year.
            </summary>
      <param name="dateTime">The date time.</param>
      <returns>An <b>int</b> min year value.</returns>
    </member>
    <member name="M:C1.Globalization.CalendarEx.GetMaxMonth(System.DateTime)">
      <summary>
              Gets the max month.
            </summary>
      <param name="dateTime">The date time.</param>
      <returns>An <b>int</b> max month value.</returns>
    </member>
    <member name="M:C1.Globalization.CalendarEx.GetMinMonth(System.DateTime)">
      <summary>
              Gets the min month.
            </summary>
      <param name="dateTime">The date time.</param>
      <returns>An <b>int</b> min month value.</returns>
    </member>
    <member name="M:C1.Globalization.CalendarEx.GetMaxDay(System.DateTime)">
      <summary>
              Gets the max day.
            </summary>
      <param name="dateTime">The date time.</param>
      <returns>An <b>int</b> max day value.</returns>
    </member>
    <member name="M:C1.Globalization.CalendarEx.GetMinDay(System.DateTime)">
      <summary>
              Gets the min day.
            </summary>
      <param name="dateTime">The date time.</param>
      <returns>An <b>int</b> min dayr value.</returns>
    </member>
    <member name="M:C1.Globalization.CalendarEx.ToFourDigitYear(System.Int32,System.Int32)">
      <summary>
              Converts the specified two-digit year to a four-digit year by using 
              the <see cref="P:System.Globalization.Calendar.TwoDigitYearMax"></see>
              property to determine the appropriate century.
            </summary>
      <param name="year">
              A two-digit integer that represents the year to convert.
            </param>
      <param name="twoDigitYearMax">
              A <b>int</b> value indicates the two digit year max.
            </param>
      <returns>
              An integer that contains the four-digit representation of year.
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
              year is outside the range supported by the calendar or
              twoDigitYearMax large than 99 or twoDigitYearMax less than 9999. 
            </exception>
    </member>
    <member name="P:C1.Globalization.CalendarEx.MaxSupportedDateTime">
      <summary>
              Gets the latest date and time supported by the current <see cref="T:JapaneseCalendarEx"></see> object.
            </summary>
      <returns>
              The latest date and time supported by the <see cref="T:JapaneseCalendarEx"></see> type, 
              which is equivalent to the last moment of December 31, 9999 C.E. in the Gregorian calendar.
            </returns>
    </member>
    <member name="P:C1.Globalization.CalendarEx.MinSupportedDateTime">
      <summary>
              Gets the earliest date and time supported by the current <see cref="T:JapaneseCalendarEx"></see> object.
            </summary>
      <returns>
              The earliest date and time supported by the <see cref="T:JapaneseCalendarEx"></see> type,
              which is equivalent to the first moment of September 8, 1868 C.E. in the Gregorian calendar. 
              For more information, see Remarks.
            </returns>
    </member>
    <member name="M:C1.Globalization.CalendarEx.ClearEras">
      <summary>
            Removes all eras from the era list.
            </summary>
    </member>
    <member name="T:C1.Globalization.JapaneseCalendarEx">
      <summary>
            Extended Japanese calendar.
            </summary>
    </member>
    <member name="P:C1.Globalization.JapaneseCalendarEx.DefaultInstance">
      <summary>
              The <see cref="T:C1.Globalization.JapaneseCalendarEx" /> default instance.
            </summary>
    </member>
    <member name="P:C1.Globalization.JapaneseCalendarEx.PrototypeCalendar">
      <summary>
              Gets a prototype calendar.
            </summary>
      <returns>
              Always return the <see cref="T:System.Globalization.Calendar" /> value.
            </returns>
    </member>
    <member name="P:C1.Globalization.JapaneseCalendarEx.TwoDigitYearMax">
      <summary>
              Gets or sets the last year of a 100-year range that can be represented by a 2-digit year.
            </summary>
      <value>
      </value>
      <returns>
              The last year of a 100-year range that can be represented by a 2-digit year.
            </returns>
      <exception cref="T:System.InvalidOperationException">
              The current <see cref="T:System.Globalization.Calendar"></see> object is read-only.
            </exception>
    </member>
    <member name="P:C1.Globalization.JapaneseCalendarEx.AlgorithmType">
      <summary>
              Gets a value that indicates whether the current calendar is solar-based, lunar-based, or a combination of both.
            </summary>
      <returns>
              Always returns the <see cref="F:System.Globalization.CalendarAlgorithmType.SolarCalendar"></see> value.
            </returns>
    </member>
    <member name="M:C1.Globalization.JapaneseCalendarEx.AddMonths(System.DateTime,System.Int32)">
      <summary>
              Returns a <see cref="T:System.DateTime"></see> that is the specified number of months away from
              the specified <see cref="T:System.DateTime"></see>.
            </summary>
      <returns>
              The <see cref="T:System.DateTime"></see> that results from adding the specified number of months
              to the specified <see cref="T:System.DateTime"></see>.
            </returns>
      <param name="months">
              The number of months to add. 
            </param>
      <param name="time">
              The <see cref="T:System.DateTime"></see> to which to add months. 
            </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
              months is less than -120000.-or- months is greater than 120000. 
            </exception>
      <exception cref="T:System.ArgumentException">
              The resulting <see cref="T:System.DateTime"></see> is outside the supported range. 
            </exception>
    </member>
    <member name="M:C1.Globalization.JapaneseCalendarEx.AddYears(System.DateTime,System.Int32)">
      <summary>
              Returns a <see cref="T:System.DateTime"></see> that is the specified number of years away from 
              the specified <see cref="T:System.DateTime"></see>.
            </summary>
      <returns>
              The <see cref="T:System.DateTime"></see> that results from adding the specified number of years to 
              the specified <see cref="T:System.DateTime"></see>.
            </returns>
      <param name="time">
              The <see cref="T:System.DateTime"></see> to which to add years. 
            </param>
      <param name="years">
              The number of years to add. 
            </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
              time is outside the supported range of the <see cref="T:JapaneseCalendarEx"></see> type.
              -or-years is less than -10,000 or greater than 10,000. 
            </exception>
      <exception cref="T:System.ArgumentException">
              The resulting <see cref="T:System.DateTime"></see> is outside the supported range. 
            </exception>
    </member>
    <member name="M:C1.Globalization.JapaneseCalendarEx.GetDayOfMonth(System.DateTime)">
      <summary>
              Returns the day of the month in the specified <see cref="T:System.DateTime"></see>.
            </summary>
      <returns>
              An integer from 1 to 31 that represents the day of the month in the 
              specified <see cref="T:System.DateTime"></see>.
            </returns>
      <param name="time">
              The <see cref="T:System.DateTime"></see> to read. 
            </param>
    </member>
    <member name="M:C1.Globalization.JapaneseCalendarEx.GetDayOfWeek(System.DateTime)">
      <summary>
              Returns the day of the week in the specified <see cref="T:System.DateTime"></see>.
            </summary>
      <returns>
              A <see cref="T:System.DayOfWeek"></see> value that represents the day of the week 
              in the specified <see cref="T:System.DateTime"></see>.
            </returns>
      <param name="time">
              The <see cref="T:System.DateTime"></see> to read. 
            </param>
    </member>
    <member name="M:C1.Globalization.JapaneseCalendarEx.GetDayOfYear(System.DateTime)">
      <summary>
              Returns the day of the year in the specified <see cref="T:System.DateTime"></see>.
            </summary>
      <returns>
              An integer from 1 to 366 that represents the day of the year in the specified <see cref="T:System.DateTime"></see>.
            </returns>
      <param name="time">
              The <see cref="T:System.DateTime"></see> to read. 
            </param>
    </member>
    <member name="M:C1.Globalization.JapaneseCalendarEx.GetDaysInMonth(System.Int32,System.Int32,System.Int32)">
      <summary>
              Returns the number of days in the specified month in the specified year in the specified era.
            </summary>
      <returns>
              The number of days in the specified month in the specified year in the specified era.
            </returns>
      <param name="era">
              An integer that represents the era. 
            </param>
      <param name="month">
              An integer from 1 to 12 that represents the month. 
            </param>
      <param name="year">
              An integer that represents the year. 
            </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
              year is outside the range supported by the calendar.-or- month is outside the range supported by the calendar.
              -or- era is outside the range supported by the calendar. 
            </exception>
    </member>
    <member name="M:C1.Globalization.JapaneseCalendarEx.GetDaysInYear(System.Int32,System.Int32)">
      <summary>
              Returns the number of days in the specified year in the specified era.
            </summary>
      <returns>
              The number of days in the specified year in the specified era.
            </returns>
      <param name="era">
              An integer that represents the era. 
            </param>
      <param name="year">
              An integer that represents the year. 
            </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
              year is outside the range supported by the calendar.-or- era is outside the range supported by the calendar. 
            </exception>
    </member>
    <member name="M:C1.Globalization.JapaneseCalendarEx.GetEra(System.DateTime)">
      <summary>
              Returns the era in the specified <see cref="T:System.DateTime"></see>.
            </summary>
      <returns>
              An integer that represents the era in the specified <see cref="T:System.DateTime"></see>.
            </returns>
      <param name="dateTime">
              The <see cref="T:System.DateTime"></see> to read. 
            </param>
    </member>
    <member name="M:C1.Globalization.JapaneseCalendarEx.GetLeapMonth(System.Int32,System.Int32)">
      <summary>
              Calculates the leap month for a specified year and era.
            </summary>
      <returns>
              The return value is always 0 because the <see cref="T:JapaneseCalendarEx"></see> type
              does not support the notion of a leap month.
            </returns>
      <param name="era">
              An era.
            </param>
      <param name="year">
              A year.
            </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
              year or era is outside the range supported by the <see cref="T:JapaneseCalendarEx"></see> type.
            </exception>
    </member>
    <member name="M:C1.Globalization.JapaneseCalendarEx.GetMonth(System.DateTime)">
      <summary>
              Returns the month in the specified <see cref="T:System.DateTime"></see>.
            </summary>
      <returns>
              An integer from 1 to 12 that represents the month in the specified <see cref="T:System.DateTime"></see>.
            </returns>
      <param name="time">
              The <see cref="T:System.DateTime"></see> to read. 
            </param>
    </member>
    <member name="M:C1.Globalization.JapaneseCalendarEx.GetMonthsInYear(System.Int32,System.Int32)">
      <summary>
              Returns the number of months in the specified year in the specified era.
            </summary>
      <returns>
              The return value is always 12.
            </returns>
      <param name="era">
              An integer that represents the era. 
            </param>
      <param name="year">
              An integer that represents the year. 
            </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
              year is outside the range supported by the calendar.-or- era is outside the range supported by the calendar. 
            </exception>
    </member>
    <member name="M:C1.Globalization.JapaneseCalendarEx.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)">
      <summary>
              Returns the week of the year that includes the date in the specified <see cref="T:System.DateTime"></see> object.
            </summary>
      <returns>
              A 1-based integer that represents the week of the year that includes the date in the time parameter.
            </returns>
      <param name="rule">
              One of the <see cref="T:System.Globalization.CalendarWeekRule"></see> values that defines a calendar week. 
            </param>
      <param name="firstDayOfWeek">
              One of the <see cref="T:System.DayOfWeek"></see> values that represents the first day of the week. 
            </param>
      <param name="time">
              The <see cref="T:System.DateTime"></see> object to read. 
            </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
              time or firstDayOfWeek is outside the range supported by the calendar.
              -or- rule is not a valid <see cref="T:System.Globalization.CalendarWeekRule"></see> value. 
            </exception>
    </member>
    <member name="M:C1.Globalization.JapaneseCalendarEx.GetYear(System.DateTime)">
      <summary>
              Returns the year in the specified <see cref="T:System.DateTime"></see>.
            </summary>
      <returns>
              An integer that represents the year in the specified <see cref="T:System.DateTime"></see>.
            </returns>
      <param name="dateTime">
              The <see cref="T:System.DateTime"></see> to read. 
            </param>
    </member>
    <member name="M:C1.Globalization.JapaneseCalendarEx.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
              Determines whether the specified date in the specified era is a leap day.
            </summary>
      <returns>
              true, if the specified day is a leap day; otherwise, false.
            </returns>
      <param name="era">
              An integer that represents the era. 
            </param>
      <param name="month">
              An integer from 1 to 12 that represents the month. 
            </param>
      <param name="day">
              An integer from 1 to 31 that represents the day. 
            </param>
      <param name="year">
              An integer that represents the year. 
            </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
              year is outside the range supported by the calendar.-or- month is outside the range supported by the calendar.
              -or- day is outside the range supported by the calendar.-or- era is outside the range supported by the calendar. 
            </exception>
    </member>
    <member name="M:C1.Globalization.JapaneseCalendarEx.IsLeapMonth(System.Int32,System.Int32,System.Int32)">
      <summary>
              Determines whether the specified month in the specified year in the specified era is a leap month.
            </summary>
      <returns>
              This method always returns false, unless overridden by a derived class.
            </returns>
      <param name="era">
              An integer that represents the era. 
            </param>
      <param name="month">
              An integer from 1 to 12 that represents the month. 
            </param>
      <param name="year">
              An integer that represents the year. 
            </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
              year is outside the range supported by the calendar.-or- month is outside the range supported by the calendar.
              -or- era is outside the range supported by the calendar. 
            </exception>
    </member>
    <member name="M:C1.Globalization.JapaneseCalendarEx.IsLeapYear(System.Int32,System.Int32)">
      <summary>
              Determines whether the specified year in the specified era is a leap year.
            </summary>
      <returns>
              true, if the specified year is a leap year; otherwise, false.
            </returns>
      <param name="era">
              An integer that represents the era. 
            </param>
      <param name="year">
              An integer that represents the year. 
            </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
              year is outside the range supported by the calendar.
              -or- era is outside the range supported by the calendar. 
            </exception>
    </member>
    <member name="M:C1.Globalization.JapaneseCalendarEx.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
              Returns a <see cref="T:System.DateTime"></see> that is set to the specified date and time in the specified era.
            </summary>
      <returns>
              The <see cref="T:System.DateTime"></see> that is set to the specified date and time in the current era.
            </returns>
      <param name="era">
              An integer that represents the era. 
            </param>
      <param name="month">
              An integer from 1 to 12 that represents the month. 
            </param>
      <param name="millisecond">
              An integer from 0 to 999 that represents the millisecond. 
            </param>
      <param name="day">
              An integer from 1 to 31 that represents the day. 
            </param>
      <param name="minute">
              An integer from 0 to 59 that represents the minute. 
            </param>
      <param name="year">
              An integer that represents the year. 
            </param>
      <param name="hour">
              An integer from 0 to 23 that represents the hour. 
            </param>
      <param name="second">
              An integer from 0 to 59 that represents the second. 
            </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
              year is outside the range supported by the calendar.-or- month is outside the range supported by the calendar.
              -or- day is outside the range supported by the calendar.-or- hour is less than zero or greater than 23.
              -or- minute is less than zero or greater than 59.-or- second is less than zero or greater than 59.
              -or- millisecond is less than zero or greater than 999.-or- era is outside the range supported by the calendar. 
            </exception>
    </member>
    <member name="M:C1.Globalization.JapaneseCalendarEx.AddJapaneseEra(System.Int32,System.DateTime,System.DateTime,System.String,System.String,System.String,System.String)">
      <summary>
            Adds a Japanese era in the calendar.
            </summary>
      <param name="era">Index of the era</param>
      <param name="startTime">Era start date</param>
      <param name="endTime">Era end date</param>
      <param name="eraName">Japanese era name</param>
      <param name="abbreviatedEraName">Abbreviated Japanese era name</param>
      <param name="englishEraName">English era name</param>
      <param name="symbolEraName">Symbolic era name</param>
    </member>
    <member name="T:C1.Globalization.JapaneseEraHelper">
      <summary>
            Helper static class that contains AddJapaneseEra function.
            </summary>
    </member>
    <member name="M:C1.Globalization.JapaneseEraHelper.ClearJapaneseEras">
      <summary>
            Clears the all Japanese Eras.
            </summary>
    </member>
    <member name="M:C1.Globalization.JapaneseEraHelper.AddJapaneseEra(System.Int32,System.DateTime,System.DateTime,System.String,System.String,System.String,System.String)">
      <summary>
            Adds era to the Japanese calendar.
            </summary>
      <param name="era">Era numeric id. Must be non-negative integer</param>
      <param name="startTime">Start day of the era.</param>
      <param name="endTime">End day of the era.</param>
      <param name="eraName">Japanese name of the era.</param>
      <param name="abbreviatedEraName">Short Japanese name of the era.</param>
      <param name="englishEraName">Era name in English. Optional.</param>
      <param name="symbolEraName">One Latin symbol era name.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
      </exception>
    </member>
    <member name="M:C1.Globalization.JapaneseEraHelper.ReadErasFromGCConfig(System.String)">
      <summary>
            Reads eras info from the GC configuration file.
            </summary>
      <param name="sectionName">Section name.</param>
    </member>
    <member name="T:C1.Framework.Text.Lexicons.RelationDirections">
      <summary>
              Define the relation direction.
            </summary>
      <remarks>
              A relation is a line link two terminal points: start point and end point.So the line has three directions:
            	1. from start to end; 
            	2. from end to start;
            	3. from start to end or from end to start.
            </remarks>
    </member>
    <member name="F:C1.Framework.Text.Lexicons.RelationDirections.Normal">
      <summary>
              The direction is form start to end.
            </summary>
    </member>
    <member name="F:C1.Framework.Text.Lexicons.RelationDirections.Reverse">
      <summary>
              The direction is form end to start.
            </summary>
    </member>
    <member name="F:C1.Framework.Text.Lexicons.RelationDirections.Bidirectional">
      <summary>
              The direction is bidirectional.
            </summary>
    </member>
    <member name="T:C1.Framework.Text.Lexicons.IRelation">
      <summary>
              Abstract a general relation.
            </summary>
      <remarks>
              A realtion contains tow terminal points and direction
            </remarks>
    </member>
    <member name="P:C1.Framework.Text.Lexicons.IRelation.Start">
      <summary>
              Gets the start point.
            </summary>
      <value>
              A <b>object</b> indicates the start point.
            </value>
    </member>
    <member name="P:C1.Framework.Text.Lexicons.IRelation.End">
      <summary>
              Gets the end point.
            </summary>
      <value>
              A <b>object</b> indicates the end point.
            </value>
    </member>
    <member name="P:C1.Framework.Text.Lexicons.IRelation.Direction">
      <summary>
              Gets the relation direction.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Text.Lexicons.RelationDirections" /> indicates the direction.
            </value>
    </member>
    <member name="T:C1.Framework.Text.Lexicons.RelationSet">
      <summary>
              Define a relation collection.
            </summary>
    </member>
    <member name="P:C1.Framework.Text.Lexicons.RelationSet.Relations">
      <summary>
              Gets the constraints;
            </summary>
      <value>
              A <see cref="T:System.Collections.IList" /> used to save the relations.
            </value>
    </member>
    <member name="M:C1.Framework.Text.Lexicons.RelationSet.Add(C1.Framework.Text.Lexicons.IRelation)">
      <summary>
              Add a relation to the collection.
            </summary>
      <param name="relation">
              The relation to be added.
            </param>
    </member>
    <member name="M:C1.Framework.Text.Lexicons.RelationSet.Remove(C1.Framework.Text.Lexicons.IRelation)">
      <summary>
              Remove the relation form the collection.
            </summary>
      <param name="relation">
              The relation to be removed.
            </param>
    </member>
    <member name="M:C1.Framework.Text.Lexicons.RelationSet.To(System.Object[])">
      <summary>
              Form the start set to end set.
            </summary>
      <param name="starts">
              The start points set.
            </param>
      <returns>
              return the end points set.
            </returns>
    </member>
    <member name="M:C1.Framework.Text.Lexicons.RelationSet.Form(System.Object[])">
      <summary>
              Form the end set to the start set.
            </summary>
      <param name="ends">
              The end points set.
            </param>
      <returns>
              return the start points set.
            </returns>
    </member>
    <member name="T:C1.Framework.Text.Lexicons.Relation">
      <summary>
              A general implementation for the <see cref="T:C1.Framework.Text.Lexicons.IRelation" /> interface.
            </summary>
    </member>
    <member name="M:C1.Framework.Text.Lexicons.Relation.#ctor(System.Object,System.Object)">
      <summary>
              Constructor.
            </summary>
      <param name="start">
              A <b>object</b> indicates the start point.
            </param>
      <param name="end">
              A <b>object</b> indicates the end point.
            </param>
    </member>
    <member name="M:C1.Framework.Text.Lexicons.Relation.#ctor(System.Object,System.Object,C1.Framework.Text.Lexicons.RelationDirections)">
      <summary>
             Constructor.
            </summary>
      <param name="start">
              A <b>object</b> indicates the start point.
            </param>
      <param name="end">
              A <b>object</b> indicates the end point.
            </param>
      <param name="direction">
              A <b>RelationDirections</b> indicates the direction.
            </param>
    </member>
    <member name="P:C1.Framework.Text.Lexicons.Relation.Start">
      <summary>
              Gets the start.
            </summary>
      <value>
              A <b>object</b> indicates the start point.
            </value>
    </member>
    <member name="P:C1.Framework.Text.Lexicons.Relation.End">
      <summary>
              Gets the end.
            </summary>
      <value>
              A <b>object</b> indicates the end point.
            </value>
    </member>
    <member name="P:C1.Framework.Text.Lexicons.Relation.Direction">
      <summary>
              Gets the direction.
            </summary>
      <value>
              A <b>RelationDirections</b> indicates the direction.
            </value>
    </member>
    <member name="T:C1.Framework.Text.Lexicons.IPattern">
      <summary>
             Defines the IPattern interface.
            </summary>
      <remarks>
              Pattern can match a word in the text.
            </remarks>
    </member>
    <member name="M:C1.Framework.Text.Lexicons.IPattern.Match(System.String,System.Int32)">
      <summary>
              Match the text.
            </summary>
      <param name="text">
              The text.
            </param>
      <param name="startIndex">
              The start index.
            </param>
      <returns>
              Return the matched length. Zero indicates no matched.
            </returns>
    </member>
    <member name="T:C1.Framework.Text.Lexicons.ITextFilter">
      <summary>
              Defines the ITextFilter interface. 
            </summary>
      <remarks>
              A text filter used to convert special text to other text.
            </remarks>
    </member>
    <member name="M:C1.Framework.Text.Lexicons.ITextFilter.Filter(System.String)">
      <summary>
              Filter the text.
            </summary>
      <param name="text">
              The text before filter.
            </param>
      <returns>
              The text after filter.
            </returns>
    </member>
    <member name="T:C1.Framework.Text.Lexicons.StringPattern">
      <summary>
              Defines the StringPattern class.
            </summary>
      <remarks>
        <see cref="T:C1.Framework.Text.Lexicons.StringPattern" /> used to match a pecial string in the text.
            </remarks>
    </member>
    <member name="M:C1.Framework.Text.Lexicons.StringPattern.#ctor(System.String)">
      <summary>
              Constructor.
            </summary>
      <param name="text">
              The text.
            </param>
    </member>
    <member name="M:C1.Framework.Text.Lexicons.StringPattern.Match(System.String,System.Int32)">
      <summary>
              Match the text form start index.
            </summary>
    </member>
    <member name="T:C1.Framework.Text.Lexicons.StringQuantityPattern">
      <summary>
              Defines the <see cref="T:C1.Framework.Text.Lexicons.StringQuantityPattern" /> class.
            </summary>
      <remarks>
        <see cref="T:C1.Framework.Text.Lexicons.StringQuantityPattern" />, used to match a repeated string in the text. 
              <b>minimum</b> indicates the mininum repeated times.
              <b>maximum</b> indicates the maxinum repeated times.
            </remarks>
    </member>
    <member name="M:C1.Framework.Text.Lexicons.StringQuantityPattern.#ctor(System.String,System.Int32,System.Int32)">
      <summary>
              Constructor.
            </summary>
      <param name="text">
              The repeated text.
            </param>
      <param name="minimum">
              The minimum repeated times.
            </param>
      <param name="maximum">
              The maximum repeated times.
            </param>
    </member>
    <member name="M:C1.Framework.Text.Lexicons.StringQuantityPattern.Match(System.String,System.Int32)">
      <summary>
              Match the text form start index.
            </summary>
      <param name="text">
              The text.
            </param>
      <param name="startIndex">
              The start index.
            </param>
      <returns>
              Return the matched length. Zero indicates no matched.
            </returns>
    </member>
    <member name="T:C1.Framework.Text.Lexicons.CharacterQuotationPattern">
      <summary>
              Defines the <see cref="T:C1.Framework.Text.Lexicons.CharacterQuotationPattern" /> class.
            </summary>
      <remarks>
        <see cref="T:C1.Framework.Text.Lexicons.CharacterQuotationPattern" />, used to match the quatation bracket witch a pair of character.
            </remarks>
    </member>
    <member name="M:C1.Framework.Text.Lexicons.CharacterQuotationPattern.#ctor(System.Char,System.Char,System.Char,System.Boolean)">
      <summary>
              Constructor.
            </summary>
      <param name="escape">
              The escape.
            </param>
      <param name="leftSymbol">
              The left symbol.
            </param>
      <param name="rightSymbol">
              The right symbol.
            </param>
      <param name="includeSymbol">
              The text include symbol.
            </param>
    </member>
    <member name="M:C1.Framework.Text.Lexicons.CharacterQuotationPattern.#ctor(System.Char,System.Char,System.Char,System.Boolean,System.Boolean)">
      <summary>
              Constructor.
            </summary>
      <param name="escape">
              The escape.
            </param>
      <param name="leftSymbol">
              The left symbol.
            </param>
      <param name="rightSymbol">
              The right symbol.
            </param>
      <param name="includeSymbol">
              The text include symbol.
            </param>
      <param name="includeEscape">
              The text include escape.
            </param>
      <summary>
              Indicates if the text include the escape.
            </summary>
    </member>
    <member name="M:C1.Framework.Text.Lexicons.CharacterQuotationPattern.Match(System.String,System.Int32)">
      <summary>
              Match the text form start index.
            </summary>
      <param name="text">
              The text.
            </param>
      <param name="startIndex">
              The start index.
            </param>
      <returns>
              Return the matched length. Zero indicates no matched.
            </returns>
    </member>
    <member name="M:C1.Framework.Text.Lexicons.CharacterQuotationPattern.Filter(System.String)">
      <summary>
              Filter the text.
            </summary>
      <param name="text">
              The text before filtering.
            </param>
      <returns>
              Returns the text after filtering.
            </returns>
    </member>
    <member name="T:C1.Framework.Text.Lexicons.LexiconCharacterQuotationPattern">
      <summary>
              Defines the <see cref="T:C1.Framework.Text.Lexicons.CharacterQuotationPattern" /> class.
            </summary>
      <remarks>
        <see cref="T:C1.Framework.Text.Lexicons.CharacterQuotationPattern" />, used to match key work with a sub lexicon.
            </remarks>
    </member>
    <member name="M:C1.Framework.Text.Lexicons.LexiconCharacterQuotationPattern.#ctor(System.Char,System.Char,System.Char,C1.Framework.Text.Lexicons.Lexicon)">
      <summary>
              Constructor.
            </summary>
      <param name="escape">
              The escape.
            </param>
      <param name="leftSymbol">
              The left symbol.
            </param>
      <param name="rightSymbol">
              The right symbol.
            </param>
      <param name="content">
              The content.
            </param>
    </member>
    <member name="M:C1.Framework.Text.Lexicons.LexiconCharacterQuotationPattern.Match(System.String,System.Int32)">
      <summary>
            Match the text form start index.
            </summary>
      <param name="text">
              The text.
            </param>
      <param name="startIndex">
              The start index.
            </param>
      <returns>
              Return the matched length. Zero indicates no matched.
            </returns>
    </member>
    <member name="M:C1.Framework.Text.Lexicons.LexiconCharacterQuotationPattern.Filter(System.String)">
      <summary>
              Filter the text.
            </summary>
      <param name="text">
              The text before filtering.
            </param>
      <returns>
              Returns the text after filtering.
            </returns>
    </member>
    <member name="T:C1.Framework.Text.Lexicons.ExcludeStringsPattern">
      <summary>
              Defines the <see cref="T:C1.Framework.Text.Lexicons.ExcludeStringsPattern" /> class.
            </summary>
      <remarks>
        <see cref="T:C1.Framework.Text.Lexicons.ExcludeStringsPattern" />, used to exclude special string form the text. 
              As soon as it find the special string, it will throw a exception.
            </remarks>
    </member>
    <member name="M:C1.Framework.Text.Lexicons.ExcludeStringsPattern.#ctor(System.String[],System.String)">
      <summary>
              Constructor.
            </summary>
      <param name="textList">
              The text item used to exclude during the matching.
            </param>
      <param name="message">
              The message if for throwing exception when find matched word in the text list.
            </param>
    </member>
    <member name="M:C1.Framework.Text.Lexicons.ExcludeStringsPattern.Match(System.String,System.Int32)">
      <summary>
              Match the text form start index.
            </summary>
      <param name="text">
              The text.
            </param>
      <param name="startIndex">
              The start index.
            </param>
      <returns>
              Return the matched length. Zero indicates no matched.
            </returns>
    </member>
    <member name="T:C1.Framework.Text.Lexicons.MatchingSwitches">
      <summary>
              Defines a serial of matched switches.
            </summary>
      <remarks>
              Use this enumeration can control the parse process.
            </remarks>
    </member>
    <member name="F:C1.Framework.Text.Lexicons.MatchingSwitches.None">
      <summary>
              Indicates no switch.
            </summary>
    </member>
    <member name="F:C1.Framework.Text.Lexicons.MatchingSwitches.Priority">
      <summary>
              This pattern will be matched before other patterns and escape.
            </summary>
    </member>
    <member name="T:C1.Framework.Text.Lexicons.LexiconItem">
      <summary>
              Defines the <see cref="T:C1.Framework.Text.Lexicons.LexiconItem" /> class.
            </summary>
      <remarks>
              Attached a id with a pattern.
            </remarks>
    </member>
    <member name="M:C1.Framework.Text.Lexicons.LexiconItem.#ctor(System.Object,C1.Framework.Text.Lexicons.IPattern)">
      <summary>
              Constructor.
            </summary>
      <param name="id">
              The id.
            </param>
      <param name="pattern">
              The pattern.
            </param>
    </member>
    <member name="M:C1.Framework.Text.Lexicons.LexiconItem.#ctor(System.Object,C1.Framework.Text.Lexicons.IPattern,C1.Framework.Text.Lexicons.MatchingSwitches)">
      <summary>
              Constructor.
            </summary>
      <param name="id">
              The id.
            </param>
      <param name="pattern">
              The pattern.
            </param>
      <param name="switches">
              The switches.
            </param>
    </member>
    <member name="P:C1.Framework.Text.Lexicons.LexiconItem.ID">
      <summary>
              Gets the id.
            </summary>
      <value>
              A <b>object</b> used as id of the item.
            </value>
    </member>
    <member name="P:C1.Framework.Text.Lexicons.LexiconItem.Pattern">
      <summary>
              Gets the pattern.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Text.Lexicons.IPattern" /> used to match.
            </value>
    </member>
    <member name="P:C1.Framework.Text.Lexicons.LexiconItem.Switches">
      <summary>
              Gets the matching switches
            </summary>
      <value>
      </value>
    </member>
    <member name="T:C1.Framework.Text.Lexicons.Lexicon">
      <summary>
              Defines the Lexicon class.
            </summary>
      <remarks>
              Provides a tool, that can parse the key word form the text.
              Each key word take effecting by a IPattern interface, lexicon will try to find it by the order.
              The find is described by <see cref="T:C1.Framework.Text.Lexicons.Lexicon.Match" />.
              You also can set the two kinds of relation ship: Repellency and  Dependency.
            	Repellency, make a pattern not take effecting, when a pattern has been matched.
            	Dependency, make a pattern not take effecting, until a pattern has been matched.    
            </remarks>
    </member>
    <member name="T:C1.Framework.Text.Lexicons.Lexicon.Match">
      <summary>
              Defines the <see cref="T:C1.Framework.Text.Lexicons.Lexicon.Match" /> class.
            </summary>
      <remarks>
              A match indicates the finding of special pattern during the parse processing.
            </remarks>
    </member>
    <member name="M:C1.Framework.Text.Lexicons.Lexicon.Match.#ctor(C1.Framework.Text.Lexicons.Lexicon,System.String)">
      <summary>
            Construtor.
            </summary>
      <param name="owner">
              The owner.
            </param>
      <param name="text">
              The orignal text.
            </param>
    </member>
    <member name="P:C1.Framework.Text.Lexicons.Lexicon.Match.Success">
      <summary>
              Gets a value indicates whether is a sucess match.
            </summary>
      <value>
              A <b>bool</b> indicates a sucess match.
            </value>
    </member>
    <member name="P:C1.Framework.Text.Lexicons.Lexicon.Match.ID">
      <summary>
              Gets the id.
            </summary>
      <value>
              A <b>object</b> indicates the matched id.
            </value>
    </member>
    <member name="P:C1.Framework.Text.Lexicons.Lexicon.Match.Text">
      <summary>
              Gets the mathed text.
            </summary>
      <value>
              A <b>string</b> indicates the matched text.
            </value>
    </member>
    <member name="M:C1.Framework.Text.Lexicons.Lexicon.Match.NextMatch">
      <summary>
             Gets the next match.
            </summary>
      <returns>
              A next <see cref="T:C1.Framework.Text.Lexicons.Lexicon.Match" />.
            </returns>
    </member>
    <member name="T:C1.Framework.Text.Lexicons.Lexicon.MatchCollection">
      <summary>
              Defines the match collection.
            </summary>
      <remarks>
              Used to saves and gets a serial matches.
            </remarks>
    </member>
    <member name="M:C1.Framework.Text.Lexicons.Lexicon.MatchCollection.#ctor(System.Collections.ICollection)">
      <summary>
              Constructor.
            </summary>
      <param name="matches">
              The matches.
            </param>
    </member>
    <member name="P:C1.Framework.Text.Lexicons.Lexicon.MatchCollection.Item(System.Int32)">
      <summary>
              Gets the match by special index.
            </summary>
      <value>
              The item at index.
            </value>
    </member>
    <member name="F:C1.Framework.Text.Lexicons.Lexicon.LiteralsID">
      <summary>
              Indicates the id of the literals.
            </summary>
    </member>
    <member name="F:C1.Framework.Text.Lexicons.Lexicon.AssertionID">
      <summary>
              Indicates the assertion id.
            </summary>
    </member>
    <member name="F:C1.Framework.Text.Lexicons.Lexicon.ESCAPE">
      <summary>
              Indicates the esacpe char.
            </summary>
    </member>
    <member name="M:C1.Framework.Text.Lexicons.Lexicon.#ctor">
      <summary>
              Constructor.
            </summary>
    </member>
    <member name="M:C1.Framework.Text.Lexicons.Lexicon.#ctor(System.Char,System.Object)">
      <summary>
             Constructor.
            </summary>
      <param name="escape">
              The escape.
            </param>
      <param name="literalsID">
              The literals id.
            </param>
    </member>
    <member name="P:C1.Framework.Text.Lexicons.Lexicon.Item(System.Int32)">
      <summary>
              Gets or sets the item by speical index.
            </summary>
      <value>
              The <see cref="T:C1.Framework.Text.Lexicons.LexiconItem" /> at the index.
            </value>
    </member>
    <member name="P:C1.Framework.Text.Lexicons.Lexicon.Count">
      <summary>
              Gets the item count.
            </summary>
      <value>
              A <b>int</b> value indicates the <see cref="T:C1.Framework.Text.Lexicons.LexiconItem" /> count in the collection.
            </value>
    </member>
    <member name="M:C1.Framework.Text.Lexicons.Lexicon.Add(C1.Framework.Text.Lexicons.LexiconItem)">
      <summary>
              Adds a item into the collection.
            </summary>
      <param name="item">
              The items.
            </param>
    </member>
    <member name="M:C1.Framework.Text.Lexicons.Lexicon.Remove(C1.Framework.Text.Lexicons.LexiconItem)">
      <summary>
              Remove a item form the collection.
            </summary>
      <param name="item">
              The item.
            </param>
    </member>
    <member name="M:C1.Framework.Text.Lexicons.Lexicon.BuildMatch(System.String)">
      <summary>
              Creates the first match.
            </summary>
      <param name="text">
              The text to be parsed.
            </param>
      <returns>
              The first match.
            </returns>
    </member>
    <member name="P:C1.Framework.Text.Lexicons.Lexicon.Repellency">
      <summary>
              Gets the repellency set.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Text.Lexicons.RelationSet" /> used to save the repellency relations.
            </value>
    </member>
    <member name="P:C1.Framework.Text.Lexicons.Lexicon.Dependency">
      <summary>
              Gets the dependency set.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Text.Lexicons.RelationSet" /> used to save the dependency relations.
            </value>
    </member>
    <member name="M:C1.Framework.Text.Lexicons.Lexicon.BuildMatches(System.String)">
      <summary>
              Gets the matches collection.
            </summary>
      <param name="text">
              The text to be parsed.
            </param>
      <returns>
              A <see cref="T:C1.Framework.Text.Lexicons.Lexicon.MatchCollection" /> contains the all matches.
            </returns>
    </member>
    <member name="T:C1.Framework.CharType">
      <summary>
              Defines the category of a Unicode character.  
            </summary>
    </member>
    <member name="F:C1.Framework.CharType.OtherChar">
      <summary>
              Indicates that the character is not of a particular category.
            </summary>
    </member>
    <member name="F:C1.Framework.CharType.Control">
      <summary>
              Indicates that the character is a control code.
            </summary>
    </member>
    <member name="F:C1.Framework.CharType.Numeric">
      <summary>
              Indicates that the character is a numeric digit.
            </summary>
    </member>
    <member name="F:C1.Framework.CharType.MathSymbol">
      <summary>
              Indicates that the character is a mathematical symbol.
            </summary>
    </member>
    <member name="F:C1.Framework.CharType.Symbol">
      <summary>
              Indicates that the character is a symbol.
            </summary>
    </member>
    <member name="F:C1.Framework.CharType.Punctuation">
      <summary>
              Indicates that the character is a punctuation. ( Open &amp; Close )
            </summary>
    </member>
    <member name="F:C1.Framework.CharType.Space">
      <summary>
              Indicates that the character is a space character.
            </summary>
    </member>
    <member name="F:C1.Framework.CharType.UpperCase">
      <summary>
              Indicates that the character is an upper case letter.
            </summary>
    </member>
    <member name="F:C1.Framework.CharType.LowerCase">
      <summary>
              Indicates that the character is a lower case letter.
            </summary>
    </member>
    <member name="F:C1.Framework.CharType.Katakana">
      <summary>
              Indicates that the character is a Japanese Katakana character.
            </summary>
    </member>
    <member name="F:C1.Framework.CharType.Hiragana">
      <summary>
              Indicates that the character is a Japanese Hiragana character.
            </summary>
    </member>
    <member name="F:C1.Framework.CharType.FarEastPunctation">
      <summary>
              Indicates that the character is a CJK punctuation.
            </summary>
    </member>
    <member name="F:C1.Framework.CharType.Hangul">
      <summary>
              Indicates that the character is a Hangal character.
            </summary>
    </member>
    <member name="F:C1.Framework.CharType.FullWidth">
      <summary>
              Indicates that the character is of full width.
            </summary>
    </member>
    <member name="T:C1.Framework.CharHelper">
      <summary>
              Represents the extension functions to the standard .NET Char type. The purpose for this is to provide better
              CJK (Chinese, Japanese, Korean ) character support.
            </summary>
    </member>
    <member name="F:C1.Framework.CharHelper.Null">
      <summary>
             Defines the Null char.
            </summary>
    </member>
    <member name="F:C1.Framework.CharHelper.Backspace">
      <summary>
              Defines the control char: Backspace
            </summary>
    </member>
    <member name="F:C1.Framework.CharHelper.Tab">
      <summary>
              Defines the control char: Tab.
            </summary>
    </member>
    <member name="F:C1.Framework.CharHelper.Space">
      <summary>
              Defines the control char: Space.
            </summary>
    </member>
    <member name="F:C1.Framework.CharHelper.MinValue">
      <summary>
              Represents the smallest possible value of a Char. 
              This field is constant.
            </summary>
    </member>
    <member name="F:C1.Framework.CharHelper.MaxValue">
      <summary>
              Represents the largest possible value of a Char. 
              This field is constant.
            </summary>
    </member>
    <member name="M:C1.Framework.CharHelper.GetCharType(System.Char)">
      <summary>
              Retrieves the type of character.
            </summary>
      <param name="c">A Unicode character.</param>
      <returns>
              A CharType representing the type of character of c.
            </returns>
    </member>
    <member name="M:C1.Framework.CharHelper.IsCharOfType(System.Char,C1.Framework.CharType)">
      <summary>
              Determines whether the specified character is of the
              specified type.
            </summary>
      <param name="c">A Unicode character.</param>
      <param name="type">A CharType type.</param>
      <returns>
              true if specified c and type matches the type of the
              character; otherwise false.
            </returns>
    </member>
    <member name="M:C1.Framework.CharHelper.IsMultiWidth(System.Char)">
      <summary>
              Indicates whether the specified Unicode character is 
              categorized as a multi-width character.
            </summary>
      <param name="c">A Unicode character.</param>
      <returns>
              true if c is a multi-width character; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Framework.CharHelper.IsMultiWidth(System.String,System.Int32)">
      <summary>
              Indicates whether the character at the specified position 
              in a specified string is categorized as a multi-width 
              character. 
            </summary>
      <param name="s">A string.</param>
      <param name="index">The character position in s.</param>
      <returns>
              true if the character at position index in s is a multi-width 
              character; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Framework.CharHelper.IsFullWidth(System.Char)">
      <summary>
              Indicates whether the specified Unicode character is a 
              full width character. Usually CJK characters are considers 
              as full widths.
            </summary>
      <param name="c">A Unicode character.</param>
      <returns>
              true if c is a full width character; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Framework.CharHelper.IsFullWidth(System.String,System.Int32)">
      <summary>
              Indicates wether the character at the specified position 
              in the specified string is a full width character. Usually 
              CJK characters are considers as full widths.
            </summary>
      <param name="s">A string.</param>
      <param name="index">The character position in s.</param>
      <returns>
              true if the character at position index in s is a full width 
              character; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Framework.CharHelper.IsOther(System.Char)">
      <summary>
              Indicates whether a Unicode character doesn't belong to
              any specific letter.
            </summary>
      <param name="c">A Unicode character.</param>
      <returns>
              true if c is doesn't a Katakana character; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Framework.CharHelper.IsControl(System.Char)">
      <summary>
              Indicates whether the specified Unicode character is 
              categorized as a control code.
            </summary>
      <param name="c">A Unicode character.</param>
      <returns>
              true if c is a control code; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Framework.CharHelper.IsControl(System.String,System.Int32)">
      <summary>
              Indicates wether the character at the specified position 
              in the specified string is a control code.
            </summary>
      <param name="s">A string.</param>
      <param name="index">The character position in s.</param>
      <returns>
              true if the character at position index in s is a control 
              code; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Framework.CharHelper.IsKatakana(System.Char)">
      <summary>
              Indicates whether the specified Unicode character is 
              categorized as a Katakana letter.
            </summary>
      <param name="c">A Unicode character.</param>
      <returns>
              true if c is a Katakana character; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Framework.CharHelper.IsKatakana(System.String,System.Int32)">
      <summary>
              Indicates wether the character at the specified position 
              in the specified string is a Katakana character.
            </summary>
      <param name="s">A string.</param>
      <param name="index">The character position in s.</param>
      <returns>
              true if the character at position index in s is a Katakana 
              character; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Framework.CharHelper.IsHiragana(System.Char)">
      <summary>
              Indicates whether the specified Unicode character is 
              categorized as a Hiragana letter.
            </summary>
      <param name="c">A Unicode character.</param>
      <returns>
              true if c is a Hiragana character; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Framework.CharHelper.IsHiragana(System.String,System.Int32)">
      <summary>
              Indicates wether the character at the specified position 
              in the specified string is a Hiragana character.
            </summary>
      <param name="s">A string.</param>
      <param name="index">The character position in s.</param>
      <returns>
              true if the character at position index in s is a Hiragana 
              character; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Framework.CharHelper.IsDigit(System.Char)">
      <summary>
              Indicates whether the specified Unicode character is 
              categorized as a Numeric digit.
            </summary>
      <param name="c">A Unicode character.</param>
      <returns>
              true if c is a Numeric character; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Framework.CharHelper.IsDigit(System.String,System.Int32)">
      <summary>
              Indicates wether the character at the specified position 
              in the specified string is a Numeric digit.
            </summary>
      <param name="s">A string.</param>
      <param name="index">The character position in s.</param>
      <returns>
              true if the character at position index in s is a Numeric 
              digit; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Framework.CharHelper.IsPunctuation(System.Char)">
      <summary>
              Indicates whether the specified Unicode character is 
              categorized as a Punctuation character.
            </summary>
      <param name="c">A Unicode character.</param>
      <returns>
              true if c is a Punctuation character; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Framework.CharHelper.IsPunctuation(System.String,System.Int32)">
      <summary>
              Indicates wether the character at the specified position 
              in the specified string is a Punctuation character.
            </summary>
      <param name="s">A string.</param>
      <param name="index">The character position in s.</param>
      <returns>
              true if the character at position index in s is a Punctuation 
              character; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Framework.CharHelper.IsMathSymbol(System.Char)">
      <summary>
              Indicates whether the specified Unicode character is 
              categorized as a mathematical symbol.
            </summary>
      <param name="c">A Unicode character.</param>
      <returns>
              true if c is a mathematical character; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Framework.CharHelper.IsMathSymbol(System.String,System.Int32)">
      <summary>
              Indicates wether the character at the specified position 
              in the specified string is a mathematical symbol.
            </summary>
      <param name="s">A string.</param>
      <param name="index">The character position in s.</param>
      <returns>
              true if the character at position index in s is a mathematical 
              character; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Framework.CharHelper.IsSymbol(System.Char)">
      <summary>
              Indicates whether the specified Unicode character is 
              categorized as a Symbol character.
            </summary>
      <param name="c">A Unicode character.</param>
      <returns>
              true if c is a Symbol character; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Framework.CharHelper.IsSymbol(System.String,System.Int32)">
      <summary>
              Indicates wether the character at the specified position 
              in the specified string is a Symbol character.
            </summary>
      <param name="s">A string.</param>
      <param name="index">The character position in s.</param>
      <returns>
              true if the character at position index in s is a Symbol 
              character; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Framework.CharHelper.IsLower(System.Char)">
      <summary>
              Indicates whether the specified Unicode character is 
              categorized as a Lowercase letter.
            </summary>
      <param name="c">A Unicode character.</param>
      <returns>
              true if c is a Lowercase letter; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Framework.CharHelper.IsLower(System.String,System.Int32)">
      <summary>
              Indicates wether the character at the specified position 
              in the specified string is a Lowercase letter.
            </summary>
      <param name="s">A string.</param>
      <param name="index">The character position in s.</param>
      <returns>
              true if the character at position index in s is a Lowercase 
              letter; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Framework.CharHelper.IsUpper(System.Char)">
      <summary>
              Indicates whether the specified Unicode character is 
              categorized as a Uppercase letter.
            </summary>
      <param name="c">A Unicode character.</param>
      <returns>
              true if c is a Uppercase letter; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Framework.CharHelper.IsUpper(System.String,System.Int32)">
      <summary>
              Indicates wether the character at the specified position 
              in the specified string is a Uppercase letter.
            </summary>
      <param name="s">A string.</param>
      <param name="index">The character position in s.</param>
      <returns>
              true if the character at position index in s is a Uppercase 
              letter; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Framework.CharHelper.IsDigitOrSymbol(System.Char)">
      <summary>
              Indicates whether the specified Unicode character is 
              categorized as a Numeric or a Math symbol.
            </summary>
      <param name="c">A Unicode character.</param>
      <returns>
              true if c is a numeric or symbol character; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Framework.CharHelper.IsDigitOrSymbol(System.String,System.Int32)">
      <summary>
              Indicates wether the character at the specified position 
              in the specified string is a Numeric or a Math symbol.
            </summary>
      <param name="s">A string.</param>
      <param name="index">The character position in s.</param>
      <returns>
              true if the character at position index in s is a Numeric 
              or a Math symbol; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Framework.CharHelper.IsAlphabet(System.Char)">
      <summary>
              Indicates whether the specified Unicode character is 
              categorized as a alphabet letter.
            </summary>
      <param name="c">A Unicode character.</param>
      <returns>
              true if c is a alphabet letter; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Framework.CharHelper.IsAlphabet(System.String,System.Int32)">
      <summary>
              Indicates wether the character at the specified position 
              in the specified string is a alphabet letter.
            </summary>
      <param name="s">A string.</param>
      <param name="index">The character position in s.</param>
      <returns>
              true if the character at position index in s is a alphabet 
              letter; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Framework.CharHelper.IsAlphaOrDigit(System.Char)">
      <summary>
              Indicates whether the specified Unicode character is 
              categorized as a alphabet letter or digit.
            </summary>
      <param name="c">A Unicode character.</param>
      <returns>
              true if c is a alphabet letter or digit; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Framework.CharHelper.IsAlphaOrDigit(System.String,System.Int32)">
      <summary>
              Indicates wether the character at the specified position 
              in the specified string is a alphabet letter or digit.
            </summary>
      <param name="s">A string.</param>
      <param name="index">The character position in s.</param>
      <returns>
              true if the character at position index in s is a alphabet 
              letter or digit; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Framework.CharHelper.IsUpperKana(System.Char)">
      <summary>
              Indicates whether the specified Unicode character is 
              categorized as a upper (capital) case kana.
            </summary>
      <param name="c">A Unicode character.</param>
      <returns>
              true if c is a kana upper (capital) case; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Framework.CharHelper.IsLowerKana(System.Char)">
      <summary>
              Indicates whether the specified Unicode character is 
              categorized as a lower (normal) case kana.
            </summary>
      <param name="c">A Unicode character.</param>
      <returns>
              true if c is a kana lower (normal) case; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Framework.CharHelper.HasLowerKana(System.Char)">
      <summary>
              Determines whether the related kana has a related lower case.
            </summary>
      <param name="c">A Unicode character.</param>
      <returns>
              true if c has a related lower case kana; otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Framework.CharHelper.ToFullWidth(System.Char)">
      <summary>
              Transforms the specified character to a full width character
              if possible. Ranges are Latin basic, Katakana and Hangul 
              characters.
            </summary>
      <param name="c">A Unicode character.</param>
      <returns>
              Full width character of c, otherwise original character
              returned.
            </returns>
    </member>
    <member name="M:C1.Framework.CharHelper.ToFullWidth(System.Boolean@,System.Char[])">
      <summary>
              Tansforms the specified character to a full width character
              if possible. This method differs from the other where it 
              takes on an array of characters. In FarEast country there 
              are times when multiple half width characters make a one
              full width character.
            </summary>
      <param name="c">An array of characters.</param>
      <param name="processedAll">
              When the soundex character is processed a <b>true</b> is 
              returned; otherwise, a <b>false</b> returned.
            </param>
      <returns>
              Full width character of c, otherwise the original character
              is returned.
            </returns>
    </member>
    <member name="M:C1.Framework.CharHelper.ToHalfWidth(System.Char)">
      <summary>
              Converts the value of a Unicode character to it's half
              width equivalent. Ranges are Latin basic, Katakana and 
              Hangul characters.
            </summary>
      <param name="c">A Unicode character.</param>
      <returns>
        <para>The half width equivalent of c.</para>
        <para>- or -</para>
        <para>
                 The unchanged value of c, if c is already a half
                 width or not a multi-width character.
              </para>
      </returns>
    </member>
    <member name="M:C1.Framework.CharHelper.ToHalfWidthEx(System.Char)">
      <summary>
              Transforms the specified character to a half width character
              if possible. This method differs from the ToHalfWidth method
              where it tries to return the accurate half width character - 
              which most likely happens in FarEast countries.
            </summary>
      <param name="c">A Unicode character.</param>
      <returns>
              A character array representing c in half width form. In most
              cases this array will have only one element.
            </returns>
    </member>
    <member name="M:C1.Framework.CharHelper.ToKatakana(System.Char)">
      <summary>
              Converts the value of a Unicode character to it's 
              "Katakana" equivalent. Special character handling 
              for the Japanese language.
            </summary>
      <param name="c">A Unicode character.</param>
      <returns>
        <para>The Katakana equivalent of c.</para>
        <para>- or -</para>
        <para>
                 The unchanged value of c, if c is already a 
                 Katakana or not Hiragana.
              </para>
      </returns>
    </member>
    <member name="M:C1.Framework.CharHelper.ToKatakana(System.Char,System.Boolean)">
      <summary>
              Converts the value of a Unicode character to it's 
              "Katakana" equivalent with an optional setting of
              full or half width. Special character handling for
              the Japanese language 
            </summary>
      <param name="c">
              A Unicode character.
            </param>
      <param name="fullWidth">
        <b>true</b> to return a full width Katakana, and 
              <b>false</b> to return a half width Katakana.
            </param>
      <returns>
      </returns>
      <returns>
        <para>The Katakana equivalent of c.</para>
        <para>- or -</para>
        <para>
                 The unchanged value of c, if c is already a 
                 Katakana or not Hiragana.
              </para>
      </returns>
    </member>
    <member name="M:C1.Framework.CharHelper.ToHiragana(System.Char)">
      <summary>
              Converts the value of a Unicode character to it's 
              "Hiragana" equivalent. Special character handling 
              for the Japanese language.
            </summary>
      <param name="c">A Unicode character.</param>
      <returns>
        <para>The Hiragana equivalent of c.</para>
        <para>- or -</para>
        <para>
                 The unchanged value of c, if c is already a 
                 Hiragana or not Katakana.
              </para>
      </returns>
    </member>
    <member name="M:C1.Framework.CharHelper.ToAnsi(System.Char)">
      <summary>
              Converts the value of a Unicode character to it's
              ANSI equivalent.
            </summary>
      <param name="c">A Unicode character.</param>
      <returns>
              An Ansi character equivalent of c in the current culture.
            </returns>
      <remarks>
              Encodes the specified Unicode character to an ANSI
              character using the current culture.
            </remarks>
    </member>
    <member name="M:C1.Framework.CharHelper.ToAnsi(System.Char,System.Globalization.CultureInfo)">
      <summary>
              Converts the value of a Unicode character to it's
              ANSI equivalent using the specified culture information.
            </summary>
      <param name="c">A Unicode character.</param>
      <param name="culture">
              A CultureInfo object. If a null reference is passed, the 
              current culture is assumed. 
            </param>
      <returns>
              An Ansi character equivalent of c using the specified culture.
            </returns>
    </member>
    <member name="M:C1.Framework.CharHelper.ToSJIS(System.Char)">
      <summary>
              Converts the value of a JIS (Japanese encoding) character
              to it's Shift-JIS equivalent.
            </summary>
      <param name="c">A JIS character.</param>
      <returns>
        <para>The Shift-JIS equivalent of c.</para>
        <para>- or -</para>
        <para>
                The unchanged value of c, if c is not a full width
            	character.
              </para>
      </returns>
      <remarks>
        <newpara>
                Converts a JIS character to it's equivalent Shift-JIS
                character - used in the Japanese language.
              </newpara>
        <newpara>
                Please note that this method does not take a Unicode
                character as it's parameter - use the character value
                returned by the "ToJIS" method.
              </newpara>
      </remarks>
    </member>
    <member name="M:C1.Framework.CharHelper.ToJIS(System.Char)">
      <summary>
              Converts the value of a Shift-JIS (Japanese encoding) 
              character to it's JIS equivalent.
            </summary>
      <param name="c">A Shift-JIS character.</param>
      <returns>
        <para>The JIS equivalent of c.</para>
        <para>- or -</para>
        <para>
                The unchanged value of c, if c is not a full width
            	character.
              </para>
      </returns>
      <remarks>
        <newpara>
                Converts a Shift-JIS character to it's equivalent JIS
                character - used in the Japanese language.
              </newpara>
        <newpara>
                Please note that this method does not take a Unicode
                character as it's parameter - use the character value
                returned by the "ToSJIS" method.
              </newpara>
      </remarks>
    </member>
    <member name="M:C1.Framework.CharHelper.FromAnsi(System.Char)">
      <summary>
              Converts the value of an ANSI character to it's Unicode
              equivalent.
            </summary>
      <param name="c">An ANSI character.</param>
      <returns>
              A Unicode character equivalent of c.
            </returns>
    </member>
    <member name="M:C1.Framework.CharHelper.FromAnsi(System.Char,System.Globalization.CultureInfo)">
      <summary>
              Converts the value of a ANSI character to it's Unicode
              equivalent using the specified culture information.
            </summary>
      <param name="c">An ANSI character.</param>
      <param name="culture">
              A CultureInfo object. If a null reference is passed, the 
              current culture is assumed. 
            </param>
      <returns>
              An Unicode character equivalent of c using the specified culture.
            </returns>
    </member>
    <member name="M:C1.Framework.CharHelper.ToUpperKana(System.Char)">
      <summary>
              Converts an lower (normal) case kana into a upper (capital) case.
            </summary>
      <param name="c">A Unicode character.</param>
      <returns>The equivalent kana upper case character.</returns>
    </member>
    <member name="M:C1.Framework.CharHelper.ToLowerKana(System.Char)">
      <summary>
              Converts an upper (capital) case kana into a lower case (normal).
            </summary>
      <param name="c">A Unicode character.</param>
      <returns>The equivalent kana lower case character.</returns>
    </member>
    <member name="T:C1.Framework.EnumHelper">
      <summary>
              Represents the helper class for Validating whether an object is valid or not
            </summary>
    </member>
    <member name="M:C1.Framework.EnumHelper.IsValid(System.Int32,System.Int32,System.Int32)">
      <summary>
              Check current value is a valid Enum type
            </summary>
      <param name="enumValue">
              An <b>int</b> indivate the value you want to check
            </param>
      <param name="minValueOfEnum">
              An <b>int</b> indicate the minimum value of your enum type
            </param>
      <param name="maxValueOfEnum">
              An <b>int</b> indicate the maximum value of your enum type
            </param>
      <returns>
              A <b>bool</b> indicate the check result, if current value is a valid enum type, return <b>true</b>;
              otherwise <b>false</b></returns>
      <remarks>
              This method is applicable to check a <b>Sequential</b> defined not-flag-style enum type
            </remarks>
    </member>
    <member name="M:C1.Framework.EnumHelper.IsValid(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
              Check current value is a valid Enum type
            </summary>
      <param name="enumValue">
              An <b>int</b> indivate the value you want to check
            </param>
      <param name="minValueOfEnum">
              An <b>int</b> indicate the minimum value of your enum type
            </param>
      <param name="maxValueOfEnum">
              An <b>int</b> indicate the maximum value of your enum type
            </param>
      <param name="maxNumberOfBitsOn">
              An <b>int</b> indicate the max count of bit for test enum value
            </param>
      <returns>
              A <b>bool</b> indicate the check result, if current value is a valid enum type, return <b>true</b>;
              otherwise <b>false</b></returns>
      <remarks>
              This method is applicable to check a <b>Sequential</b> defined flag-style enum type
            <example>
              There is a enum value you want to test is <b>0x5f</b>, in this enum type, the min value is <b>0x0f</b>,
              and max value is <b>0x100</b>, then this method called below can test its validation:
            <code>
                EnumHelper.IsValid(0x5f, 0x0f, 0x100, 8);
            </code>
              In this scenario, the four parameter is <b>8</b>, because the max value is <b>0x100</b>(Binary as 100000000),
              the max bits on value is <b>0xff</b> (Binary as 11111111), it's the max number of bits on
            </example></remarks>
    </member>
    <member name="T:C1.Framework.Mathematics.Fraction">
      <summary>
              Represents nn expression that indicates the quotient of two quantities.
            </summary>
    </member>
    <member name="M:C1.Framework.Mathematics.Fraction.#ctor(System.Double,System.Double)">
      <summary>
              Initializes a new instance of <see cref="T:C1.Framework.Mathematics.Fraction" /> structure with the specified numerator and denominator.
            </summary>
      <param name="numerator">
              A <b>double</b> that indicates the number written above the line in a common fraction to indicate
              the number of parts of the whole.
            </param>
      <param name="denominator">
              A <b>double</b> that indicats the number written below the line in a common fraction that indicates 
              the number of parts into which one whole is divided.
            </param>
    </member>
    <member name="P:C1.Framework.Mathematics.Fraction.Numerator">
      <summary>
              Gets or sets the numertor of the fraction.
            </summary>
      <value>
              A <b>double</b> that indicates the number written above the line in a common fraction to indicate
              the number of parts of the whole.
            </value>
    </member>
    <member name="P:C1.Framework.Mathematics.Fraction.Denominator">
      <summary>
              Gets or sets the denominator of the fraction.
            </summary>
      <value>
              A <b>double</b> that indicats the number written below the line in a common fraction that indicates 
              the number of parts into which one whole is divided.
            </value>
    </member>
    <member name="M:C1.Framework.Mathematics.Fraction.op_UnaryNegation(C1.Framework.Mathematics.Fraction)">
      <summary>
              Defines the unary "-" operator.
            </summary>
    </member>
    <member name="M:C1.Framework.Mathematics.Fraction.op_Addition(C1.Framework.Mathematics.Fraction,C1.Framework.Mathematics.Fraction)">
      <summary>
              Defines the binary "+" operator.
            </summary>
    </member>
    <member name="M:C1.Framework.Mathematics.Fraction.op_Subtraction(C1.Framework.Mathematics.Fraction,C1.Framework.Mathematics.Fraction)">
      <summary>
              Defines the binary "-" operator.
            </summary>
    </member>
    <member name="M:C1.Framework.Mathematics.Fraction.op_Multiply(C1.Framework.Mathematics.Fraction,C1.Framework.Mathematics.Fraction)">
      <summary>
              Defines the binary "*" operator.
            </summary>
    </member>
    <member name="M:C1.Framework.Mathematics.Fraction.op_Multiply(System.Double,C1.Framework.Mathematics.Fraction)">
      <summary>
              Defines the binary "*" operator.
            </summary>
    </member>
    <member name="M:C1.Framework.Mathematics.Fraction.op_Multiply(C1.Framework.Mathematics.Fraction,System.Double)">
      <summary>
              Defines the binary "*" operator.
            </summary>
    </member>
    <member name="M:C1.Framework.Mathematics.Fraction.op_Division(C1.Framework.Mathematics.Fraction,C1.Framework.Mathematics.Fraction)">
      <summary>
              Defines the binary "/" operator.
            </summary>
    </member>
    <member name="M:C1.Framework.Mathematics.Fraction.op_Division(System.Double,C1.Framework.Mathematics.Fraction)">
      <summary>
              Defines the binary "/" operator.
            </summary>
    </member>
    <member name="M:C1.Framework.Mathematics.Fraction.op_Division(C1.Framework.Mathematics.Fraction,System.Double)">
      <summary>
              Defines the binary "/" operator.
            </summary>
    </member>
    <member name="M:C1.Framework.Mathematics.Fraction.op_LogicalNot(C1.Framework.Mathematics.Fraction)">
      <summary>
              Defines the "!" operator. Note: "!" is used as simplify in here.
            </summary>
    </member>
    <member name="M:C1.Framework.Mathematics.Fraction.op_Implicit(C1.Framework.Mathematics.Fraction)~System.Double">
      <summary>
              Converts the fraction to double.
            </summary>
    </member>
    <member name="M:C1.Framework.Mathematics.Fraction.op_Implicit(System.Double)~C1.Framework.Mathematics.Fraction">
      <summary>
              Converts the double to fraction.
            </summary>
    </member>
    <member name="M:C1.Framework.Mathematics.Fraction.Reverse(C1.Framework.Mathematics.Fraction)">
      <summary>
              Reverse the fraction.
            </summary>
    </member>
    <member name="M:C1.Framework.Mathematics.Fraction.Simplify">
      <summary>
              Simplify the fraction.
            </summary>
    </member>
    <member name="T:C1.Framework.Mathematics.Fraction`1">
      <summary>
              Represents nn expression that indicates the quotient of two quantities.
            </summary>
      <typeparam name="T">
              Indicate the type of numerator and denominator.
            </typeparam>
    </member>
    <member name="M:C1.Framework.Mathematics.Fraction`1.#ctor(`0,`0)">
      <summary>
              Initializes a new instance of <see cref="T:C1.Framework.Mathematics.Fraction`1" /> structure with the specified numerator and denominator.
            </summary>
      <param name="numerator">
              A <typeparamref name="T" /> that indicates the number written above the line in a common fraction to indicate
              the number of parts of the whole.
            </param>
      <param name="denominator">
              A <typeparamref name="T" /> that indicats the number written below the line in a common fraction that indicates 
              the number of parts into which one whole is divided.
            </param>
    </member>
    <member name="M:C1.Framework.Mathematics.Fraction`1.#ctor(`0)">
      <summary>
              Initializes a new instance of <see cref="T:C1.Framework.Mathematics.Fraction`1" /> structure with the specified numerator and denominator.
            </summary>
      <param name="numerator">
              A <typeparamref name="T" /> that indicates the number written above the line in a common fraction to indicate
              the number of parts of the whole.
            </param>
    </member>
    <member name="P:C1.Framework.Mathematics.Fraction`1.Numerator">
      <summary>
              Gets or sets the numertor of the fraction.
            </summary>
      <value>
              A <typeparamref name="T" /> that indicates the number written above the line in a common fraction to indicate
              the number of parts of the whole.
            </value>
    </member>
    <member name="P:C1.Framework.Mathematics.Fraction`1.Denominator">
      <summary>
              Gets or sets the denominator of the fraction.
            </summary>
      <value>
              A <typeparamref name="T" /> that indicats the number written below the line in a common fraction that indicates 
              the number of parts into which one whole is divided.
            </value>
    </member>
    <member name="M:C1.Framework.Mathematics.Fraction`1.op_UnaryNegation(C1.Framework.Mathematics.Fraction{`0})">
      <summary>
              Defines the unary "-" operator.
            </summary>
    </member>
    <member name="M:C1.Framework.Mathematics.Fraction`1.op_Addition(C1.Framework.Mathematics.Fraction{`0},C1.Framework.Mathematics.Fraction{`0})">
      <summary>
              Defines the binary "+" operator.
            </summary>
    </member>
    <member name="M:C1.Framework.Mathematics.Fraction`1.op_Subtraction(C1.Framework.Mathematics.Fraction{`0},C1.Framework.Mathematics.Fraction{`0})">
      <summary>
              Defines the binary "-" operator.
            </summary>
    </member>
    <member name="M:C1.Framework.Mathematics.Fraction`1.op_Multiply(C1.Framework.Mathematics.Fraction{`0},C1.Framework.Mathematics.Fraction{`0})">
      <summary>
              Defines the binary "*" operator.
            </summary>
    </member>
    <member name="M:C1.Framework.Mathematics.Fraction`1.op_Multiply(`0,C1.Framework.Mathematics.Fraction{`0})">
      <summary>
              Defines the binary "*" operator.
            </summary>
    </member>
    <member name="M:C1.Framework.Mathematics.Fraction`1.op_Multiply(C1.Framework.Mathematics.Fraction{`0},`0)">
      <summary>
              Defines the binary "*" operator.
            </summary>
    </member>
    <member name="M:C1.Framework.Mathematics.Fraction`1.op_Division(C1.Framework.Mathematics.Fraction{`0},C1.Framework.Mathematics.Fraction{`0})">
      <summary>
              Defines the binary "/" operator.
            </summary>
    </member>
    <member name="M:C1.Framework.Mathematics.Fraction`1.op_Division(`0,C1.Framework.Mathematics.Fraction{`0})">
      <summary>
              Defines the binary "/" operator.
            </summary>
    </member>
    <member name="M:C1.Framework.Mathematics.Fraction`1.op_Division(C1.Framework.Mathematics.Fraction{`0},`0)">
      <summary>
              Defines the binary "/" operator.
            </summary>
    </member>
    <member name="M:C1.Framework.Mathematics.Fraction`1.op_LogicalNot(C1.Framework.Mathematics.Fraction{`0})">
      <summary>
              Defines the "!" operator. Note: "!" is used as simplify in here.
            </summary>
    </member>
    <member name="M:C1.Framework.Mathematics.Fraction`1.op_Implicit(C1.Framework.Mathematics.Fraction{`0})~System.Double">
      <summary>
              Converts the fraction to double.
            </summary>
    </member>
    <member name="M:C1.Framework.Mathematics.Fraction`1.op_Implicit(C1.Framework.Mathematics.Fraction{`0})~System.Single">
      <summary>
              Converts the fraction to float.
            </summary>
    </member>
    <member name="M:C1.Framework.Mathematics.Fraction`1.op_Explicit(System.Double)~C1.Framework.Mathematics.Fraction{`0}">
      <summary>
              Converts the double to fraction.
            </summary>
    </member>
    <member name="M:C1.Framework.Mathematics.Fraction`1.op_Explicit(System.Single)~C1.Framework.Mathematics.Fraction{`0}">
      <summary>
              Converts the float to fraction.
            </summary>
    </member>
    <member name="M:C1.Framework.Mathematics.Fraction`1.Reverse(C1.Framework.Mathematics.Fraction{`0})">
      <summary>
              Reverse the fraction.
            </summary>
    </member>
    <member name="M:C1.Framework.Mathematics.Fraction`1.Simplify">
      <summary>
              Simplify the fraction.
            </summary>
    </member>
    <member name="T:C1.Framework.Mathematics.Math">
      <summary>
              Provides constants and static methods for trigonometric, logarithmic, and other common mathematical functions.
            </summary>
      <remarks>
              This class is used to reinforce the function of <see cref="T:System.Math" /></remarks>
    </member>
    <member name="M:C1.Framework.Mathematics.Math.CalculateGreatestCommonDivisor(System.Int32,System.Int32)">
      <summary>
              Calculate the Greatest Common Divisor of <c>oneNumber</c> and <c>anotherNumber</c>.
            </summary>
      <param name="oneNumber">
              An <b>int</b> indicate the one number.
            </param>
      <param name="anotherNumber">
              An <b>int</b> indicate another number.
            </param>
      <returns>
              An <b>int</b> indicate the Greatest Common Divisor.
            </returns>
    </member>
    <member name="M:C1.Framework.Mathematics.Math.CalculateLeaseCommonMultiple(System.Int32,System.Int32)">
      <summary>
              Calculate the Lease Common Multiple of <c>oneNumber</c> and <c>anotherNumber</c>.
            </summary>
      <param name="oneNumber">
              An <b>int</b> indicate the one number
            </param>
      <param name="anotherNumber">
              An <b>int</b> indicate another number
            </param>
      <returns>
              An <b>int</b> indicate the Lease Common Multiple.
            </returns>
    </member>
    <member name="M:C1.Framework.Mathematics.Math.PercentageRelativeToAbsolute(System.Double)">
      <summary>
              Convertes the relative percentage to absolute percentage.
            </summary>
      <param name="value">
              An double value (&gt;= -1.0) that indicates the relative percentage.
            </param>
      <returns>
              A double value that represents the absolute percentage.
            </returns>
    </member>
    <member name="M:C1.Framework.Mathematics.Math.PercentageAbsoluteToRelative(System.Double)">
      <summary>
              Convertes the relative percentage to absolute percentage.
            </summary>
      <param name="value">
              An double value (&gt;= 0.0) that indicates the absolute percentage.
            </param>
      <returns>
              A double value that represents the relative percentage.
            </returns>
    </member>
    <member name="M:C1.Framework.Mathematics.Math.Round(System.Decimal,System.Int32)">
      <summary>
              Returns the number nearest the specified value.
            </summary>
      <param name="value">
              A <b>decimal</b> number to be rounded.
            </param>
      <param name="digits">
              The number of significant fractional digits (precision) in the return value.
            </param>
      <returns>
              The number nearest value with precision equal to decimals.
            </returns>
    </member>
    <member name="M:C1.Framework.Mathematics.Math.Round(System.Single)">
      <summary>
              To make a round mathematic operation for float type number
            </summary>
      <param name="paraNum">
              A <b>float</b> number to be rounded.
            </param>
      <returns>
              The number nearest value with precision equal to float.
            </returns>
    </member>
    <member name="M:C1.Framework.Mathematics.Math.Round(System.Double)">
      <summary>
              To make a round mathematic operation for double type number.
            </summary>
      <param name="paraNum">
              A <b>double</b> number to be rounded.
            </param>
      <returns>
              The number nearest value with precision equal to double.
            </returns>
    </member>
    <member name="T:C1.Framework.Mathematics.Matrix">
      <summary>
              Define a class that represents the matrix in mathematics. 
            </summary>
    </member>
    <member name="F:C1.Framework.Mathematics.Matrix._data">
      <summary>
              A two dimension <b>double</b> array used to save the data.
            </summary>
      <remarks>
              In order to improve speed of inherited classes, I give the proteced modification
            </remarks>
    </member>
    <member name="M:C1.Framework.Mathematics.Matrix.#ctor">
      <summary>
              Initializes a new instance of <see cref="T:C1.Framework.Mathematics.Matrix" /> class.
            </summary>
    </member>
    <member name="M:C1.Framework.Mathematics.Matrix.#ctor(System.Int32,System.Int32)">
      <summary>
              Initializes a new instance of <see cref="T:C1.Framework.Mathematics.Matrix" /> class.
            </summary>
      <param name="width">
              A <b>int</b> indicates the number of row.
            </param>
      <param name="height">
              A <b>int</b> indicates the number of column.
            </param>
    </member>
    <member name="M:C1.Framework.Mathematics.Matrix.#ctor(System.Double[0:,0:])">
      <summary>
              Initializes a new instance of <see cref="T:C1.Framework.Mathematics.Matrix" /> class.
            </summary>
      <summary>
              A two dimension <b>double</b> array used to save the elements.
            </summary>
    </member>
    <member name="M:C1.Framework.Mathematics.Matrix.#ctor(System.Boolean,C1.Framework.Mathematics.Vector[])">
      <summary>
              Initializes a new instance of <see cref="T:C1.Framework.Mathematics.Matrix" /> class.
            </summary>
      <param name="vertical">
              A <b>bool</b> indicates whether the direction of vectors is vertical.
            </param>
      <param name="vectors">
              A <see cref="T:C1.Framework.Mathematics.Vector" /> array indicates the vectors.
            </param>
    </member>
    <member name="P:C1.Framework.Mathematics.Matrix.Item(System.Int32,System.Int32)">
      <summary>
              Gets or sets the value of element at special location. 
            </summary>
      <value>
              A <b>double</b> indicates the element value.
            </value>
      <remarks>
              Note: The row and column are base on zero.
            </remarks>
    </member>
    <member name="P:C1.Framework.Mathematics.Matrix.Elements">
      <summary>
              Gets the elements of the matrix.
            </summary>
      <value>
              A two dimension <b>double</b> array save the elements.
            </value>
    </member>
    <member name="P:C1.Framework.Mathematics.Matrix.Width">
      <summary>
              Get the column number of the matrix.
            </summary>
      <value>
              A <b>int</b> value indicates the width of the matrix.
            </value>
    </member>
    <member name="P:C1.Framework.Mathematics.Matrix.Height">
      <summary>
              Get the row number of the matrix.
            </summary>
      <value>
              A <b>int</b> value indicates the height of the matrix.
            </value>
    </member>
    <member name="P:C1.Framework.Mathematics.Matrix.IsIdentity">
      <summary>
              Gets a value indicating whether this Matrix object is the identity matrix.
            </summary>
      <value>
              This property is true if this Matrix is identity; otherwise, false.
            </value>
      <remarks>
              | 1, 0, 0 |
              | 0, 1, 0 |
              | 0, 0, 1 |
            </remarks>
    </member>
    <member name="P:C1.Framework.Mathematics.Matrix.Columns">
      <summary>
              Get the vectors from the column direction.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Mathematics.Vector" /> array indicates the columns of the matrix.
            </value>
    </member>
    <member name="P:C1.Framework.Mathematics.Matrix.Rows">
      <summary>
              Get the vectors from the row direction..
            </summary>
      <value>
              A <see cref="T:C1.Framework.Mathematics.Vector" /> array indicates the rows of the matrix.
            </value>
    </member>
    <member name="M:C1.Framework.Mathematics.Matrix.op_Addition(C1.Framework.Mathematics.Matrix,C1.Framework.Mathematics.Matrix)">
      <summary>
              Defines the + operator for Matrix class.
            </summary>
      <param name="left">
              A <see cref="T:C1.Framework.Mathematics.Matrix" /> indicates the left operand.
            </param>
      <param name="right">
              A <see cref="T:C1.Framework.Mathematics.Matrix" /> indicates the right operand.
            </param>
      <returns>
              A <see cref="T:C1.Framework.Mathematics.Matrix" /> indicates the add operation result of two operands.
            </returns>
    </member>
    <member name="M:C1.Framework.Mathematics.Matrix.op_Subtraction(C1.Framework.Mathematics.Matrix,C1.Framework.Mathematics.Matrix)">
      <summary>
              Defines the binary - operator for Matrix class.
            </summary>
      <param name="left">
              A <see cref="T:C1.Framework.Mathematics.Matrix" /> indicates the left operand.
            </param>
      <param name="right">
              A <see cref="T:C1.Framework.Mathematics.Matrix" /> indicates the right operand.
            </param>
      <returns>
              A <see cref="T:C1.Framework.Mathematics.Matrix" /> indicates the binary nimus operation result of two operands.
            </returns>
    </member>
    <member name="M:C1.Framework.Mathematics.Matrix.op_UnaryNegation(C1.Framework.Mathematics.Matrix)">
      <summary>
              Defines the binary - operator for Matrix class.
            </summary>
      <param name="value">
              A <see cref="T:C1.Framework.Mathematics.Matrix" /> indicates the operand.
            </param>
      <returns>
              A <see cref="T:C1.Framework.Mathematics.Matrix" /> indicates the unary nimus operation result of operand.
            </returns>
    </member>
    <member name="M:C1.Framework.Mathematics.Matrix.op_Multiply(C1.Framework.Mathematics.Matrix,C1.Framework.Mathematics.Matrix)">
      <summary>
              Defines the * operator for Matrix class.
            </summary>
      <param name="left">
              A <see cref="T:C1.Framework.Mathematics.Matrix" /> indicates the left operand.
            </param>
      <param name="right">
              A <see cref="T:C1.Framework.Mathematics.Matrix" /> indicates the right operand.
            </param>
      <returns>
              A <see cref="T:C1.Framework.Mathematics.Matrix" /> indicates the multiplication operation result of two operands.
            </returns>
    </member>
    <member name="M:C1.Framework.Mathematics.Matrix.Transpose(C1.Framework.Mathematics.Matrix)">
      <summary>
              Defines the transpose operator for Matrix class.
            </summary>
      <param name="value">
              A <see cref="T:C1.Framework.Mathematics.Matrix" /> indicates the operand.
            </param>
      <returns>
              A <see cref="T:C1.Framework.Mathematics.Matrix" /> indicates the transpose operation result of operand.
            </returns>
    </member>
    <member name="M:C1.Framework.Mathematics.Matrix.op_Explicit(C1.Framework.Mathematics.Matrix)~System.Double">
      <summary>
              Use the explicit convertion to get a value of matrix.
            </summary>
      <param name="value">
              A <see cref="T:C1.Framework.Mathematics.Matrix" /> indicates the matrix will calculate value of it. 
            </param>
      <returns>
              A <b>double</b> indicates the value of the speical matrix.
            </returns>
    </member>
    <member name="M:C1.Framework.Mathematics.Matrix.op_Equality(C1.Framework.Mathematics.Matrix,C1.Framework.Mathematics.Matrix)">
      <summary>
              Defines the == operator for vector.
            </summary>
      <param name="left">
              A <see cref="T:C1.Framework.Mathematics.Matrix" /> indicates the left operand. 
            </param>
      <param name="right">
              A <see cref="T:C1.Framework.Mathematics.Matrix" /> indicates the right operand.
            </param>
      <returns>
              A <b>bool</b> indicates whether left equals right.
            </returns>
    </member>
    <member name="M:C1.Framework.Mathematics.Matrix.op_Inequality(C1.Framework.Mathematics.Matrix,C1.Framework.Mathematics.Matrix)">
      <summary>
              Defines the == operator for vector.
            </summary>
      <param name="left">
              A <see cref="T:C1.Framework.Mathematics.Matrix" /> indicates the left operand. 
            </param>
      <param name="right">
              A <see cref="T:C1.Framework.Mathematics.Matrix" /> indicates the right operand.
            </param>
      <returns>
              A <b>bool</b> indicates whether left does not equals right.
            </returns>
    </member>
    <member name="M:C1.Framework.Mathematics.Matrix.Add(C1.Framework.Mathematics.Matrix)">
      <summary>
              Adds a speical <see cref="T:C1.Framework.Mathematics.Matrix" /> to this <see cref="T:C1.Framework.Mathematics.Matrix" />.
            </summary>
      <param name="value">
              A <see cref="T:C1.Framework.Mathematics.Matrix" /> indicates the speical matrix.
            </param>
    </member>
    <member name="M:C1.Framework.Mathematics.Matrix.LeftMultiply(C1.Framework.Mathematics.Matrix)">
      <summary>
              Left multiply a speical <see cref="T:C1.Framework.Mathematics.Matrix" /> to this <see cref="T:C1.Framework.Mathematics.Matrix" />.
            </summary>
      <param name="value">
              A <see cref="T:C1.Framework.Mathematics.Matrix" /> indicates the speical matrix.
            </param>
    </member>
    <member name="M:C1.Framework.Mathematics.Matrix.RightMultiply(C1.Framework.Mathematics.Matrix)">
      <summary>
              Right multiply a speical <see cref="T:C1.Framework.Mathematics.Matrix" /> to this <see cref="T:C1.Framework.Mathematics.Matrix" />.
            </summary>
      <param name="value">
              A <see cref="T:C1.Framework.Mathematics.Matrix" /> indicates the speical matrix.
            </param>
    </member>
    <member name="M:C1.Framework.Mathematics.Matrix.Transpose">
      <summary>
              Convertes this <see cref="T:C1.Framework.Mathematics.Matrix" /> to it's transpose matrix.
            </summary>
    </member>
    <member name="P:C1.Framework.Mathematics.Matrix.Value">
      <summary>
              Gets the value of the current matrix.
            </summary>
      <value>
              A <b>double</b> indicates the value of the this matrix.
            </value>
    </member>
    <member name="M:C1.Framework.Mathematics.Matrix.Clone">
      <summary>
              Create a new object that is a copy of this <see cref="T:C1.Framework.Mathematics.Matrix" />.
            </summary>
      <returns>
              A <b>object</b> is a copy of this <see cref="T:C1.Framework.Mathematics.Matrix" />.
            </returns>
    </member>
    <member name="M:C1.Framework.Mathematics.Matrix.Equals(System.Object)">
      <summary>
              Determines whether the specified System.Object is equal to the current
              System.Object.
            </summary>
      <param name="obj">
              The System.Object to compare with the current System.Object. 
            </param>
      <returns>
              true if the specified System.Object is equal to the current System.Object;
              otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Framework.Mathematics.Matrix.GetHashCode">
      <summary>
              Serves as a hash function for a particular type. System.Object.GetHashCode
              is suitable for use in hashing algorithms and data structures like a hash
              table.
            </summary>
      <returns>
              A hash code for the current System.Object.
            </returns>
    </member>
    <member name="M:C1.Framework.Mathematics.Matrix.ToString">
      <summary>
              Returns a string that represents the current matrix.
            </summary>
      <returns>
              A string that represents the current matrix.
            </returns>
    </member>
    <member name="T:C1.Framework.Mathematics.Matrix`1">
      <summary>
              Define a class that represents the matrix in mathematics. 
            </summary>
    </member>
    <member name="F:C1.Framework.Mathematics.Matrix`1._data">
      <summary>
              A two dimension <b>T</b> array used to save the data.
            </summary>
      <remarks>
              In order to improve speed of inherited classes, I give the proteced modification
            </remarks>
    </member>
    <member name="F:C1.Framework.Mathematics.Matrix`1._T">
      <summary>
              Saves the type of <b>T</b>.
            </summary>
    </member>
    <member name="M:C1.Framework.Mathematics.Matrix`1.#ctor">
      <summary>
              Initializes a new instance of <see cref="T:C1.Framework.Mathematics.Matrix" /> class.
            </summary>
    </member>
    <member name="M:C1.Framework.Mathematics.Matrix`1.#ctor(System.Int32,System.Int32)">
      <summary>
              Initializes a new instance of <see cref="T:C1.Framework.Mathematics.Matrix" /> class.
            </summary>
      <param name="width">
              A <b>int</b> indicates the number of row.
            </param>
      <param name="height">
              A <b>int</b> indicates the number of column.
            </param>
    </member>
    <member name="M:C1.Framework.Mathematics.Matrix`1.#ctor(System.Boolean,C1.Framework.Mathematics.Vector{`0}[])">
      <summary>
              Initializes a new instance of <see cref="T:C1.Framework.Mathematics.Matrix" /> class.
            </summary>
      <param name="vertical">
              A <b>bool</b> indicates whether the direction of vectors is vertical.
            </param>
      <param name="vectors">
              A <see cref="T:C1.Framework.Mathematics.Vector" /> array indicates the vectors.
            </param>
    </member>
    <member name="P:C1.Framework.Mathematics.Matrix`1.Item(System.Int32,System.Int32)">
      <summary>
              Gets or sets the value of element at special location. 
            </summary>
      <value>
              A <b>T</b> indicates the element value.
            </value>
      <remarks>
              Note: The row and column are base on zero.
            </remarks>
    </member>
    <member name="P:C1.Framework.Mathematics.Matrix`1.Elements">
      <summary>
              Gets the elements of the matrix.
            </summary>
      <value>
              A two dimension <b>T</b> array save the elements.
            </value>
    </member>
    <member name="P:C1.Framework.Mathematics.Matrix`1.Width">
      <summary>
              Get the column number of the matrix.
            </summary>
      <value>
              A <b>int</b> value indicates the width of the matrix.
            </value>
    </member>
    <member name="P:C1.Framework.Mathematics.Matrix`1.Height">
      <summary>
              Get the row number of the matrix.
            </summary>
      <value>
              A <b>int</b> value indicates the height of the matrix.
            </value>
    </member>
    <member name="P:C1.Framework.Mathematics.Matrix`1.IsIdentity">
      <summary>
              Gets a value indicating whether this Matrix object is the identity matrix.
            </summary>
      <value>
              This property is true if this Matrix is identity; otherwise, false.
            </value>
      <remarks>
              | 1, 0, 0 |
              | 0, 1, 0 |
              | 0, 0, 1 |
            </remarks>
    </member>
    <member name="P:C1.Framework.Mathematics.Matrix`1.Columns">
      <summary>
              Get the vectors from the column direction.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Mathematics.Vector" /> array indicates the columns of the matrix.
            </value>
    </member>
    <member name="P:C1.Framework.Mathematics.Matrix`1.Rows">
      <summary>
              Get the vectors from the row direction..
            </summary>
      <value>
              A <see cref="T:C1.Framework.Mathematics.Vector" /> array indicates the rows of the matrix.
            </value>
    </member>
    <member name="M:C1.Framework.Mathematics.Matrix`1.op_Addition(C1.Framework.Mathematics.Matrix{`0},C1.Framework.Mathematics.Matrix{`0})">
      <summary>
              Defines the + operator for Matrix class.
            </summary>
      <param name="left">
              A <see cref="T:C1.Framework.Mathematics.Matrix" /> indicates the left operand.
            </param>
      <param name="right">
              A <see cref="T:C1.Framework.Mathematics.Matrix" /> indicates the right operand.
            </param>
      <returns>
              A <see cref="T:C1.Framework.Mathematics.Matrix" /> indicates the add operation result of two operands.
            </returns>
    </member>
    <member name="M:C1.Framework.Mathematics.Matrix`1.op_Subtraction(C1.Framework.Mathematics.Matrix{`0},C1.Framework.Mathematics.Matrix{`0})">
      <summary>
              Defines the binary - operator for Matrix class.
            </summary>
      <param name="left">
              A <see cref="T:C1.Framework.Mathematics.Matrix" /> indicates the left operand.
            </param>
      <param name="right">
              A <see cref="T:C1.Framework.Mathematics.Matrix" /> indicates the right operand.
            </param>
      <returns>
              A <see cref="T:C1.Framework.Mathematics.Matrix" /> indicates the binary nimus operation result of two operands.
            </returns>
    </member>
    <member name="M:C1.Framework.Mathematics.Matrix`1.op_UnaryNegation(C1.Framework.Mathematics.Matrix{`0})">
      <summary>
              Defines the binary - operator for Matrix class.
            </summary>
      <param name="value">
              A <see cref="T:C1.Framework.Mathematics.Matrix" /> indicates the operand.
            </param>
      <returns>
              A <see cref="T:C1.Framework.Mathematics.Matrix" /> indicates the unary nimus operation result of operand.
            </returns>
    </member>
    <member name="M:C1.Framework.Mathematics.Matrix`1.op_Multiply(C1.Framework.Mathematics.Matrix{`0},C1.Framework.Mathematics.Matrix{`0})">
      <summary>
              Defines the * operator for Matrix class.
            </summary>
      <param name="left">
              A <see cref="T:C1.Framework.Mathematics.Matrix" /> indicates the left operand.
            </param>
      <param name="right">
              A <see cref="T:C1.Framework.Mathematics.Matrix" /> indicates the right operand.
            </param>
      <returns>
              A <see cref="T:C1.Framework.Mathematics.Matrix" /> indicates the multiplication operation result of two operands.
            </returns>
    </member>
    <member name="M:C1.Framework.Mathematics.Matrix`1.Transpose(C1.Framework.Mathematics.Matrix{`0})">
      <summary>
              Defines the transpose operator for Matrix class.
            </summary>
      <param name="value">
              A <see cref="T:C1.Framework.Mathematics.Matrix" /> indicates the operand.
            </param>
      <returns>
              A <see cref="T:C1.Framework.Mathematics.Matrix" /> indicates the transpose operation result of operand.
            </returns>
    </member>
    <member name="M:C1.Framework.Mathematics.Matrix`1.op_Explicit(C1.Framework.Mathematics.Matrix{`0})~`0">
      <summary>
              Use the explicit convertion to get a value of matrix.
            </summary>
      <param name="value">
              A <see cref="T:C1.Framework.Mathematics.Matrix" /> indicates the matrix will calculate value of it. 
            </param>
      <returns>
              A <b>double</b> indicates the value of the speical matrix.
            </returns>
    </member>
    <member name="M:C1.Framework.Mathematics.Matrix`1.op_Equality(C1.Framework.Mathematics.Matrix{`0},C1.Framework.Mathematics.Matrix{`0})">
      <summary>
              Defines the == operator for vector.
            </summary>
      <param name="left">
              A <see cref="T:C1.Framework.Mathematics.Matrix" /> indicates the left operand. 
            </param>
      <param name="right">
              A <see cref="T:C1.Framework.Mathematics.Matrix" /> indicates the right operand.
            </param>
      <returns>
              A <b>bool</b> indicates whether left equals right.
            </returns>
    </member>
    <member name="M:C1.Framework.Mathematics.Matrix`1.op_Inequality(C1.Framework.Mathematics.Matrix{`0},C1.Framework.Mathematics.Matrix{`0})">
      <summary>
              Defines the == operator for vector.
            </summary>
      <param name="left">
              A <see cref="T:C1.Framework.Mathematics.Matrix" /> indicates the left operand. 
            </param>
      <param name="right">
              A <see cref="T:C1.Framework.Mathematics.Matrix" /> indicates the right operand.
            </param>
      <returns>
              A <b>bool</b> indicates whether left does not equals right.
            </returns>
    </member>
    <member name="M:C1.Framework.Mathematics.Matrix`1.Add(C1.Framework.Mathematics.Matrix{`0})">
      <summary>
              Adds a speical <see cref="T:C1.Framework.Mathematics.Matrix" /> to this <see cref="T:C1.Framework.Mathematics.Matrix" />.
            </summary>
      <param name="value">
              A <see cref="T:C1.Framework.Mathematics.Matrix" /> indicates the speical matrix.
            </param>
    </member>
    <member name="M:C1.Framework.Mathematics.Matrix`1.LeftMultiply(C1.Framework.Mathematics.Matrix{`0})">
      <summary>
              Left multiply a speical <see cref="T:C1.Framework.Mathematics.Matrix" /> to this <see cref="T:C1.Framework.Mathematics.Matrix" />.
            </summary>
      <param name="value">
              A <see cref="T:C1.Framework.Mathematics.Matrix" /> indicates the speical matrix.
            </param>
    </member>
    <member name="M:C1.Framework.Mathematics.Matrix`1.RightMultiply(C1.Framework.Mathematics.Matrix{`0})">
      <summary>
              Right multiply a speical <see cref="T:C1.Framework.Mathematics.Matrix" /> to this <see cref="T:C1.Framework.Mathematics.Matrix" />.
            </summary>
      <param name="value">
              A <see cref="T:C1.Framework.Mathematics.Matrix" /> indicates the speical matrix.
            </param>
    </member>
    <member name="M:C1.Framework.Mathematics.Matrix`1.Transpose">
      <summary>
              Convertes this <see cref="T:C1.Framework.Mathematics.Matrix" /> to it's transpose matrix.
            </summary>
    </member>
    <member name="P:C1.Framework.Mathematics.Matrix`1.Value">
      <summary>
              Gets the value of the current matrix.
            </summary>
      <value>
              A <b>T</b> indicates the value of the this matrix.
            </value>
    </member>
    <member name="M:C1.Framework.Mathematics.Matrix`1.Clone">
      <summary>
              Create a new object that is a copy of this <see cref="T:C1.Framework.Mathematics.Matrix" />.
            </summary>
      <returns>
              A <b>object</b> is a copy of this <see cref="T:C1.Framework.Mathematics.Matrix" />.
            </returns>
    </member>
    <member name="M:C1.Framework.Mathematics.Matrix`1.Equals(System.Object)">
      <summary>
              Determines whether the specified System.Object is equal to the current
              System.Object.
            </summary>
      <param name="obj">
              The System.Object to compare with the current System.Object. 
            </param>
      <returns>
              true if the specified System.Object is equal to the current System.Object;
              otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Framework.Mathematics.Matrix`1.GetHashCode">
      <summary>
              Serves as a hash function for a particular type. System.Object.GetHashCode
              is suitable for use in hashing algorithms and data structures like a hash
              table.
            </summary>
      <returns>
              A hash code for the current System.Object.
            </returns>
    </member>
    <member name="M:C1.Framework.Mathematics.Matrix`1.ToString">
      <summary>
              Returns a string that represents the current matrix.
            </summary>
      <returns>
              A string that represents the current matrix.
            </returns>
    </member>
    <member name="T:C1.Framework.Mathematics.MeasureConversionTable">
      <summary>
              A table used to convert value between the different measure units.
            </summary>
    </member>
    <member name="P:C1.Framework.Mathematics.MeasureConversionTable.InchPerMillimeter">
      <summary>
              Gets the inch per millimeter. [1 millimeter = 6/127 inch]
            </summary>
    </member>
    <member name="P:C1.Framework.Mathematics.MeasureConversionTable.InchPerDocument">
      <summary>
              Gets the inch per document. [1 document = 1/300 inch]
            </summary>
    </member>
    <member name="P:C1.Framework.Mathematics.MeasureConversionTable.InchPerDisplay">
      <summary>
              Gets the inch per display. [1 document = 1/75 inch]
            </summary>
    </member>
    <member name="P:C1.Framework.Mathematics.MeasureConversionTable.InchPerPoint">
      <summary>
              Gets the inch per point. [1 point = 1/72 inch]
            </summary>
    </member>
    <member name="P:C1.Framework.Mathematics.MeasureConversionTable.InchPerTwips">
      <summary>
              Gets the inch per twips. [1 document = 1/1440 inch]
            </summary>
    </member>
    <member name="P:C1.Framework.Mathematics.MeasureConversionTable.MillimeterPerInch">
      <summary>
              Gets the millimeter per inch.
            </summary>
    </member>
    <member name="P:C1.Framework.Mathematics.MeasureConversionTable.DocumentPerInch">
      <summary>
              Gets the document per inch.
            </summary>
    </member>
    <member name="P:C1.Framework.Mathematics.MeasureConversionTable.DisplayPerInch">
      <summary>
              Gets the display per inch.
            </summary>
    </member>
    <member name="P:C1.Framework.Mathematics.MeasureConversionTable.PointPerInch">
      <summary>
              Gets the point per inch
            </summary>
    </member>
    <member name="P:C1.Framework.Mathematics.MeasureConversionTable.TwipsPerInch">
      <summary>
              Gets the twips per inch.
            </summary>
    </member>
    <member name="T:C1.Framework.Mathematics.Vector">
      <summary>
              Define a Vector class that represents the mathematic vector. 
            </summary>
    </member>
    <member name="F:C1.Framework.Mathematics.Vector._data">
      <summary>
              Saves the data of this vector.
            </summary>
      <remarks>
              In order to improve speed of inherited classes, I give the proteced modification
            </remarks>
    </member>
    <member name="M:C1.Framework.Mathematics.Vector.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Framework.Mathematics.Vector" /> class.
            </summary>
    </member>
    <member name="M:C1.Framework.Mathematics.Vector.#ctor(System.Int32)">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Framework.Mathematics.Vector" /> class.
            </summary>
      <param name="dimension">
              A <b>int</b> indicates the dimension of the vector.
            </param>
      <remarks>
              The dimension of the vector must be bigger than or equal zero.
            </remarks>
    </member>
    <member name="M:C1.Framework.Mathematics.Vector.#ctor(System.Double[])">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Framework.Mathematics.Vector" /> class.
            </summary>
      <param name="items">
              A <b>double</b> array indicates the items.
            </param>
    </member>
    <member name="P:C1.Framework.Mathematics.Vector.Dimension">
      <summary>
              Gets or sets the dimension of the vector.
            </summary>
      <value>
              A <b>int</b> indicates the dimension of the vector.
            </value>
      <remarks>
              As soon as a Vector instance is created, it's dimension is fixed.
            </remarks>
    </member>
    <member name="P:C1.Framework.Mathematics.Vector.Item(System.Int32)">
      <summary>
              Gets or sets the value of element at special index. 
            </summary>
      <value>
              A <b>double</b> indicates the element value.
            </value>
      <remarks>
              Note: The index is base on zero.
            </remarks>
    </member>
    <member name="P:C1.Framework.Mathematics.Vector.Elements">
      <summary>
              Gets the all elements in the vector. 
            </summary>
    </member>
    <member name="P:C1.Framework.Mathematics.Vector.IsZero">
      <summary>
              Gets a value indicating whether this Vector object is zero vector.
            </summary>
      <value>
              If this Vector object is zero vector, return <b>true</b>, otherwise, return <b>false</b>.
            </value>
    </member>
    <member name="P:C1.Framework.Mathematics.Vector.IsIdentity">
      <summary>
              Gets a value indicating whether this Vector object is indentity vector.
            </summary>
      <value>
              If this Vector object is indentity vector, return <b>true</b>, otherwise, return <b>false</b>.
            </value>
    </member>
    <member name="M:C1.Framework.Mathematics.Vector.op_Addition(C1.Framework.Mathematics.Vector,C1.Framework.Mathematics.Vector)">
      <summary>
              Defines the + operator for vector.
            </summary>
      <param name="left">
              A <see cref="T:C1.Framework.Mathematics.Vector" /> indicates the left operand. 
            </param>
      <param name="right">
              A <see cref="T:C1.Framework.Mathematics.Vector" /> indicates the right operand.
            </param>
      <returns>
              A <see cref="T:C1.Framework.Mathematics.Vector" /> that is the add result of the left and right operands.
            </returns>
      <remarks>
              (n1, n2, n3) + (m1, m2, m3) = (n1 + m1, n2 + m2, n3 + m3)
            </remarks>
    </member>
    <member name="M:C1.Framework.Mathematics.Vector.op_Subtraction(C1.Framework.Mathematics.Vector,C1.Framework.Mathematics.Vector)">
      <summary>
              Defines the binary - operator for vector.
            </summary>
      <param name="left">
              A <see cref="T:C1.Framework.Mathematics.Vector" /> indicates the left operand. 
            </param>
      <param name="right">
              A <see cref="T:C1.Framework.Mathematics.Vector" /> indicates the right operand.
            </param>
      <returns>
              A <see cref="T:C1.Framework.Mathematics.Vector" /> that is the binary minus result of the left and right operands.
            </returns>
      <remarks>
              (n1, n2, n3) - (m1, m2, m3) = (n1 - m1, n2 - m2, n3 - m3)
            </remarks>
    </member>
    <member name="M:C1.Framework.Mathematics.Vector.op_UnaryNegation(C1.Framework.Mathematics.Vector)">
      <summary>
              Defines the unary - operator for vector.
            </summary>
      <param name="value">
              A <see cref="T:C1.Framework.Mathematics.Vector" /> indicates the operand. 
            </param>
      <returns>
              A <see cref="T:C1.Framework.Mathematics.Vector" /> that is the unary minus result of the operands.
            </returns>
      <remarks>
              -(n1, n2, n3) = (-n1, -n2, -n3)
            </remarks>
    </member>
    <member name="M:C1.Framework.Mathematics.Vector.op_Multiply(C1.Framework.Mathematics.Vector,C1.Framework.Mathematics.Vector)">
      <summary>
              Defines the * operator for vector.
            </summary>
      <param name="left">
              A <see cref="T:C1.Framework.Mathematics.Vector" /> indicates the left operand. 
            </param>
      <param name="right">
              A <see cref="T:C1.Framework.Mathematics.Vector" /> indicates the right operand.
            </param>
      <returns>
              A <see cref="T:C1.Framework.Mathematics.Vector" /> that is the multiplying result of the left and right operands.
            </returns>
      <remarks>
              (n1, n2, n3) * (m1, m2, m3) = (n1 * m1, n2 * m2, n3 * m3)
            </remarks>
    </member>
    <member name="M:C1.Framework.Mathematics.Vector.op_Equality(C1.Framework.Mathematics.Vector,C1.Framework.Mathematics.Vector)">
      <summary>
              Defines the == operator for vector.
            </summary>
      <param name="left">
              A <see cref="T:C1.Framework.Mathematics.Vector" /> indicates the left operand. 
            </param>
      <param name="right">
              A <see cref="T:C1.Framework.Mathematics.Vector" /> indicates the right operand.
            </param>
      <returns>
              A <b>bool</b> indicates whether left equals right.
            </returns>
    </member>
    <member name="M:C1.Framework.Mathematics.Vector.op_Inequality(C1.Framework.Mathematics.Vector,C1.Framework.Mathematics.Vector)">
      <summary>
              Defines the == operator for vector.
            </summary>
      <param name="left">
              A <see cref="T:C1.Framework.Mathematics.Vector" /> indicates the left operand. 
            </param>
      <param name="right">
              A <see cref="T:C1.Framework.Mathematics.Vector" /> indicates the right operand.
            </param>
      <returns>
              A <b>bool</b> indicates whether left dose not equals right.
            </returns>
    </member>
    <member name="M:C1.Framework.Mathematics.Vector.CrossMultiply(C1.Framework.Mathematics.Vector,C1.Framework.Mathematics.Vector)">
      <summary>
              Defines the descarts multiplication operation for vector.
            </summary>
      <param name="left">
              A <see cref="T:C1.Framework.Mathematics.Vector" /> indicates the left operand. 
            </param>
      <param name="right">
              A <see cref="T:C1.Framework.Mathematics.Vector" /> indicates the right operand.
            </param>
      <returns>
              A <see cref="T:C1.Framework.Mathematics.Vector" /> that is the descarts multiplying result of the left and right operands.
            </returns>
      <remarks>
                                            | i,  j,  k |
              (n1, n2, n3) X (m1, m2, m3) = | n1, n2, n3| = (?, ?, ?)
                                            | m1, m2, m3|
            </remarks>
    </member>
    <member name="M:C1.Framework.Mathematics.Vector.CalculateModul(C1.Framework.Mathematics.Vector)">
      <summary>
              Get the modul of the special vector.
            </summary>
      <param name="value">
              A <see cref="T:C1.Framework.Mathematics.Vector" /> indicates the vector.
            </param>
      <returns>
              A <b>double</b> indicates the modul of the speical vector.
            </returns>
    </member>
    <member name="M:C1.Framework.Mathematics.Vector.Add(C1.Framework.Mathematics.Vector)">
      <summary>
              Add a special vector to this vector.
            </summary>
      <param name="value">
              A <see cref="T:C1.Framework.Mathematics.Vector" /> indicates the speical vector.. 
            </param>
    </member>
    <member name="M:C1.Framework.Mathematics.Vector.DotMultiply(C1.Framework.Mathematics.Vector)">
      <summary>
              Dot multiply a speical vector to this vector.
            </summary>
      <param name="value">
              A <see cref="T:C1.Framework.Mathematics.Vector" /> indicates the speical vector.. 
            </param>
    </member>
    <member name="M:C1.Framework.Mathematics.Vector.CrossMultiply(C1.Framework.Mathematics.Vector)">
      <summary>
              Cross multiply a speical vector to this vector.
            </summary>
      <param name="value">
              A <see cref="T:C1.Framework.Mathematics.Vector" /> indicates the speical vector.. 
            </param>
    </member>
    <member name="P:C1.Framework.Mathematics.Vector.Modul">
      <summary>
              Get the modul of the this vector.
            </summary>
      <value>
              A <b>double</b> indicates the modul of the speical vector.
            </value>
    </member>
    <member name="M:C1.Framework.Mathematics.Vector.Clone">
      <summary>
              Create a new object that is a copy of this <see cref="T:C1.Framework.Mathematics.Vector" />.
            </summary>
      <returns>
              A <b>object</b> is a copy of this <see cref="T:C1.Framework.Mathematics.Vector" />.
            </returns>
    </member>
    <member name="M:C1.Framework.Mathematics.Vector.Equals(System.Object)">
      <summary>
              Determines whether the specified System.Object is equal to the current
              System.Object.
            </summary>
      <param name="obj">
              The System.Object to compare with the current System.Object. 
            </param>
      <returns>
              true if the specified System.Object is equal to the current System.Object;
              otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Framework.Mathematics.Vector.GetHashCode">
      <summary>
              Serves as a hash function for a particular type. System.Object.GetHashCode
              is suitable for use in hashing algorithms and data structures like a hash
              table.
            </summary>
      <returns>
              A hash code for the current System.Object.
            </returns>
    </member>
    <member name="M:C1.Framework.Mathematics.Vector.ToString">
      <summary>
              Returns a string that represents the current vector.
            </summary>
      <returns>
              A string that represents the current vector.
            </returns>
    </member>
    <member name="T:C1.Framework.Mathematics.Vector`1">
      <summary>
              Define a Vector class that represents the mathematic vector. 
            </summary>
    </member>
    <member name="F:C1.Framework.Mathematics.Vector`1._data">
      <summary>
              Saves the data of this vector.
            </summary>
      <remarks>
              In order to improve speed of inherited classes, I give the proteced modification
            </remarks>
    </member>
    <member name="F:C1.Framework.Mathematics.Vector`1._T">
      <summary>
              Saves the type of <b>T</b>.
            </summary>
    </member>
    <member name="M:C1.Framework.Mathematics.Vector`1.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Framework.Mathematics.Vector`1" /> class.
            </summary>
    </member>
    <member name="M:C1.Framework.Mathematics.Vector`1.#ctor(System.Int32)">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Framework.Mathematics.Vector`1" /> class.
            </summary>
      <param name="dimension">
              A <b>int</b> indicates the dimension of the vector.
            </param>
      <remarks>
              The dimension of the vector must be bigger than or equal zero.
            </remarks>
    </member>
    <member name="P:C1.Framework.Mathematics.Vector`1.Dimension">
      <summary>
              Gets or sets the dimension of the vector.
            </summary>
      <value>
              A <b>int</b> indicates the dimension of the vector.
            </value>
      <remarks>
              As soon as a Vector instance is created, it's dimension is fixed.
            </remarks>
    </member>
    <member name="P:C1.Framework.Mathematics.Vector`1.Item(System.Int32)">
      <summary>
              Gets or sets the value of element at special index. 
            </summary>
      <value>
              A <typeparamref name="T" /> indicates the element value.
            </value>
      <remarks>
              Note: The index is base on zero.
            </remarks>
    </member>
    <member name="P:C1.Framework.Mathematics.Vector`1.Elements">
      <summary>
              Gets the all elements in the vector. 
            </summary>
    </member>
    <member name="P:C1.Framework.Mathematics.Vector`1.IsZero">
      <summary>
              Gets a value indicating whether this Vector object is zero vector.
            </summary>
      <value>
              If this Vector object is zero vector, return <b>true</b>, otherwise, return <b>false</b>.
            </value>
    </member>
    <member name="P:C1.Framework.Mathematics.Vector`1.IsIdentity">
      <summary>
              Gets a value indicating whether this Vector object is indentity vector.
            </summary>
      <value>
              If this Vector object is indentity vector, return <b>true</b>, otherwise, return <b>false</b>.
            </value>
    </member>
    <member name="M:C1.Framework.Mathematics.Vector`1.op_Addition(C1.Framework.Mathematics.Vector{`0},C1.Framework.Mathematics.Vector{`0})">
      <summary>
              Defines the + operator for vector.
            </summary>
      <param name="left">
              A <see cref="T:C1.Framework.Mathematics.Vector" /> indicates the left operand. 
            </param>
      <param name="right">
              A <see cref="T:C1.Framework.Mathematics.Vector" /> indicates the right operand.
            </param>
      <returns>
              A <see cref="T:C1.Framework.Mathematics.Vector" /> that is the add result of the left and right operands.
            </returns>
      <remarks>
              (n1, n2, n3) + (m1, m2, m3) = (n1 + m1, n2 + m2, n3 + m3)
            </remarks>
    </member>
    <member name="M:C1.Framework.Mathematics.Vector`1.op_Subtraction(C1.Framework.Mathematics.Vector{`0},C1.Framework.Mathematics.Vector{`0})">
      <summary>
              Defines the binary - operator for vector.
            </summary>
      <param name="left">
              A <see cref="T:C1.Framework.Mathematics.Vector" /> indicates the left operand. 
            </param>
      <param name="right">
              A <see cref="T:C1.Framework.Mathematics.Vector" /> indicates the right operand.
            </param>
      <returns>
              A <see cref="T:C1.Framework.Mathematics.Vector" /> that is the binary minus result of the left and right operands.
            </returns>
      <remarks>
              (n1, n2, n3) - (m1, m2, m3) = (n1 - m1, n2 - m2, n3 - m3)
            </remarks>
    </member>
    <member name="M:C1.Framework.Mathematics.Vector`1.op_UnaryNegation(C1.Framework.Mathematics.Vector{`0})">
      <summary>
              Defines the unary - operator for vector.
            </summary>
      <param name="value">
              A <see cref="T:C1.Framework.Mathematics.Vector" /> indicates the operand. 
            </param>
      <returns>
              A <see cref="T:C1.Framework.Mathematics.Vector" /> that is the unary minus result of the operands.
            </returns>
      <remarks>
              -(n1, n2, n3) = (-n1, -n2, -n3)
            </remarks>
    </member>
    <member name="M:C1.Framework.Mathematics.Vector`1.op_Multiply(C1.Framework.Mathematics.Vector{`0},C1.Framework.Mathematics.Vector{`0})">
      <summary>
              Defines the * operator for vector.
            </summary>
      <param name="left">
              A <see cref="T:C1.Framework.Mathematics.Vector" /> indicates the left operand. 
            </param>
      <param name="right">
              A <see cref="T:C1.Framework.Mathematics.Vector" /> indicates the right operand.
            </param>
      <returns>
              A <see cref="T:C1.Framework.Mathematics.Vector" /> that is the multiplying result of the left and right operands.
            </returns>
      <remarks>
              (n1, n2, n3) * (m1, m2, m3) = (n1 * m1, n2 * m2, n3 * m3)
            </remarks>
    </member>
    <member name="M:C1.Framework.Mathematics.Vector`1.op_Equality(C1.Framework.Mathematics.Vector{`0},C1.Framework.Mathematics.Vector{`0})">
      <summary>
              Defines the == operator for vector.
            </summary>
      <param name="left">
              A <see cref="T:C1.Framework.Mathematics.Vector" /> indicates the left operand. 
            </param>
      <param name="right">
              A <see cref="T:C1.Framework.Mathematics.Vector" /> indicates the right operand.
            </param>
      <returns>
              A <b>bool</b> indicates whether left equals right.
            </returns>
    </member>
    <member name="M:C1.Framework.Mathematics.Vector`1.op_Inequality(C1.Framework.Mathematics.Vector{`0},C1.Framework.Mathematics.Vector{`0})">
      <summary>
              Defines the == operator for vector.
            </summary>
      <param name="left">
              A <see cref="T:C1.Framework.Mathematics.Vector" /> indicates the left operand. 
            </param>
      <param name="right">
              A <see cref="T:C1.Framework.Mathematics.Vector" /> indicates the right operand.
            </param>
      <returns>
              A <b>bool</b> indicates whether left dose not equals right.
            </returns>
    </member>
    <member name="M:C1.Framework.Mathematics.Vector`1.CrossMultiply(C1.Framework.Mathematics.Vector{`0},C1.Framework.Mathematics.Vector{`0})">
      <summary>
              Defines the descarts multiplication operation for vector.
            </summary>
      <param name="left">
              A <see cref="T:C1.Framework.Mathematics.Vector" /> indicates the left operand. 
            </param>
      <param name="right">
              A <see cref="T:C1.Framework.Mathematics.Vector" /> indicates the right operand.
            </param>
      <returns>
              A <see cref="T:C1.Framework.Mathematics.Vector" /> that is the descarts multiplying result of the left and right operands.
            </returns>
      <remarks>
                                            | i,  j,  k |
              (n1, n2, n3) X (m1, m2, m3) = | n1, n2, n3| = (?, ?, ?)
                                            | m1, m2, m3|
            </remarks>
    </member>
    <member name="M:C1.Framework.Mathematics.Vector`1.CalculateModul(C1.Framework.Mathematics.Vector{`0})">
      <summary>
              Get the modul of the special vector.
            </summary>
      <param name="value">
              A <see cref="T:C1.Framework.Mathematics.Vector" /> indicates the vector.
            </param>
      <returns>
              A <b>double</b> indicates the modul of the speical vector.
            </returns>
    </member>
    <member name="M:C1.Framework.Mathematics.Vector`1.Add(C1.Framework.Mathematics.Vector{`0})">
      <summary>
              Add a special vector to this vector.
            </summary>
      <param name="value">
              A <see cref="T:C1.Framework.Mathematics.Vector" /> indicates the speical vector.. 
            </param>
    </member>
    <member name="M:C1.Framework.Mathematics.Vector`1.DotMultiply(C1.Framework.Mathematics.Vector{`0})">
      <summary>
              Dot multiply a speical vector to this vector.
            </summary>
      <param name="value">
              A <see cref="T:C1.Framework.Mathematics.Vector" /> indicates the speical vector.. 
            </param>
    </member>
    <member name="M:C1.Framework.Mathematics.Vector`1.CrossMultiply(C1.Framework.Mathematics.Vector{`0})">
      <summary>
              Cross multiply a speical vector to this vector.
            </summary>
      <param name="value">
              A <see cref="T:C1.Framework.Mathematics.Vector" /> indicates the speical vector.. 
            </param>
    </member>
    <member name="P:C1.Framework.Mathematics.Vector`1.Modul">
      <summary>
              Get the modul of the this vector.
            </summary>
      <value>
              A <b>double</b> indicates the modul of the speical vector.
            </value>
    </member>
    <member name="M:C1.Framework.Mathematics.Vector`1.Clone">
      <summary>
              Create a new object that is a copy of this <see cref="T:C1.Framework.Mathematics.Vector" />.
            </summary>
      <returns>
              A <b>object</b> is a copy of this <see cref="T:C1.Framework.Mathematics.Vector" />.
            </returns>
    </member>
    <member name="M:C1.Framework.Mathematics.Vector`1.Equals(System.Object)">
      <summary>
              Determines whether the specified System.Object is equal to the current
              System.Object.
            </summary>
      <param name="obj">
              The System.Object to compare with the current System.Object. 
            </param>
      <returns>
              true if the specified System.Object is equal to the current System.Object;
              otherwise, false.
            </returns>
    </member>
    <member name="M:C1.Framework.Mathematics.Vector`1.GetHashCode">
      <summary>
              Serves as a hash function for a particular type. System.Object.GetHashCode
              is suitable for use in hashing algorithms and data structures like a hash
              table.
            </summary>
      <returns>
              A hash code for the current System.Object.
            </returns>
    </member>
    <member name="M:C1.Framework.Mathematics.Vector`1.ToString">
      <summary>
              Returns a string that represents the current vector.
            </summary>
      <returns>
              A string that represents the current vector.
            </returns>
    </member>
    <member name="T:C1.Framework.NumberTranslator">
      <summary>
              Translates number between different types.
            </summary>
    </member>
    <member name="M:C1.Framework.NumberTranslator.LowWord(System.UInt32)">
      <summary>
              Get the lower word from a unsigned integer value.
            </summary>
      <param name="value">
              An <b>uint</b> indicates the unsigned integer value.
            </param>
      <returns>
              Return the lower word as result.
            </returns>
    </member>
    <member name="M:C1.Framework.NumberTranslator.HighWord(System.UInt32)">
      <summary>
              Get the higher word from a unsigned integer value.
            </summary>
      <param name="value">
              An <b>unint</b> indicates the unsigned integer value.
            </param>
      <returns>
              Returns the higher word as result.
            </returns>
    </member>
    <member name="M:C1.Framework.NumberTranslator.LowWord(System.Int32)">
      <summary>
              Get the lower word from a integer value.
            </summary>
      <param name="value">
              An <b>int</b> indicates the integer value.
            </param>
      <returns>
              Returns the lower word as result.
            </returns>
    </member>
    <member name="M:C1.Framework.NumberTranslator.HighWord(System.Int32)">
      <summary>
              Get the higher word from a integer value.
            </summary>
      <param name="value">
              An <b>unint</b> indicates the integer value.
            </param>
      <returns>
              Returns the higher word as result.
            </returns>
    </member>
    <member name="M:C1.Framework.NumberTranslator.LowWord(System.IntPtr)">
      <summary>
              Get the higher word from a <see cref="T:System.IntPtr" /> value.
            </summary>
      <param name="intValue">
              An <b>unint</b> indicates the <see cref="T:System.IntPtr" /> value.
            </param>
      <returns>
              Returns the higher word as result.
            </returns>
    </member>
    <member name="M:C1.Framework.NumberTranslator.HighWord(System.IntPtr)">
      <summary>
              Get the higher word from a <see cref="T:System.IntPtr" /> value.
            </summary>
      <param name="intValue">
              An <b>unint</b> indicates the <see cref="T:System.IntPtr" /> value.
            </param>
      <returns>
              Returns the higher word as result.
            </returns>
    </member>
    <member name="M:C1.Framework.NumberTranslator.MakeDoubleWord(System.UInt16,System.UInt16)">
      <summary>
              Make a double word by low and high word.
            </summary>
      <param name="lowWord">
              An <b>ushort</b> indicates the low word of the long.
            </param>
      <param name="highWord">
              An <b>ushort</b> indicates the high word of the long.
            </param>
      <returns>
              An <b>uint</b> indicates the long.
            </returns>
    </member>
    <member name="M:C1.Framework.NumberTranslator.MakeDoubleWord(System.Int16,System.Int16)">
      <summary>
              Make a double word by low and high word.
            </summary>
      <param name="lowWord">
              A <b>short</b> indicates the low word of the long.
            </param>
      <param name="highWord">
              A <b>short</b> indicates the high word of the long.
            </param>
      <returns>
              An <b>int</b> indicates the long.
            </returns>
    </member>
    <member name="T:C1.Framework.SR`1">
      <summary>
              Represents the basic functionality used to get string information from assembly resource.
            </summary>
      <typeparam name="T">
              The type to provide the assembly information.
            </typeparam>
    </member>
    <member name="M:C1.Framework.SR`1.GetString(System.String)">
      <summary>
              Returns the value of the resource with the specified name in the assembly indicated by the template type.
            </summary>
      <param name="name">
              Name of the resource to get.
            </param>
      <returns>
              The value of a resource.
            </returns>
    </member>
    <member name="M:C1.Framework.SR`1.GetString(System.String,System.Object[])">
      <summary>
              Returns the value of the resource with the specified name in the assembly indicated by the template type 
              and returns the formated string that replaced the format specification in the String 
              with the textual equivalent of the value of a corresponding Object instance in a specified array.
            </summary>
      <param name="name">
              Name of the resource to get.
            </param>
      <param name="args">
              An Object array containing zero or more objects to be formatted. 
            </param>
      <returns>
              The formated value of a resource.
            </returns>
    </member>
    <member name="M:C1.Framework.SR`1.GetString(System.Globalization.CultureInfo,System.String)">
      <summary>
              Returns the value of the resource localized for the specified culture with the specified name in the assembly 
              indicated by the template type.
            </summary>
      <param name="culture">
              The CultureInfo object that represents the culture for which the resource is localized.
            </param>
      <param name="name">
              Name of the resource to get.
            </param>
      <returns>
              The value of a resource.
            </returns>
    </member>
    <member name="M:C1.Framework.SR`1.GetString(System.Globalization.CultureInfo,System.String,System.Object[])">
      <summary>
              Returns the value of the resource localized for the specified culture with the specified name in the assembly 
              indicated by the template type and returns the formated string that replaced the format specification in the 
              String with the textual equivalent of the value of a corresponding Object instance in a specified array.
            </summary>
      <param name="culture">
              The CultureInfo object that represents the culture for which the resource is localized.
            </param>
      <param name="name">
              Name of the resource to get.
            </param>
      <param name="args">
              An Object array containing zero or more objects to be formatted. 
            </param>
      <returns>
              The formated value of a resource.
            </returns>
    </member>
    <member name="M:C1.Framework.SR`1.GetImageByHighDpi(System.String)">
      <summary>
            If the dpi is larger than 150% and there is a bigger size image, this method will return the bigger image with scaled.
            </summary>
      <param name="resourceName">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:C1.Framework.SystemErrorException">
      <summary>
              Defines an exception class to handle the system error.
            </summary>
    </member>
    <member name="M:C1.Framework.SystemErrorException.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Framework.SystemErrorException" /> class.
            </summary>
    </member>
    <member name="M:C1.Framework.SystemErrorException.#ctor(System.String)">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Framework.SystemErrorException" /> class.
            </summary>
      <param name="message">
              The message that describes the error.
            </param>
    </member>
    <member name="M:C1.Framework.SystemErrorException.#ctor(System.String,System.Exception)">
      <summary>
              Initializes a new instance of the System.SystemException class with a specified
              error message and a reference to the inner exception that is the cause of
              this exception.
            </summary>
      <param name="message">
              The error message that explains the reason for the exception.
            </param>
      <param name="innerException">
              The exception that is the cause of the current exception. If the innerException
              parameter is not a null reference (Nothing in Visual Basic), the current
              exception is raised in a catch block that handles the inner exception.
            </param>
    </member>
    <member name="P:C1.Framework.SystemErrorException.ErrorCode">
      <summary>
              Gets the error code created by last error API.  
            </summary>
      <value>
              An <b>int</b> indicates the error code. 
            </value>
    </member>
    <member name="M:C1.Framework.SystemErrorException.GetErrorDescription(System.Int32)">
      <summary>
              Gets the description of the error.
            </summary>
      <param name="errorCode">
              An <b>int</b> indicates the code of the error.
            </param>
      <returns>
              A <b>string</b> indicates the description.
            </returns>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.BitsPerPixel">
      <summary>
              Represents the bits-per-pixel of the bitmap.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.BitsPerPixel.SpecifiedByFormat">
      <summary>
              The number of bits-per-pixel is specified or is implied by the JPEG or PNG format. 
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.BitsPerPixel.Bits1Monochrome">
      <summary>
              Each bit in the bitmap array represents a pixel. the items member of color table contains two entries.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.BitsPerPixel.Bits4Colors16">
      <summary>
              The bitmap has a maximum of 16 colors, the items member of color table contains up to 16 entries.
              Each pixel in the bitmap is represented by a 4-bit index into the color table.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.BitsPerPixel.Bits8Colors256">
      <summary>
              The bitmap has a maximum of 256 colors, and the items member of color table contains up to 256 entries. 
              Each byte in the array represents a single pixel.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.BitsPerPixel.Bits16TrueColors">
      <summary>
              The bitmap has a maximum of 2^16 colors.
              In general, the color table is empty, each word in the bitmap array represents a single pixel
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.BitsPerPixel.Bits24TrueColors">
      <summary>
              The bitmap has a maximum of 2^24 colors.
              In general, the color table is empty, each 3-byte triplet in the bitmap array represents the relative 
              intensities of blue, green, and red, respectively, for a pixel.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.BitsPerPixel.Bits32TrueColors">
      <summary>
              The bitmap has a maximum of 2^32 colors.
              In general, the color table is empty, each double-word in the bitmap array represents the relative intensities
              of blue, green, and red, respectively, for a pixel. 
            </summary>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.Bitmap">
      <summary>
              Represents the gid bitmap.
            </summary>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Bitmap.#ctor(System.Int32,System.Int32)">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Framework.Drawing.Gdi.Bitmap" /> class 
              with the specified size.
            </summary>
      <param name="width">
              The width, in pixels, of the new <see cref="T:C1.Framework.Drawing.Gdi.Bitmap" /> object.
            </param>
      <param name="height">
              The height, in pixels, of the new <see cref="T:C1.Framework.Drawing.Gdi.Bitmap" /> object. 
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Bitmap.#ctor(System.Int32,System.Int32,C1.Framework.Drawing.Gdi.BitsPerPixel)">
      <summary>
              Intializes a new instance of the <see cref="T:C1.Framework.Drawing.Gdi.Bitmap" /> class 
              with the specified size color format (color planes and bits-per-pixel). 
            </summary>
      <param name="width">
              The width, in pixels, of the new <see cref="T:C1.Framework.Drawing.Gdi.Bitmap" /> object.
            </param>
      <param name="height">
              The height, in pixels, of the new <see cref="T:C1.Framework.Drawing.Gdi.Bitmap" /> object. 
            </param>
      <param name="bitsPerPixel">
              The number of bits required to identify the color of a single pixel. 
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Bitmap.#ctor(System.Int32,System.Int32,System.Int32,C1.Framework.Drawing.Gdi.BitsPerPixel,System.Byte[])">
      <summary>
              Intializes a new instance of the <see cref="T:C1.Framework.Drawing.Gdi.Bitmap" /> class 
              with the specified size color format (color planes and bits-per-pixel). 
            </summary>
      <param name="width">
              The width, in pixels, of the new <see cref="T:C1.Framework.Drawing.Gdi.Bitmap" /> object.
            </param>
      <param name="height">
              The height, in pixels, of the new <see cref="T:C1.Framework.Drawing.Gdi.Bitmap" /> object. 
            </param>
      <param name="planes">
              Specifies the number of planes for the target device. This value must be set to 1.
            </param>
      <param name="bitsPerPixel">
              The number of bits required to identify the color of a single pixel. 
            </param>
      <param name="data">
              The pattern data array.
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Bitmap.#ctor(C1.Framework.Drawing.Gdi.Graphics,System.Int32,System.Int32)">
      <summary>
              Intializes a new instance of the <see cref="T:C1.Framework.Drawing.Gdi.Bitmap" /> class 
              with the specified <see cref="T:C1.Framework.Drawing.Gdi.Graphics" /> object and size.
            </summary>
      <param name="graphics">
              A <see cref="T:C1.Framework.Drawing.Gdi.Graphics" /> object.
            </param>
      <param name="width">
              The width, in pixels, of the new <see cref="T:C1.Framework.Drawing.Gdi.Bitmap" /> object.
            </param>
      <param name="height">
              The height, in pixels, of the new <see cref="T:C1.Framework.Drawing.Gdi.Bitmap" /> object. 
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Bitmap.#ctor(System.Drawing.Bitmap)">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Framework.Drawing.Gdi.Bitmap" /> class.
            </summary>
      <param name="gdiplusBitmap">
              A <see cref="T:System.Drawing.Bitmap" /> indicates the GDI+ bitmap.
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Bitmap.#ctor(System.Drawing.Bitmap,System.Drawing.Color)">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Framework.Drawing.Gdi.Bitmap" /> class.
            </summary>
      <param name="gdiplusBitmap">
              A <see cref="T:System.Drawing.Bitmap" /> indicates the GDI+ bitmap.
            </param>
      <param name="backgroundColor">
              A <see cref="T:System.Drawing.Color" /> structure that specifies the background color. This
               parameter is ignored if the bitmap is totally opaque.
            </param>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Bitmap.Size">
      <summary>
              Gets the width and height of this <see cref="T:C1.Framework.Drawing.Gdi.Bitmap" /> object.
            </summary>
      <value>
              A <see cref="P:C1.Framework.Drawing.Gdi.Bitmap.Size" /> structure that represents the width and height 
              of this <see cref="T:C1.Framework.Drawing.Gdi.Bitmap" /> object.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Bitmap.Height">
      <summary>
              Gets the height of this <see cref="T:C1.Framework.Drawing.Gdi.Bitmap" /> object.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Bitmap.Width">
      <summary>
              Gets the width of this <see cref="T:C1.Framework.Drawing.Gdi.Bitmap" /> object.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Bitmap.Planes">
      <summary>
              Gets the planes of the Bitmap. The value is always 1.
            </summary>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Bitmap.GetData">
      <summary>
              Gets the data of the bitmap.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Bitmap.BitsPerPixel">
      <summary>
              Gets the bits-per-pixel of the bitmap.
            </summary>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Bitmap.Clone">
      <summary>
              Creates an exact copy of this <see cref="T:C1.Framework.Drawing.Gdi.Bitmap" /> object.
            </summary>
      <returns>
              The <see cref="T:C1.Framework.Drawing.Gdi.Bitmap" /> object that this method creates.
            </returns>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Bitmap.ToGdiplusBitmap(C1.Framework.Drawing.Gdi.Bitmap)">
      <summary>
              Creates a GDI+ Bitmap from a handle to a GDI bitmap.
            </summary>
      <param name="bitmap">
              A <see cref="T:C1.Framework.Drawing.Gdi.Bitmap" /> indicates the GDI bitmap.
            </param>
      <returns>
              A <see cref="T:System.Drawing.Bitmap" /> indicates the GDI+ bitmap.
            </returns>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.Brush">
      <summary>
              Represents the base class of all kinds of brush
            </summary>
      <remarks>
              This is an abstract class, which is just details that it's ranged to Brush.
              To use a <see cref="T:C1.Framework.Drawing.Gdi.Brush" />, you should create an instance from its inherited class.
              Refer to <see cref="T:C1.Framework.Drawing.Gdi.SolidBrush" />, <see cref="T:C1.Framework.Drawing.Gdi.HatchBrush" />, <see cref="T:C1.Framework.Drawing.Gdi.PatternBrush" /></remarks>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.SolidBrush">
      <summary>
              Represents the brush which always solid draw
            </summary>
      <remarks>
              Here we only can support NameKnowedColor or Null alpha ARGB color
              if <see cref="P:C1.Framework.Drawing.Gdi.SolidBrush.Color" /> is <see cref="P:System.Drawing.Color.Transparent" /> or <see cref="F:System.Drawing.Color.Empty" />,
              it means create a <see cref="T:C1.Framework.Drawing.Gdi.HollowBrush" /></remarks>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.SolidBrush.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Framework.Drawing.Gdi.SolidBrush" /> 
              class.
            </summary>
      <remarks>
              The <b>Color </b> property is set to <see cref="P:System.Drawing.Color.Black" /> 
              (default) and the <b>Width</b> property is set to 1 (default).
            </remarks>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.SolidBrush.#ctor(System.Drawing.Color)">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Framework.Drawing.Gdi.SolidBrush" />
              class with the specified color.
            </summary>
      <param name="color">
              A <see cref="P:C1.Framework.Drawing.Gdi.SolidBrush.Color" /> structure that indicates the color 
              of this <see cref="T:C1.Framework.Drawing.Gdi.SolidBrush" /> object. 
            </param>
      <remarks>
              The <see cref="P:C1.Framework.Drawing.Gdi.SolidBrush.Color" /> property is set to the color specified 
              by the <c>color</c> parameter. The <b>Width</b> property is set
              to 1 (default).
            </remarks>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SolidBrush.Color">
      <summary>
              Gets or sets the color of this <see cref="T:C1.Framework.Drawing.Gdi.SolidBrush" /> object.
            </summary>
      <value>
              A <see cref="P:C1.Framework.Drawing.Gdi.SolidBrush.Color" /> structure that represents the color of this <see cref="T:C1.Framework.Drawing.Gdi.SolidBrush" /> object.
            </value>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.SolidBrush.Clone">
      <summary>
              Create a <see cref="T:C1.Framework.Drawing.Gdi.SolidBrush" /> that has the same style as this brush.
            </summary>
      <returns>
              A <see cref="T:C1.Framework.Drawing.Gdi.SolidBrush" /> that has the same style as this brush.
            </returns>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.HatchStyle">
      <summary>
              Represents the hatch style of the <see cref="T:C1.Framework.Drawing.Gdi.HatchBrush" />.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.HatchStyle.Horizontal">
      <summary>
              Horizontal hatch
            </summary>
      <remarks>
              It seems like:
              | ==== |
              | ==== |
            </remarks>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.HatchStyle.Vertical">
      <summary>
              Vertical hatch
            </summary>
      <remarks>
              It seems like:
              | |||| |
              | |||| |
            </remarks>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.HatchStyle.ForwardDiagonal">
      <summary>
              A 45-degree downward, left-to-right hatch
            </summary>
      <remarks>
              It seems like:
              | \\\\ |
              | \\\\ |
            </remarks>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.HatchStyle.BackwardDiagonal">
      <summary>
              A 45-degree downward, left-to-right hatch
            </summary>
      <remarks>
              It seems like:
              | //// |
              | //// |
            </remarks>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.HatchStyle.Cross">
      <summary>
              Horizontal and vertical cross-hatch
            </summary>
      <remarks>
              It seems like:
              | ++++ |
              | ++++ |
            </remarks>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.HatchStyle.DiagonalCross">
      <summary>
              45-degree crosshatch
            </summary>
      <remarks>
              It seems like:
              | \/\/ |
              | /\/\ |
            </remarks>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.HatchBrush">
      <summary>
              Represents the brush which draw with <see cref="T:C1.Framework.Drawing.Gdi.HatchStyle" /></summary>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.HatchBrush.#ctor(C1.Framework.Drawing.Gdi.HatchStyle)">
      <summary>
              Initialize a new instance of the <see cref="T:C1.Framework.Drawing.Gdi.HatchBrush" /> class
            </summary>
      <param name="style">
              A <see cref="T:C1.Framework.Drawing.Gdi.HatchStyle" /> indicate the drawing style of <see cref="T:C1.Framework.Drawing.Gdi.Brush" /></param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.HatchBrush.#ctor(C1.Framework.Drawing.Gdi.HatchStyle,System.Drawing.Color)">
      <summary>
              Initialize a new instance of the <see cref="T:C1.Framework.Drawing.Gdi.HatchBrush" /> class
            </summary>
      <param name="style">
              A <see cref="T:C1.Framework.Drawing.Gdi.HatchStyle" /> indicate the drawing style of <see cref="T:C1.Framework.Drawing.Gdi.Brush" /></param>
      <param name="foregroundColor">
              A <see cref="T:System.Drawing.Color" /> indicate the foreground color of the device on which be drawed
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.HatchBrush.#ctor(C1.Framework.Drawing.Gdi.HatchStyle,System.Drawing.Color,System.Drawing.Color)">
      <summary>
              Initialize a new instance of the <see cref="T:C1.Framework.Drawing.Gdi.HatchBrush" /> class
            </summary>
      <param name="style">
              A <see cref="T:C1.Framework.Drawing.Gdi.HatchStyle" /> indicate the drawing style of <see cref="T:C1.Framework.Drawing.Gdi.Brush" /></param>
      <param name="foregroundColor">
              A <see cref="T:System.Drawing.Color" /> indicate the foreground color of the device on which be drawed
            </param>
      <param name="backgroundColor">
              A <see cref="T:System.Drawing.Color" /> indicate the backgound color of the device on which be drawed
            </param>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.HatchBrush.BackgroundColor">
      <summary>
              Gets or sets the color of this <see cref="T:C1.Framework.Drawing.Gdi.HatchBrush" /> object.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> structure that represents the foreground color of this <see cref="T:C1.Framework.Drawing.Gdi.HatchBrush" /> object.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.HatchBrush.ForegroundColor">
      <summary>
              Gets or sets the color of this <see cref="T:C1.Framework.Drawing.Gdi.HatchBrush" /> object.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> structure that represents the background color of this <see cref="T:C1.Framework.Drawing.Gdi.HatchBrush" /> object.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.HatchBrush.Style">
      <summary>
              Gets or sets the style of the <see cref="T:C1.Framework.Drawing.Gdi.HatchBrush" />.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.HatchStyle" /> indicates the line style of the brush.
            </value>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.HatchBrush.Clone">
      <summary>
              Create a <see cref="T:C1.Framework.Drawing.Gdi.HatchBrush" /> that has the same style as this brush.
            </summary>
      <returns>
              A <see cref="T:C1.Framework.Drawing.Gdi.HatchBrush" /> that has the same style as this brush.
            </returns>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.HollowBrush">
      <summary>
              Represents the brush which draw nothing
            </summary>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.HollowBrush.#ctor">
      <summary>
              Initialize a new instance of <see cref="T:C1.Framework.Drawing.Gdi.HollowBrush" /></summary>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.HollowBrush.Clone">
      <summary>
              Create a <see cref="T:C1.Framework.Drawing.Gdi.HollowBrush" /> that has the same style as this brush.
            </summary>
      <returns>
              A <see cref="T:C1.Framework.Drawing.Gdi.HollowBrush" /> that has the same style as this brush.
            </returns>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.PatternBrush">
      <summary>
              Defines a brush with a pattern.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternBrush.HorizontalPattern">
      <summary>
              Gets the Horizontal pattern.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternBrush.VerticalPattern">
      <summary>
              Gets the Vertical pattern.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternBrush.ForwordDiagonalPattern">
      <summary>
              Gets the ForwordDiagonal pattern.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternBrush.BackwardDiagonalPattern">
      <summary>
              Gets the BackwardDiagonal pattern.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternBrush.LargeGridPattern">
      <summary>
              Gets the LargeGrid pattern.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternBrush.DiagonalCrossPattern">
      <summary>
              Gets the DiagonalCross pattern.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternBrush.Percent5Pattern">
      <summary>
              Gets the Percent5 pattern.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternBrush.Percent10Pattern">
      <summary>
              Gets the Percent10 pattern.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternBrush.Percent20Pattern">
      <summary>
              Gets the Percent20 pattern.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternBrush.Percent25Pattern">
      <summary>
              Gets the Percent25 pattern.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternBrush.Percent30Pattern">
      <summary>
              Gets the Percent30 pattern.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternBrush.Percent40Pattern">
      <summary>
              Gets the Percent40 pattern.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternBrush.Percent50Pattern">
      <summary>
              Gets the Percent50 pattern.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternBrush.Percent60Pattern">
      <summary>
              Gets the Percent60 pattern.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternBrush.Percent70Pattern">
      <summary>
              Gets the Percent70 pattern.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternBrush.Percent75Pattern">
      <summary>
              Gets the Percent75 pattern.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternBrush.Percent80Pattern">
      <summary>
              Gets the Percent80 pattern.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternBrush.Percent90Pattern">
      <summary>
              Gets the Percent90 pattern.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternBrush.LightDownwardDiagonalPattern">
      <summary>
              Gets the LightDownwardDiagonal pattern.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternBrush.LightUpwardDiagonalPattern">
      <summary>
              Gets the LightUpwardDiagonal pattern.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternBrush.DarkDownwardDiagonalPattern">
      <summary>
              Gets the DarkDownwardDiagonal pattern.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternBrush.DarkUpwardDiagonalPattern">
      <summary>
              Gets the DarkUpwardDiagonal pattern.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternBrush.WideDownwardDiagonalPattern">
      <summary>
              Gets the WideDownwardDiagonal pattern.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternBrush.WideUpwardDiagonalPattern">
      <summary>
              Gets the WideUpwardDiagonal pattern.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternBrush.LightVerticalPattern">
      <summary>
              Gets the LightVertical pattern.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternBrush.LightHorizontalPattern">
      <summary>
              Gets the LightHorizontal pattern.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternBrush.NarrowVerticalPattern">
      <summary>
              Gets the NarrowVertical pattern.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternBrush.NarrowHorizontalPattern">
      <summary>
              Gets the NarrowHorizontal pattern.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternBrush.DarkVerticalPattern">
      <summary>
              Gets the DarkVertical pattern.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternBrush.DarkHorizontalPattern">
      <summary>
              Gets the DarkHorizontal pattern.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternBrush.DashedDownwardDiagonalPattern">
      <summary>
              Gets the DashedDownwardDiagonal pattern.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternBrush.DashedUpwardDiagonalPattern">
      <summary>
              Gets the DashedUpwardDiagonal pattern.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternBrush.DashedHorizontalPattern">
      <summary>
              Gets the DashedHorizontal pattern.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternBrush.DashedVerticalPattern">
      <summary>
              Gets the DashedVertical pattern.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternBrush.SmallConfettiPattern">
      <summary>
              Gets the SmallConfetti pattern.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternBrush.LargeConfettiPattern">
      <summary>
              Gets the LargeConfetti pattern.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternBrush.ZigZagPattern">
      <summary>
              Gets the ZigZag pattern.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternBrush.WavePattern">
      <summary>
              Gets the Wave pattern.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternBrush.DiagonalBrickPattern">
      <summary>
              Gets the DiagonalBrick pattern.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternBrush.HorizontalBrickPattern">
      <summary>
              Gets the HorizontalBrick pattern.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternBrush.WeavePattern">
      <summary>
              Gets the Weave pattern.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternBrush.PlaidPattern">
      <summary>
              Gets the Plaid pattern.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternBrush.DivotPattern">
      <summary>
              Gets the Divot pattern.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternBrush.DottedGridPattern">
      <summary>
              Gets the DottedGrid pattern.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternBrush.DottedDiamondPattern">
      <summary>
              Gets the DottedDiamond pattern.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternBrush.ShinglePattern">
      <summary>
              Gets the Shingle pattern.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternBrush.TrellisPattern">
      <summary>
              Gets the Trellis pattern.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternBrush.SpherePattern">
      <summary>
              Gets the Sphere pattern.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternBrush.SmallGridPattern">
      <summary>
              Gets the SmallGrid pattern.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternBrush.SmallCheckerBoardPattern">
      <summary>
              Gets the SmallCheckerBoard pattern.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternBrush.LargeCheckerBoardPattern">
      <summary>
              Gets the LargeCheckerBoard pattern.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternBrush.OutlinedDiamondPattern">
      <summary>
              Gets the OutlinedDiamond pattern.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternBrush.SolidDiamondPattern">
      <summary>
              Gets the SolidDiamond pattern.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternBrush.BackgroundColor">
      <summary>
              Gets or sets the background color of the pattern.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> structure that indicates the background color of the pattern.
            </value>
      <remarks>
              If the value is Color.Empty the background color is the currrent background color of the device context.
            </remarks>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternBrush.ForegroundColor">
      <summary>
              Gets or sets the foreground color of the pattern.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> structure that indicates the foreground color of the pattern.
            </value>
      <remarks>
              If the value is Color.Empty the foreground color is the currrent foreground color of the device context.
            </remarks>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternBrush.Pattern">
      <summary>
              Gets or sets the pattern mask.
            </summary>
      <value>
              A <b>int</b> array that indicates the pattern. 
              Each bit represents a pixel. 
              0 - indicates to fill the pixel with  foreground color.
              1 - indicates to fill the pixel with background color.
            </value>
      <remarks>
              If the Pattern is null or empty, all pixel will be filled with background color. 
            </remarks>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternBrush.Handle">
      <summary>
              Returns a handle to this <b>GdiObject</b> object.
            </summary>
      <value>
              A Windows handle to this <b>GdiObject</b> object.
            </value>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.PatternBrush.Dispose(System.Boolean)">
      <summary>
              Releases the unmanaged resources used by the <b>GdiObject</b> and optionally releases the managed resources.
            </summary>
      <param name="disposing">
        <b>true</b> to release both managed and unmanaged resources; <b>false</b> to release only unmanaged resources.
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.PatternBrush.Clone">
      <summary>
              Creates an exact copy if this <b>GdiObject</b> object.
            </summary>
      <returns>
              The <b>GdiObject</b> object that this method creates.
            </returns>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.TextureBrush">
      <summary>
              Represent a texture brush be used to fill with texture
            </summary>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.TextureBrush.#ctor(C1.Framework.Drawing.Gdi.Bitmap)">
      <summary>
              Initialize a new istance of <see cref="T:C1.Framework.Drawing.Gdi.TextureBrush" /></summary>
      <param name="bitmap">
              A <see cref="T:C1.Framework.Drawing.Gdi.Bitmap" /> indicate an unit of the texture
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.TextureBrush.Clone">
      <summary>
              Creates an exact copy if this <b>TextureBrush</b> object.
            </summary>
      <returns>
              A new <see cref="T:C1.Framework.Drawing.Gdi.TextureBrush" /> which properties same as current brush
            </returns>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.TextureBrush.Dispose(System.Boolean)">
      <summary>
              Releases the unmanaged resources used by the <b>GdiObject</b> and optionally releases the managed resources.
            </summary>
      <param name="disposing">
        <b>true</b> to release both managed and unmanaged resources; <b>false</b> to release only unmanaged resources.
            </param>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.GradientDirection">
      <summary>
              An <see cref="T:System.Enum" /> represents the gradient direction.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.GradientDirection.Left">
      <summary>
              Towards to left.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.GradientDirection.Right">
      <summary>
              Towards to right.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.GradientDirection.Up">
      <summary>
              Towards to up.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.GradientDirection.Down">
      <summary>
              Towards to down.
            </summary>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.GradientBrush">
      <summary>
              Represents the brush to be used to fill the gradient shape.
            </summary>
      <remarks>
              The handle of the inherited class of  <see cref="T:C1.Framework.Drawing.Gdi.GradientBrush" /> is always IntPtr.Zero, 
              so it can not be used to <see cref="T:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext" />.
            </remarks>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.GradientBrush.ReverseColors(System.Drawing.Color[])">
      <summary>
              Get the reverse order colors
            </summary>
      <param name="colors">
              A <see cref="T:System.Drawing.Color" /> array indicates the original colors.
            </param>
      <returns>
              A <see cref="T:System.Drawing.Color" /> array indicates the reverse order colors.
            </returns>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.GradientBrush.CombineColors(System.Drawing.Color[][])">
      <summary>
              Combines the colors.
            </summary>
      <param name="colorsList">
              A <see cref="T:System.Drawing.Color" /> array indicates the colors.
            </param>
      <returns>
              A <see cref="T:System.Drawing.Color" /> array indicates the combined colors.
            </returns>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.GradientBrush.FillTriangle(C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Color[])">
      <summary>
              Fills triangle with specified colors.
            </summary>
      <param name="deviceContext">
              A <see cref="T:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext" /> indicates the dc.
            </param>
      <param name="vertex1">
              A <see cref="T:System.Drawing.Point" /> indicates the vertex1 of triangle.
            </param>
      <param name="vertex2">
              A <see cref="T:System.Drawing.Point" /> indicates the vertex2 of triangle.
            </param>
      <param name="vertex3">
              A <see cref="T:System.Drawing.Point" /> indicates the vertex3 of triangle.
            </param>
      <param name="colors">
              A <see cref="T:System.Drawing.Color" /> array indicates the gradient colors.
            </param>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.BoxGradientBrush">
      <summary>
              Represents the brush to be used to fill the gradient shape.
            </summary>
      <remarks>
              The handle of the <see cref="T:C1.Framework.Drawing.Gdi.BoxGradientBrush" /> is always IntPtr.Zero, so it can not be used 
              to <see cref="T:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext" />.
            </remarks>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.BoxGradientBrush.Clone">
      <summary>
              Creates an exact copy if this <b>BoxGradientBrush</b> object.
            </summary>
      <returns>
              The <b>BoxGradientBrush</b> object that this method creates.
            </returns>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.LinearBoxGradientBrush">
      <summary>
              Represents the brush to be used to fill the gradient shape.
            </summary>
      <remarks>
              The handle of the <see cref="T:C1.Framework.Drawing.Gdi.LinearBoxGradientBrush" /> is always IntPtr.Zero, so it can not be used 
              to <see cref="T:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext" />.
            </remarks>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.LinearBoxGradientBrush.#ctor(System.Drawing.Color[],C1.Framework.Drawing.Gdi.GradientDirection)">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Framework.Drawing.Gdi.LinearBoxGradientBrush" /> class.
            </summary>
      <param name="colors">
              An array of <see cref="T:System.Drawing.Color" /> that indicates the linear gradient colors.
            </param>
      <param name="direction">
              A <see cref="T:C1.Framework.Drawing.Gdi.GradientDirection" /> that indicates the gradient direction.
            </param>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.LinearBoxGradientBrush.Colors">
      <summary>
              Gets or sets the linear gradient colors.
            </summary>
      <value>
              An array of <see cref="T:System.Drawing.Color" /> that indicates the linear gradient colors.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.LinearBoxGradientBrush.Direction">
      <summary>
              Gets or sets the gradient direction.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.GradientDirection" /> that indicates the gradient direction.
            </value>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.TriangleBoxGradientBrush">
      <summary>
              Represents the brush to be used to fill the gradient shape.
            </summary>
      <remarks>
              The handle of the <see cref="T:C1.Framework.Drawing.Gdi.LinearBoxGradientBrush" /> is always IntPtr.Zero, so it can not be used 
              to <see cref="T:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext" />.
            </remarks>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.TriangleBoxGradientBrush.#ctor(System.Drawing.Color[],System.Drawing.PointF)">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Framework.Drawing.Gdi.TriangleBoxGradientBrush" /> class.
            </summary>
      <param name="colors">
              An array of <see cref="T:System.Drawing.Color" /> that indicates the linear gradient colors.
            </param>
      <param name="centrePoint">
              A <see cref="T:System.Drawing.PointF" /> that indicates the gradient centre point.
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.TriangleBoxGradientBrush.#ctor(System.Drawing.Color[],System.Drawing.ContentAlignment)">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Framework.Drawing.Gdi.TriangleBoxGradientBrush" /> class.
            </summary>
      <param name="colors">
              An array of <see cref="T:System.Drawing.Color" /> that indicates the linear gradient colors.
            </param>
      <param name="centrePoint">
              A <see cref="T:System.Drawing.ContentAlignment" /> that indicates the gradient centre point.
            </param>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.TriangleBoxGradientBrush.Colors">
      <summary>
              Gets or sets the linear gradient colors.
            </summary>
      <value>
              An array of <see cref="T:System.Drawing.Color" /> that indicates the linear gradient colors.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.TriangleBoxGradientBrush.CentrePoint">
      <summary>
              Gets or sets the gradient direction.
            </summary>
      <value>
              A <see cref="T:System.Drawing.PointF" /> that indicates the gradient centre point.
            </value>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.LinearGradientBrush">
      <summary>
              Represents the brush to be used to fill the gradient shape.
            </summary>
      <remarks>
              The handle of the <see cref="T:C1.Framework.Drawing.Gdi.LinearGradientBrush" /> is always IntPtr.Zero, so it can not be used 
              to <see cref="T:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext" />.
            </remarks>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.LinearGradientBrush.#ctor(System.Drawing.Point,System.Drawing.Point,System.Drawing.Color[])">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Framework.Drawing.Gdi.LinearGradientBrush" /> class.
            </summary>
      <param name="startPoint">
      </param>
      <param name="endPoint">
      </param>
      <param name="linearColors">
      </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.LinearGradientBrush.Clone">
      <summary>
              Creates an exact copy if this <b>LinearGradientBrush</b> object.
            </summary>
      <returns>
              The <b>LinearGradientBrush</b> object that this method creates.
            </returns>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.ColorBrush">
      <summary>
              Defines a brush that has a solid color.
            </summary>
      <remarks>
              This brush has the same funtion as <see cref="T:C1.Framework.Drawing.Gdi.SolidBrush" /> in painting. 
              This brush will not consume gdi handle. In other word, the Handle property is always IntPtr.Zero. So it 
              can not be used to <see cref="T:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext" />.
            </remarks>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.ColorBrush.#ctor(System.Drawing.Color)">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> class.
            </summary>
      <param name="color">
              A <see cref="P:C1.Framework.Drawing.Gdi.ColorBrush.Color" /> indicates the color of the brush. 
            </param>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.ColorBrush.Color">
      <summary>
              Gets or sets the color of the brush.
            </summary>
      <value>
              A <see cref="P:C1.Framework.Drawing.Gdi.ColorBrush.Color" /> indicates the color of the brush.
            </value>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.ColorBrush.Clone">
      <summary>
              Creates an exact copy if this <b>ColorBrush</b> object.
            </summary>
      <returns>
              The <b>ColorBrush</b> object that this method creates.
            </returns>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.Brushes">
      <summary>
              Brushes for all the standard colors. 
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.Transparent">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.AliceBlue">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.AntiqueWhite">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.Aqua">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.Aquamarine">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.Azure">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.Beige">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.Bisque">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.Black">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.BlanchedAlmond">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.Blue">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.BlueViolet">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.Brown">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.BurlyWood">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.CadetBlue">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.Chartreuse">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.Chocolate">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.Coral">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.CornflowerBlue">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.Cornsilk">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.Crimson">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.Cyan">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.DarkBlue">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.DarkCyan">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.DarkGoldenrod">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.DarkGray">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.DarkGreen">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.DarkKhaki">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.DarkMagenta">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.DarkOliveGreen">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.DarkOrange">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.DarkOrchid">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.DarkRed">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.DarkSalmon">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.DarkSeaGreen">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.DarkSlateBlue">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.DarkSlateGray">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.DarkTurquoise">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.DarkViolet">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.DeepPink">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.DeepSkyBlue">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.DimGray">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.DodgerBlue">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.Firebrick">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.FloralWhite">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.ForestGreen">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.Fuchsia">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.Gainsboro">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.GhostWhite">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.Gold">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.Goldenrod">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.Gray">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.Green">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.GreenYellow">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.Honeydew">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.HotPink">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.IndianRed">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.Indigo">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.Ivory">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.Khaki">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.Lavender">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.LavenderBlush">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.LawnGreen">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.LemonChiffon">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.LightBlue">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.LightCoral">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.LightCyan">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.LightGoldenrodYellow">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.LightGreen">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.LightGray">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.LightPink">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.LightSalmon">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.LightSeaGreen">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.LightSkyBlue">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.LightSlateGray">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.LightSteelBlue">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.LightYellow">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.Lime">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.LimeGreen">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.Linen">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.Magenta">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.Maroon">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.MediumAquamarine">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.MediumBlue">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.MediumOrchid">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.MediumPurple">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.MediumSeaGreen">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.MediumSlateBlue">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.MediumSpringGreen">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.MediumTurquoise">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.MediumVioletRed">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.MidnightBlue">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.MintCream">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.MistyRose">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.Moccasin">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.NavajoWhite">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.Navy">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.OldLace">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.Olive">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.OliveDrab">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.Orange">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.OrangeRed">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.Orchid">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.PaleGoldenrod">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.PaleGreen">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.PaleTurquoise">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.PaleVioletRed">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.PapayaWhip">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.PeachPuff">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.Peru">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.Pink">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.Plum">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.PowderBlue">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.Purple">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.Red">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.RosyBrown">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.RoyalBlue">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.SaddleBrown">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.Salmon">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.SandyBrown">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.SeaGreen">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.SeaShell">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.Sienna">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.Silver">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.SkyBlue">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.SlateBlue">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.SlateGray">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.Snow">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.SpringGreen">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.SteelBlue">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.Tan">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.Teal">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.Thistle">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.Tomato">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.Turquoise">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.Violet">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.Wheat">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.White">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.WhiteSmoke">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.Yellow">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Brushes.YellowGreen">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object set to a system-defined color.
            </value>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.SystemBrushes">
      <summary>
              Each property of the SystemBrushes class is a <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the color of 
              a Windows display element.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemBrushes.ActiveBorder">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the color of the active window's border.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the color of the active window's border.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemBrushes.ActiveCaption">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the color of the active window's title bar.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the color of the active window's title bar.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemBrushes.ActiveCaptionText">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the color of the text in the active window's
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the color of the text in the active window's
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemBrushes.AppWorkspace">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the color of the application workspace.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the color of the application workspace.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemBrushes.ButtonFace">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the face color of a 3-D element.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the face color of a 3-D element.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemBrushes.ButtonHighlight">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the highlight color of a 3-D element.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the highlight color of a 3-D element.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemBrushes.ButtonShadow">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the shadow color of a 3-D element.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the shadow color of a 3-D element.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemBrushes.Control">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the face color of a 3-D element
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the face color of a 3-D element
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemBrushes.ControlDark">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the shadow color of a 3-D element.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the shadow color of a 3-D element.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemBrushes.ControlDarkDark">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the dark shadow color of a 3-D element.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the dark shadow color of a 3-D element.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemBrushes.ControlLight">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the light color of a 3-D element.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the light color of a 3-D element.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemBrushes.ControlLightLight">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the highlight color of a 3-D
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the highlight color of a 3-D
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemBrushes.ControlText">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the color of text in a 3-D
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the color of text in a 3-D
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemBrushes.Desktop">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the color of the desktop.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the color of the desktop.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemBrushes.GradientActiveCaption">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the lightest color
              in the color gradient of an active window's title bar.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the lightest color in the color gradient of an active window's title bar.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemBrushes.GradientInactiveCaption">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the lightest color in the color
              gradient of an inactive window's title bar.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the lightest color in the color gradient of an inactive window's title bar.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemBrushes.GrayText">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the color of dimmed text.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the color of dimmed text.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemBrushes.Highlight">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the color of the background of selected items.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the color of the background of selected items.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemBrushes.HighlightText">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the color of the text of selected items.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the color of the text of selected items.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemBrushes.HotTrack">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the color used to designate a hot-tracked item.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the color used to designate a hot-tracked item.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemBrushes.InactiveBorder">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the color of an inactive window's border.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the color of an inactive window's border.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemBrushes.InactiveCaption">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the color of the background of an inactive window's title bar.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the color of the background of an inactive window's title bar.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemBrushes.InactiveCaptionText">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the color of the text in an inactive window's title bar.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the color of the text in an inactive window's title bar.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemBrushes.Info">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the color of the background of a ToolTip.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the color of the background of a ToolTip.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemBrushes.InfoText">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the color of the text of a ToolTip.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the color of the text of a ToolTip.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemBrushes.Menu">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the color of a menu's background.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the color of a menu's background.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemBrushes.MenuBar">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the color of the background of a menu bar.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the color of the background of a menu bar.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemBrushes.MenuHighlight">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the color used to highlight menu items
              when the menu appears as a flat menu.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the color used to highlight menu items when the menu appears as a flat menu.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemBrushes.MenuText">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the color of a menu's text.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the color of a menu's text.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemBrushes.ScrollBar">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the color of the background of a scroll bar.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the color of the background of a scroll bar.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemBrushes.Window">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the color of the background in the client area of a window.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the color of the background in the client area of a window.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemBrushes.WindowFrame">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the color of a window frame.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the color of a window frame.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemBrushes.WindowText">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the color of the text in the client area of a window.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorBrush" /> object that is the color of the text in the client area of a window.
            </value>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContextState">
      <summary>
              Saves the state of the <see cref="T:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext" />.
            </summary>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.DeviceContexts.RasterOperationCode">
      <summary>
              Represents the raster operation code.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.RasterOperationCode.Invert">
      <summary>
              Inverts the destination rectangle.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.RasterOperationCode.Blackness">
      <summary>
              Fills the destination rectangle using the color associated with index 0 in the physical palette. 
              (This color is black for the default physical palette.)
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.RasterOperationCode.Whiteness">
      <summary>
              Fills the destination rectangle using the color associated with index 1 in the physical palette. 
              (This color is white for the default physical palette.) 
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.RasterOperationCode.SourceCopy">
      <summary>
              Copies the source rectangle directly to the destination rectangle.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.RasterOperationCode.SourcePaint">
      <summary>
              Combines the colors of the source and destination rectangles by using the Boolean OR operator.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.RasterOperationCode.SourceAnd">
      <summary>
              Combines the colors of the source and destination rectangles by using the Boolean AND operator.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.RasterOperationCode.SourceInvert">
      <summary>
              Combines the colors of the source and destination rectangles by using the Boolean XOR operator.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.RasterOperationCode.SourceErase">
      <summary>
              Combines the inverted colors of the destination rectangle with the colors of the source rectangle
              by using the Boolean AND operator.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.RasterOperationCode.NotSourceCopy">
      <summary>
              Copies the inverted source rectangle to the destination.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.RasterOperationCode.NotSourceErase">
      <summary>
              Combines the colors of the source and destination rectangles by using the Boolean OR operator
              and then inverts the resultant color.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.RasterOperationCode.MergeCopy">
      <summary>
              Merges the colors of the source rectangle with the brush currently selected in hdcDest,
              by using the Boolean AND operator.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.RasterOperationCode.MergePaint">
      <summary>
              Merges the colors of the inverted source rectangle with the colors of the destination rectangle
              by using the Boolean OR operator.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.RasterOperationCode.PatCopy">
      <summary>
              Copies the brush currently selected in hdcDest, into the destination bitmap.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.RasterOperationCode.PatPaint">
      <summary>
              Combines the colors of the brush currently selected in hdcDest, with the colors of the inverted source rectangle
              by using the Boolean OR operator. The result of this operation is combined with the colors of the destination
              rectangle by using the Boolean OR operator.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.RasterOperationCode.PatInvert">
      <summary>
              Combines the colors of the brush currently selected in hdcDest, 
              with the colors of the destination rectangle by using the Boolean XOR operator.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.RasterOperationCode.PatAnd">
      <summary>
              Combines the colors of the brush currently selected in hdcDest, 
              with the colors of the destination rectangle by using the Boolean And operator.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.RasterOperationCode.PatOr">
      <summary>
              Combines the colors of the brush currently selected in hdcDest, 
              with the colors of the destination rectangle by using the Boolean OR operator.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.RasterOperationCode.DestinationInvert">
      <summary>
              Inverts the destination rectangle.
            </summary>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.DeviceContexts.BackgroundMode">
      <summary>
              Represents the mode of the background.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.BackgroundMode.Transparent">
      <summary>
              Background remains untouched.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.BackgroundMode.Opaque">
      <summary>
              Background is filled with the current background color before the text, hatched brush, or pen is drawn.
            </summary>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.DeviceContexts.CircumDirection">
      <summary>
              Represents the circum-direction.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.CircumDirection.Counterclockwise">
      <summary>
              Figures drawn counterclockwise
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.CircumDirection.Clockwise">
      <summary>
              Figures drawn clockwise.
            </summary>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.DeviceContexts.PolyFillMode">
      <summary>
              Enumerate the fill mode for region
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.PolyFillMode.Alternate">
      <summary>
              Selects alternate mode (fills the area between odd-numbered and even-numbered polygon sides on each scan line).
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.PolyFillMode.Winding">
      <summary>
              Selects winding mode (fills any region with a nonzero winding value).
            </summary>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.DeviceContexts.GraphicsMode">
      <summary>
              Define a enumeration indicates the graphics mode.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.GraphicsMode.Compatible">
      <summary>
              The current graphics mode is the compatible graphics mode, a mode 
              that is compatible with 16-bit Windows. In this graphics mode, an 
              application cannot set or modify the world transformation for the 
              specified device context. The compatible graphics mode is the 
              default graphics mode.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.GraphicsMode.Advance">
      <summary>
               Windows NT/2000/XP: The current graphics mode is the advanced 
               graphics mode, a mode that allows world transformations. In this 
               graphics mode, an application can set or modify the world 
               transformation for the specified device context. 
            </summary>
      <remarks>
              Windows 95/98/Me: This mode is not supported. 
            </remarks>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.DeviceContexts.MappingMode">
      <summary>
              Defines the unit of measure used to transform page-space units into device-space units, and also defines 
              the orientation of the device's x and y axes. 
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.MappingMode.Anisotropic">
      <summary>
              Logical units are mapped to arbitrary units with arbitrarily scaled axes. 
              Use the WindowExtent and ViewportExtent properties to specify the units, orientation, and scaling.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.MappingMode.Isotropic">
      <summary>
              Logical units are mapped to arbitrary units with equally scaled axes; that is, one unit along the x-axis is 
              equal to one unit along the y-axis. 
              Use the WindowExtent and ViewportExtent properties to specify the units and the orientation of the axes. 
              Graphics device interface (GDI) makes adjustments as necessary to ensure the x and y units remain the same size
              (When the window extent is set, the viewport will be adjusted to keep the units isotropic).
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.MappingMode.Twips">
      <summary>
              Each logical unit is mapped to one twentieth of a printer's point (1/1440 inch, also called a twip). 
              Positive x is to the right; positive y is up.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.MappingMode.HiEnglish">
      <summary>
              Each logical unit is mapped to 0.001 inch. Positive x is to the right; positive y is up.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.MappingMode.LoEnglish">
      <summary>
              Each logical unit is mapped to 0.01 inch. Positive x is to the right; positive y is up.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.MappingMode.HiMetric">
      <summary>
              Each logical unit is mapped to 0.01 millimeter. Positive x is to the right; positive y is up.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.MappingMode.LoMetric">
      <summary>
              Each logical unit is mapped to 0.1 millimeter. Positive x is to the right; positive y is up.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.MappingMode.Text">
      <summary>
              Each logical unit is mapped to one device pixel. Positive x is to the right; positive y is down.
            </summary>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.DeviceContexts.TextAlignment">
      <summary>
              Specifies the text alignment by using a mask of the values in the following list. 
              Only one flag can be chosen from those that affect horizontal and vertical alignment.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.TextAlignment.Left">
      <summary>
              The reference point will be on the left edge of the bounding rectangle.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.TextAlignment.Right">
      <summary>
              The reference point will be on the right edge of the bounding rectangle.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.TextAlignment.Center">
      <summary>
              The reference point will be aligned horizontally with the center of the bounding rectangle.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.TextAlignment.Top">
      <summary>
              The reference point will be on the top edge of the bounding rectangle.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.TextAlignment.Bottom">
      <summary>
              The reference point will be on the bottom edge of the bounding rectangle.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.TextAlignment.Baseline">
      <summary>
              The reference point will be on the base line of the text.
            </summary>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.DeviceContexts.TextFormat">
      <summary>
              Specifies the method of formatting the text.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.TextFormat.Default">
      <summary>
              The default text format is "Top|Left".
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.TextFormat.Top">
      <summary>
              Justifies the text to the top of the rectangle.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.TextFormat.VerticalCenter">
      <summary>
              Centers text vertically. This value is used only with the SingleLine value.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.TextFormat.Bottom">
      <summary>
              Justifies the text to the bottom of the rectangle. This value is used only with the SingleLine value.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.TextFormat.Left">
      <summary>
              Aligns text to the left.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.TextFormat.HorizontalCenter">
      <summary>
              Centers text horizontally in the rectangle.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.TextFormat.Right">
      <summary>
              Aligns text to the right.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.TextFormat.EndEllipsis">
      <summary>
              For displayed text, if the end of a string does not fit in the rectangle, it is truncated and 
              ellipses are added. If a word that is not at the end of the string goes beyond the limits of 
              the rectangle, it is truncated without ellipses. 
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.TextFormat.WordEllipsis">
      <summary>
              Truncates any word that does not fit in the rectangle and adds ellipses.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.TextFormat.PathEllipsis">
      <summary>
              For displayed text, replaces characters in the middle of the string with ellipses so that the result 
              fits in the specified rectangle. If the string contains backslash (\) characters, PathEllipsis 
              preserves as much as possible of the text after the last backslash. 
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.TextFormat.NoPrefix">
      <summary>
              Turns off processing of prefix characters.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.TextFormat.HidePrefix">
      <summary>
              Ignores the ampersand (&amp;) prefix character in the text. The letter that follows will not be underlined, 
              but other mnemonic-prefix characters are still processed. 
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.TextFormat.PrefixOnly">
      <summary>
              Draws only an underline at the position of the character following the ampersand (&amp;) prefix character.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.TextFormat.NoClip">
      <summary>
              Draws without clipping.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.TextFormat.ExternalLeading">
      <summary>
              Includes the font external leading in line height. Normally, external leading is not included in the 
              height of a line of text.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.TextFormat.EditControl">
      <summary>
              Duplicates the text-displaying characteristics of a multiline edit control. Specifically, the average 
              character width is calculated in the same manner as for an edit control, and the function does not 
              display a partially visible last line.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.TextFormat.RightToLeft">
      <summary>
              Layout in right-to-left reading order for bi-directional text when the font selected into the device context
              is a Hebrew or Arabic font. The default reading order for all text is left-to-right.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.TextFormat.SingleLine">
      <summary>
              Displays text on a single line only. Carriage returns and line feeds do not break the line.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.TextFormat.WordBreak">
      <summary>
              Breaks words. Lines are automatically broken between words if a word would extend past the edge of the 
              pecified rectangle. A carriage return-line feed sequence also breaks the line. 
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.TextFormat.NoFullWidthCharacterBreak">
      <summary>
              Prevents a line break at a DBCS (double-wide character string), so that the line breaking rule is equivalent 
              to SBCS strings. 
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DeviceContexts.TextFormat.ExpandTabs">
      <summary>
              Expands tab characters. The default number of characters per tab is eight.
            </summary>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext">
      <summary>
              Represents the GDI device conext.
            </summary>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.Finalize">
      <summary>
              Deletes this <see cref="T:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext" />, and frees the memory allocated for it.
            </summary>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.Dispose">
      <summary>
              Releases all resources used by this <see cref="T:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext" /> object.
            </summary>
      <remarks>
              Calling <b>Dispose</b> allows the resources used by the <see cref="T:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext" /> object 
              to be reallocated for other purposes.
            </remarks>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.Dispose(System.Boolean)">
      <summary>
              Releases the unmanaged resources used by the <see cref="T:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext" />
              and optionally releases the managed resources.
            </summary>
      <param name="disposing">
        <b>true</b> to release both managed and unmanaged resources; 
              <b>false</b> to release only unmanaged resources.
            </param>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.Handle">
      <summary>
              Gets or [protected] sets the handle of the device context.
            </summary>
      <remarks>
              A <see cref="T:System.IntPtr" /> that indicates the handle of the device context.
            </remarks>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.SelectObject(System.IntPtr)">
      <summary>
               Selects an object into the specified device context(DC). The new object replaces the previous 
               object of the same type. 
             </summary>
      <param name="gdiObjectHandle">
               A <see cref="T:System.IntPtr" /> that indicates the handle to the gdi object to be selected.
             </param>
      <returns>
               Returns the handle of the previous gdi object of the same type.
             </returns>
      <remarks>
               Note: When the handle of a gdi object is selected to <see cref="T:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext" />, the properties 
               of the gdi object can not changed and the gdi object can not be disposed.
             </remarks>
      <example>
        <code>
                //
                // Paints a rectangle that is single black border and filled with white.
                //
                using (Pen pen = new SolidPen(Color.Black))
                {
                    using (Brush brush = new SolidBrush(Color.Wheat))
                    {
                        DeviceContext dc = DeviceContext.Screen;
                        IntPtr defaultPenHandle = dc.SelectObject(pen.Handle);
                        IntPtr defaultBrushHandle = dc.SelectObject(brush.Handle);
            
                        dc.PaintRectangle(new Rectangle(0, 0, 100, 100));
            
                        dc.SelectObject(defaultPenHandle);
                        dc.SelectObject(defaultBrushHandle);
                    }
                }
               </code>
      </example>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.DeleteObject(System.IntPtr)">
      <summary>
              Deletes a logical pen, brush, font, bitmap, region, or palette, freeing all system resources associated with the object.
              After the object is deleted, the specified handle is no longer valid.
            </summary>
      <param name="gdiObjectHandle">
              Handle to a logical pen, brush, font, bitmap, region, or palette.
            </param>
      <remarks>
              Do not delete a drawing object (pen or brush) while it is still selected into a DC.
              When a pattern brush is deleted, the bitmap associated with the brush is not deleted. The bitmap must be deleted independently.
            </remarks>
      <exception cref="T:C1.Framework.SystemErrorException">
              If the specified handle is not valid or is currently selected into a DC, it would throw a <see cref="T:C1.Framework.SystemErrorException" />.
            </exception>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.BackgroundColor">
      <summary>
              Gets or sets the color of the background of the device context.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> structure that indicates the color of the background of the device context.
            </value>
      <remarks>
        <para>
              If the background mode is <see cref="P:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.BackgroundMode" /> is <see cref="F:C1.Framework.Drawing.Gdi.DeviceContexts.BackgroundMode.Opaque" />, 
              the background color is used to fill gaps between styled lines, gaps between hatched lines in brushes, and
              character cells. The background color is also used when converting bitmaps from color to monochrome and vice versa. 
            </para>
      </remarks>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.SetBackgroundColor(System.Drawing.Color)">
      <summary>
              Sets the color of the background of the device context.
            </summary>
      <value>
              Returns the previous color of the background of the device context.
            </value>
      <para>
              If the background mode is <see cref="P:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.BackgroundMode" /> is <see cref="F:C1.Framework.Drawing.Gdi.DeviceContexts.BackgroundMode.Opaque" />, 
              the background color is used to fill gaps between styled lines, gaps between hatched lines in brushes, and
              character cells. The background color is also used when converting bitmaps from color to monochrome and vice versa. 
            </para>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.ForegroundColor">
      <summary>
              Gets or sets the color of the foreground of the device context.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> structure that indicates the color of the foreground of the device context.
            </value>
      <remarks>
              The <b>Color</b> is used to draw the face of each character written by the <b>TextOut</b> and <b>ExtTextOut</b> functions.
              The <b>Color</b> is also used in converting bitmaps from color to monochrome and vice versa. 
            </remarks>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.SetForegroundColor(System.Drawing.Color)">
      <summary>
              Sets the color of the foreground of the device context.
            </summary>
      <value>
              Returns the previous color of the foreground of the device context.
            </value>
      <remarks>
              The <b>Color</b> is used to draw the face of each character written by the <b>TextOut</b> and <b>ExtTextOut</b> functions.
              The <b>Color</b> is also used in converting bitmaps from color to monochrome and vice versa. 
            </remarks>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.BackgroundMode">
      <summary>
              Gets or sets the background mode of the device context.
            </summary>
      <value>
              A <see cref="P:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.BackgroundMode" /> structure that indicates the background mode of the device context.
            </value>
      <remarks>
        <para>
              The <b>BackgroundMode</b> affects the line styles for lines drawn using a pen created
              by the <b>CreatePen</b> GDI API function. The <b>BackgroundMode</b> does not affect lines drawn using a pen created
              by the <b>ExtCreatePen</b> GDI API function.
            </para>
        <para>
          <c>value</c> parameter can also be set to driver-specific values. 
              GDI passes such values to the device driver and otherwise ignores them.
            </para>
      </remarks>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.SetBackgroundMode(C1.Framework.Drawing.Gdi.DeviceContexts.BackgroundMode)">
      <summary>
              Sets the background mode of the device context.
            </summary>
      <value>
              Returns the previous foreground mode of the device context.
            </value>
      <remarks>
        <para>
              The <b>BackgroundMode</b> affects the line styles for lines drawn using a pen created
              by the <b>CreatePen</b> GDI API function. The <b>BackgroundMode</b> does not affect lines drawn using a pen created
              by the <b>ExtCreatePen</b> GDI API function.
            </para>
        <para>
          <c>backgroundMode</c> parameter can also be set to driver-specific values. 
              GDI passes such values to the device driver and otherwise ignores them.
            </para>
      </remarks>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.Save">
      <summary>
              Saves the current state of this <see cref="T:C1.Framework.Drawing.Gdi.Graphics" /> object and 
              identifies the saved state with a handle.
            </summary>
      <returns>
              This methods returns a <see cref="T:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContextState" /> state that saves current state of this
              <see cref="T:C1.Framework.Drawing.Gdi.Graphics" /> object.
            </returns>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.Restore(C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContextState)">
      <summary>
              Restores the state of this <see cref="T:C1.Framework.Drawing.Gdi.Graphics" /> object to the 
              state represented by a handle.
            </summary>
      <param name="state">
              A <see cref="T:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContextState" /> that represents the state to which to restore this
              <see cref="T:C1.Framework.Drawing.Gdi.Graphics" /> object.
            </param>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.CircumDirection">
      <summary>
              Gets or sets the drawing direction of the circle shapes.
            </summary>
      <value>
              A <see cref="P:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.CircumDirection" /> indicates the circum-direction.
            </value>
      <remarks>
              The default direction is <see cref="F:C1.Framework.Drawing.Gdi.DeviceContexts.CircumDirection.Counterclockwise" />. 
              The <b>CircumDirection</b> function specifies the direction in which the following functions draw:
              <see cref="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.DrawArc(System.Drawing.Point,System.UInt32,System.Single,System.Single)" />,
              <see cref="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.DrawArc(System.Drawing.Rectangle,System.Drawing.Point,System.Drawing.Point)" /><see cref="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.PaintChord(System.Drawing.Rectangle,System.Drawing.Point,System.Drawing.Point)" /><see cref="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.PaintEllipse(System.Drawing.Rectangle)" /><see cref="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.PaintPie(System.Drawing.Rectangle,System.Drawing.Point,System.Drawing.Point)" /><see cref="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.PaintRectangle(System.Drawing.Rectangle)" /><see cref="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.PaintRoundRectangle(System.Drawing.Rectangle,System.Int32,System.Int32)" /></remarks>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.GetCircleDirection">
      <summary>
              Gets the drawing direction of the circle shapes.
            </summary>
      <returns>
              A <see cref="P:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.CircumDirection" /> indicates the circum-direction.
            </returns>
      <remarks>
              The default direction is <see cref="F:C1.Framework.Drawing.Gdi.DeviceContexts.CircumDirection.Counterclockwise" />. 
              The SetCircumDirection function specifies the direction in which the following functions draw:
              <see cref="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.DrawArc(System.Drawing.Point,System.UInt32,System.Single,System.Single)" />,
              <see cref="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.DrawArc(System.Drawing.Rectangle,System.Drawing.Point,System.Drawing.Point)" /><see cref="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.PaintChord(System.Drawing.Rectangle,System.Drawing.Point,System.Drawing.Point)" /><see cref="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.PaintEllipse(System.Drawing.Rectangle)" /><see cref="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.PaintPie(System.Drawing.Rectangle,System.Drawing.Point,System.Drawing.Point)" /><see cref="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.PaintRectangle(System.Drawing.Rectangle)" /><see cref="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.PaintRoundRectangle(System.Drawing.Rectangle,System.Int32,System.Int32)" /></remarks>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.SetCircumDirection(C1.Framework.Drawing.Gdi.DeviceContexts.CircumDirection)">
      <summary>
              Sets the drawing direction of the circle shapes.
            </summary>
      <param name="circumDirection">
              A <see cref="P:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.CircumDirection" /> indicates the circum-direction.
            </param>
      <returns>
              A <see cref="P:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.CircumDirection" /> indicates the previous circum-direction.
            </returns>
      <remarks>
              The default direction is <see cref="F:C1.Framework.Drawing.Gdi.DeviceContexts.CircumDirection.Counterclockwise" />. 
              The SetCircumDirection function specifies the direction in which the following functions draw:
              <see cref="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.DrawArc(System.Drawing.Point,System.UInt32,System.Single,System.Single)" />,
              <see cref="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.DrawArc(System.Drawing.Rectangle,System.Drawing.Point,System.Drawing.Point)" /><see cref="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.PaintChord(System.Drawing.Rectangle,System.Drawing.Point,System.Drawing.Point)" /><see cref="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.PaintEllipse(System.Drawing.Rectangle)" /><see cref="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.PaintPie(System.Drawing.Rectangle,System.Drawing.Point,System.Drawing.Point)" /><see cref="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.PaintRectangle(System.Drawing.Rectangle)" /><see cref="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.PaintRoundRectangle(System.Drawing.Rectangle,System.Int32,System.Int32)" /></remarks>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.RasterOperationCode">
      <summary>
              Get or set the current foreground mix mode.GDI uses the foreground mix mode to combine pens and interiors of filled
              objects with the colors already on the screen. The foreground mix mode defines how colors from the brush or pen
              and the colors in the existing image are to be combined.
            </summary>
      <value>
              Specifies the mix mode. This parameter can be one of the following values.
            </value>
      <remarks>
              Mix modes define how GDI combines source and destination colors when drawing with the current pen.
              The mix modes are binary raster operation codes, representing all possible Boolean functions of two variables,
              using the binary operations AND, OR, and XOR (exclusive OR), and the unary operation NOT. The mix mode is for
              raster devices only; it is not available for vector devices. 
            </remarks>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.GetRasterOperationCode">
      <summary>
              retrieves the foreground mix mode of the specified device context. The mix mode specifies how the pen or interior
              color and the color already on the screen are combined to yield a new color. 
            </summary>
      <returns>
              If the function succeeds, the return value specifies the foreground mix mode. otherwise zero indicates failed.
            </returns>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.SetRasterOperationCode(C1.Framework.Drawing.Gdi.DeviceContexts.RasterOperationCode)">
      <summary>
              Sets the current foreground mix mode. GDI uses the foreground mix mode to combine pens and interiors of filled
              objects with the colors already on the screen. The foreground mix mode defines how colors from the brush or pen
              and the colors in the existing image are to be combined. 
            </summary>
      <param name="rasterOperationCode">
              Specifies the mix mode. This parameter can be one of the following values.
            </param>
      <returns>
              If the function succeeds, the return value specifies the previous mix mode. otherwise, zero indicates failed
            </returns>
      <remarks>
              Mix modes define how GDI combines source and destination colors when drawing with the current pen.
              The mix modes are binary raster operation codes, representing all possible Boolean functions of two variables,
              using the binary operations AND, OR, and XOR (exclusive OR), and the unary operation NOT. The mix mode is for
              raster devices only; it is not available for vector devices. 
            </remarks>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.DrawArc(System.Drawing.Point,System.UInt32,System.Single,System.Single)">
      <summary>
              Draws a line segment and an arc. 
              The line segment is drawn from the position which is defined by <c>radius</c> and <c>startAngle</c>. 
              The arc is drawn along the perimeter of a circle with the given radius and center. 
              The length of the arc is defined by the given start and sweep angles.  
            </summary>
      <param name="origin">
              A <see cref="T:System.Drawing.Point" /> specifies the center of the circle. 
            </param>
      <param name="radius">
              A <b>uint</b> specifies the radius of the circle. This value must be positive.
            </param>
      <param name="startAngle">
              A <b>float</b> specifies the start angle, in degrees. 
            </param>
      <param name="sweepAngle">
              A <b>float</b> specifies the sweep angle, in degrees, relative to the starting angle.
            </param>
      <remarks>
              The arc is drawn by constructing an imaginary circle around the specified center point with the specified radius.
              The starting point of the arc is determined by measuring counterclockwise from the x-axis of the circle
              by the number of degrees in the start angle. The ending point is similarly located by measuring counterclockwise
              from the starting point by the number of degrees in the sweep angle.
              If the sweep angle is greater than 360 degrees,the arc is swept multiple times.
            </remarks>
      <exception cref="T:C1.Framework.SystemErrorException" />
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.DrawArc(System.Drawing.Rectangle,System.Drawing.Point,System.Drawing.Point)">
      <summary>
              Draws an elliptical arc. 
            </summary>
      <param name="rectangle">
              A <see cref="T:System.Drawing.Rectangle" /> specifies the bounding rectangle.
            </param>
      <param name="firstRadial">
              A <see cref="T:System.Drawing.Point" /> specifies the ending point of the radial line defining the starting point of the arc.
            </param>
      <param name="secondRadial">
              A <see cref="T:System.Drawing.Point" /> specifies the ending point of the radial line defining the ending point of the arc.
            </param>
      <remarks>
              The <c>rectangle</c> specify the bounding rectangle. An ellipse formed by the specified bounding rectangle
              defines the curve of the arc. The arc extends in the current drawing direction from the point where it intersects
              the radial from the center of the bounding rectangle to the <c>firstRadial</c> point. The arc ends where
              it intersects the radial from the center of the bounding rectangle to the <c>secondRadial</c> point.
              If the starting point and ending point are the same, a complete ellipse is drawn. 
            </remarks>
      <exception cref="T:C1.Framework.SystemErrorException" />
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.DrawLine(System.Drawing.Point,System.Drawing.Point)">
      <summary>
              Draws the special line by using the current pen of the device context.
            </summary>
      <param name="startPoint">
              A <see cref="T:System.Drawing.Point" /> indicate the line start point
            </param>
      <param name="endPoint">
              A <see cref="T:System.Drawing.Point" /> indicate the line end point
            </param>
      <exception cref="T:C1.Framework.SystemErrorException" />
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.DrawPolyLine(System.Drawing.Point[])">
      <summary>
              Draws a series of line segments by connecting the points in the specified array.
            </summary>
      <param name="points">
              A <see cref="T:System.Drawing.Point" /> array indicates the line segments.
            </param>
      <remarks>
        <para>
              The lines are drawn from the first point through subsequent points by using the current pen.
              <b>Windows 95/98/Me</b>: DrawPolyLine cannot draw more than a certain number of points.
              The limit depends on the line width (that is, the width of the pen selected into the DC)
            
              <b>Line width</b><b>Maximum points allowed</b>
              line width is 1                                                   16K
              line width &gt; 1 (that is, wideline) and device supports wideline   16K
              line width &gt; 1 but device does not support wideline               approximately 1360 (that is, approximately 16K/12)
            </para>
        <para>
              Any extra points are ignored. To draw a line with more points, divide the data into groups
              that have less than the maximum number of points and call the function for each group of points.
              Remember to connect the line segments.
            </para>
      </remarks>
      <exception cref="T:C1.Framework.SystemErrorException" />
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.DrawPolyBezier(System.Drawing.Point[])">
      <summary>
              Draws one or more Bezier curves.
            </summary>
      <param name="points">
              An array of <see cref="T:System.Drawing.Point" />structures that contain the endpoints and control points of the curve(s).
              This value must be one more than three times the number of curves to be drawn,
              because each Bzier curve requires two control points and an endpoint,
              and the initial curve requires an additional starting point. 
            </param>
      <remarks>
        <para>
              DrawPolyBezier draws cubic Bzier curves by using the endpoints and control points specified by the <c>points</c> parameter.
              The first curve is drawn from the first point to the fourth point by using the second and third points
              as control points. Each subsequent curve in the sequence needs exactly three more points: the ending point of
              the previous curve is used as the starting point, the next two points in the sequence are control points,
              and the third is the ending point.
            </para>
        <para>
              The lines are drawn from the first point through subsequent points by using the current pen.
              <b>Windows 95/98/Me</b>: DrawPolyBezier cannot draw more than a certain number of points.
              The limit depends on the line width (that is, the width of the pen selected into the DC)
            
              <b>Line width</b><b>Maximum points allowed</b>
              line width is 1                                                   16K
              line width &gt; 1 (that is, wideline) and device supports wideline   16K
              line width &gt; 1 but device does not support wideline               approximately 1360 (that is, approximately 16K/12)
            </para>
        <para>
              Any extra points are ignored. To draw a line with more points, divide the data into groups
              that have less than the maximum number of points and call the function for each group of points.
              Remember to connect the line segments.
            </para>
      </remarks>
      <exception cref="T:C1.Framework.SystemErrorException" />
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.FillRectangle(System.Drawing.Color,System.Drawing.Color,System.Drawing.Rectangle,System.Boolean)">
      <summary>
              Gradient fills the rectangle with colors.
            </summary>
      <param name="startColor">
        <see cref="T:System.Drawing.Color" /> structure that represents the start color 
              of gradient.
            </param>
      <param name="endColor">
        <see cref="T:System.Drawing.Color" /> structure that represents the end color of 
              gradient.
            </param>
      <param name="rectangle">
        <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle 
              to fill.
            </param>
      <param name="verticalDirection">
              A <b>bool</b> indicates the fill direction. 
              <b>false</b> is horizontal direction. <b>true</b> is vertical direction.
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.FillTriangle(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
      <summary>
              Gradient fills the triangle with specified colors.
            </summary>
      <param name="color1">
              A <see cref="T:System.Drawing.Color" /> indicates the color of the vertex1.
            </param>
      <param name="color2">
              A <see cref="T:System.Drawing.Color" /> indicates the color of the vertex2.
            </param>
      <param name="color3">
              A <see cref="T:System.Drawing.Color" /> indicates the color of the vertex3.
            </param>
      <param name="vertex1">
              A <see cref="T:System.Drawing.Point" /> indicates the vertex1 of triangle.
            </param>
      <param name="vertex2">
              A <see cref="T:System.Drawing.Point" /> indicates the vertex2 of triangle.
            </param>
      <param name="vertex3">
              A <see cref="T:System.Drawing.Point" /> indicates the vertex3 of triangle.
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.FillRectangle(System.IntPtr,System.Drawing.Rectangle)">
      <summary>
              Fills the specified rectangle by using the specified brush.
            </summary>
      <param name="brushHandle">
              A <see cref="T:System.IntPtr" /> indicates the handle of the brush.
            </param>
      <param name="rectangle">
              A <see cref="T:System.Drawing.Rectangle" /> indicate the rectangle to fill.
            </param>
      <remarks>
              When filling the specified rectangle, it does not include the rectangle's right and bottom sides. GDI fills
              a rectangle up to, but not including, the right column and bottom row, regardless of the current mapping mode. 
            </remarks>
      <exception cref="T:C1.Framework.SystemErrorException" />
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.FillRectangle(System.Drawing.Rectangle,C1.Framework.Drawing.Gdi.DeviceContexts.RasterOperationCode)">
      <summary>
              Fills the specified rectangle by using the current brush of device context.
            </summary>
      <param name="rectangle">
              A <see cref="T:System.Drawing.Rectangle" /> indicates the rectangle to fill.
            </param>
      <param name="rasterOperationCode">
              A <see cref="P:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.RasterOperationCode" /> indicates the rester operation code.
            </param>
      <remarks>
              Not all devices support the this function. For more information, see the description of
              the <b>RC_BITBLT</b> capability in the <b>GetDeviceCaps</b> function.
            </remarks>
      <exception cref="T:C1.Framework.SystemErrorException" />
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.FillRegion(System.IntPtr,System.IntPtr)">
      <summary>
              Fills the region by the specified brush.
            </summary>
      <param name="brushHandle">
              A <see cref="T:System.IntPtr" /> indicates the handle of the brush.
            </param>
      <param name="regionHandle">
              A <see cref="T:System.IntPtr" /> indicates the handle of the region.
            </param>
      <exception cref="T:C1.Framework.SystemErrorException" />
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.FillRegionFrame(System.IntPtr,System.IntPtr,System.Drawing.Size)">
      <summary>
              Draws a border around the specified region by using the specified brush.
            </summary>
      <param name="brushHandle">
              A <see cref="T:System.IntPtr" /> indicates the handle of the brush.
            </param>
      <param name="regionHandle">
              A <see cref="T:System.IntPtr" /> indicates the handle of the region.
            </param>
      <param name="strokeSize">
              A <see cref="T:System.Drawing.Size" /> that specifies the width of vertical brush strokes and 
              the height of the horizontal brush strokes.
            </param>
      <exception cref="T:C1.Framework.SystemErrorException" />
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.PaintChord(System.Drawing.Rectangle,System.Drawing.Point,System.Drawing.Point)">
      <summary>
              Paints a chord (a region bounded by the intersection of an ellipse and a line segment, called a secant). 
              The chord is outlined by using the current pen and filled by using the current brush. 
            </summary>
      <param name="rectangle">
              A <see cref="T:System.Drawing.Rectangle" /> indicates the bounds of the ellipse.
            </param>
      <param name="firstRadial">
              A <see cref="T:System.Drawing.Point" /> indicates the endpoint of the first radial.
            </param>
      <param name="secondRadial">
              A <see cref="T:System.Drawing.Point" /> indicates the endpoint of the second radial.
            </param>
      <remarks>
        <para>
              The curve of the chord is defined by an ellipse that fits the specified bounding rectangle.
              The curve begins at the point where the ellipse intersects the first radial and extends counterclockwise to
              the point where the ellipse intersects the second radial. The chord is closed by drawing a line from
              the intersection of the first radial and the curve to the intersection of the second radial and the curve. 
            </para>
        <para>
              If the starting point and ending point of the curve are the same, a complete ellipse is drawn.
            </para>
      </remarks>
      <exception cref="T:C1.Framework.SystemErrorException" />
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.PaintEllipse(System.Drawing.Rectangle)">
      <summary>
              Paints an ellipse.
              The center of the ellipse is the center of the specified bounding rectangle. 
              The ellipse is outlined by using the current pen and is filled by using the current brush. 
            </summary>
      <param name="rectangle">
              A <see cref="T:System.Drawing.Rectangle" /> indicates the bounding rectangle.
            </param>
      <remarks>
        <b>Windows 95/98/Me</b>: The sum of the coordinates of the bounding rectangle cannot exceed 32,767. 
              The width of <c>rectangle</c> or the height of <c>rectangle</c> cannot exceed 32,767.
            </remarks>
      <exception cref="T:C1.Framework.SystemErrorException" />
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.PaintPie(System.Drawing.Rectangle,System.Drawing.Point,System.Drawing.Point)">
      <summary>
              Paints a pie-shaped wedge bounded by the intersection of an ellipse and two radials. 
              The pie is outlined by using the current pen and filled by using the current brush.
            </summary>
      <param name="rectangle">
              A <see cref="T:System.Drawing.Rectangle" /> indicates the bounds of the ellipse.
            </param>
      <param name="firstRadial">
              A <see cref="T:System.Drawing.Point" /> indicates the endpoint of the first radial.
            </param>
      <param name="secondRadial">
              A <see cref="T:System.Drawing.Point" /> indicates the endpoint of the second radial.
            </param>
      <remarks>
              The curve of the pie is defined by an ellipse that fits the specified bounding rectangle.
              The curve begins at the point where the ellipse intersects the first radial and extends counterclockwise to
              the point where the ellipse intersects the second radial. 
            </remarks>
      <exception cref="T:C1.Framework.SystemErrorException" />
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.PaintPolygon(System.Drawing.Point[])">
      <summary>
              Paints a polygon consisting of two or more vertices connected by straight lines. 
              The polygon is outlined by using the current pen and filled by using the current brush and polygon fill mode.
            </summary>
      <param name="vertices">
              A <see cref="T:System.Drawing.Point" /> structures that specify the vertices of the polygon.
            </param>
      <remarks>
        <para>
              The polygon is closed automatically by drawing a line from the last vertex to the first. 
            </para>
        <para>
          <b>Windows 95/98/Me</b>: PaintPolygon cannot draw more than a certain number of points.
              The limit depends on the line width (that is, the width of the pen selected into the DC)
            
              <b>Line width</b><b>Maximum points allowed</b>
              line width is 1                                                   16K
              line width &gt; 1 (that is, wideline) and device supports wideline   16K
              line width &gt; 1 but device does not support wideline               approximately 1360 (that is, approximately 16K/12)
            </para>
        <para>
              Any extra points are ignored. To draw a line with more points, divide the data into groups
              that have less than the maximum number of points and call the function for each group of points.
              Remember to connect the line segments.
            </para>
      </remarks>
      <exception cref="T:C1.Framework.SystemErrorException" />
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.PaintRectangle(System.Drawing.Rectangle)">
      <summary>
              Draw the special rectangle by using the current pen of the device context and fill the rectangle by using 
              the current brush of the device context.
            </summary>
      <param name="rectangle">
              A <see cref="T:System.Drawing.Rectangle" /> indicate the rectangle to paint.
            </param>
      <remarks>
              The rectangle that is drawn excludes the bottom and right edges.
              If a <see cref="T:C1.Framework.Drawing.Gdi.HollowPen" /> is used, the dimensions of the rectangle are 1 pixel less in height and 1 pixel less in width.
            </remarks>
      <exception cref="T:C1.Framework.SystemErrorException" />
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.PaintRoundRectangle(System.Drawing.Rectangle,System.Int32,System.Int32)">
      <summary>
              Paints a rectangle with rounded corners. The rectangle is outlined by using the current pen and filled by using 
              the current brush. 
            </summary>
      <param name="rectangle">
              A <see cref="T:System.Drawing.Rectangle" /> indicates the rectangle to paint.
            </param>
      <param name="width">
              An <b>int</b> indicates the width of the ellipse used to draw the rounded corners.
            </param>
      <param name="height">
              An <b>int</b> indicates the height of the ellipse used to draw the rounded corners.
            </param>
      <remarks>
        <b>Windows 95/98/Me</b>: The sum of the coordinates of the bounding rectangle cannot exceed 32,767. 
              The width of <c>rectangle</c> or the height of <c>rectangle</c> cannot exceed 32,767.
            </remarks>
      <exception cref="T:C1.Framework.SystemErrorException" />
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.Copy(C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext,System.Drawing.Rectangle,System.Drawing.Point,C1.Framework.Drawing.Gdi.DeviceContexts.RasterOperationCode)">
      <summary>
              Performs a bit-block transfer of the color data corresponding to a rectangle of pixels from 
              the specified source <see cref="T:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext" /> object into a destination <b>DeviceContext</b> object.
            </summary>
      <param name="deviceContext">
              The source <see cref="T:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext" /> object.
            </param>
      <param name="destRectangle">
              A <see cref="T:System.Drawing.Rectangle" /> indicates the destination rectangle.
            </param>
      <param name="srcPoint">
              A <see cref="T:System.Drawing.Point" /> indicates the upper-left corner of source rectangle. 
              The width and height of source rectangle are same as the destination rectangle.
            </param>
      <param name="rop">
              A <see cref="P:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.RasterOperationCode" /> indicates the raster operation code.
            </param>
      <remarks>
        <para>
              Copy only does clipping on the destination DC.
            </para>
        <para>
              If a rotation or shear transformation is in effect in the source device context, Copy will throw
              a <see cref="T:C1.Framework.SystemErrorException" />. If other transformations exist in the source device context (and a matching
              transformation is not in effect in the destination device context), the rectangle in the destination device context
              is stretched, compressed, or rotated, as necessary. 
            </para>
        <para>
              If the color formats of the source and destination device contexts do not match, the Copy function converts
              the source color format to match the destination format. 
            </para>
        <para>
              When an enhanced metafile is being recorded, an error occurs if the source device context identifies
              an enhanced-metafile device context. it means a <see cref="T:C1.Framework.SystemErrorException" /> would be throw out.
            </para>
        <para>
              Not all devices support the Copy function. For more information, see the <b>RC_BITBLT</b> raster capability entry
              in the <b>GetDeviceCaps</b> function as well as the following: <B>MaskBlt</B>, <b>PlgBlt</b>, and <b>StretchBlt</b>.
            </para>
      </remarks>
      <exception cref="T:C1.Framework.SystemErrorException" />
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.Copy(C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext,System.Drawing.Rectangle,System.Drawing.Rectangle,C1.Framework.Drawing.Gdi.DeviceContexts.RasterOperationCode)">
      <summary>
              Performs a bit-block transfer of the color data corresponding to a rectangle of pixels from 
              the specified source <see cref="T:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext" /> object into a destination <b>DeviceContext</b> object.
            </summary>
      <param name="deviceContext">
              The source <see cref="T:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext" /> object.
            </param>
      <param name="srcRectangle">
              A <see cref="T:System.Drawing.Rectangle" /> indicates the source rectangle.
            </param>
      <param name="destRectangle">
              A <see cref="T:System.Drawing.Rectangle" /> indicates the destination rectangle.
            </param>
      <param name="rop">
              A <see cref="P:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.RasterOperationCode" /> indicates the raster operation code.
            </param>
      <remarks>
        <para>
              Copy only does clipping on the destination DC.
            </para>
      </remarks>
      <exception cref="T:C1.Framework.SystemErrorException" />
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.AlphaBlend(C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext,System.Drawing.Rectangle,System.Drawing.Rectangle)">
      <summary>
              Displays bitmaps that have transparent or semitransparent pixels.
            </summary>
      <param name="deviceContext">
              The source <see cref="T:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext" /> object.
            </param>
      <param name="destRectangle">
              A <see cref="T:System.Drawing.Rectangle" /> indicates the destination rectangle.
            </param>
      <param name="srcRectangle">
              A <see cref="T:System.Drawing.Rectangle" /> indicates the source rectangle.
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.AlphaBlend(C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Byte)">
      <summary>
              Displays bitmaps with a constant transparent value.
            </summary>
      <param name="deviceContext">
              The source <see cref="T:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext" /> object.
            </param>
      <param name="destRectangle">
              A <see cref="T:System.Drawing.Rectangle" /> indicates the destination rectangle.
            </param>
      <param name="srcRectangle">
              A <see cref="T:System.Drawing.Rectangle" /> indicates the source rectangle.
            </param>
      <param name="srcConstantAlpha">
              A <b>byte</b> indicates the constant alpha value of source.
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.InvertRectangle(System.Drawing.Rectangle)">
      <summary>
              Inverts a rectangle in a window by performing a logical NOT operation on the color values for each pixel 
              in the rectangle's interior. 
            </summary>
      <param name="rectangle">
              A <see cref="T:System.Drawing.Point" />structure that contains the logical coordinates of the rectangle to be inverted.
            </param>
      <remarks>
              On monochrome screens, InvertRectangle makes white pixels black and black pixels white. On color screens, 
              the inversion depends on how colors are generated for the screen. Calling InvertRectangle twice
              for the same rectangle restores the display to its previous colors. 
            </remarks>
      <exception cref="T:C1.Framework.SystemErrorException" />
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.InvertRegion(System.IntPtr)">
      <summary>
              Inverts the colors in the specified region.
            </summary>
      <param name="regionHandle">
              A <see cref="T:System.IntPtr" /> indicates the handle of the region.
            </param>
      <remarks>
              On monochrome screens, the InvertRegion function makes white pixels black and black pixels white.
              On color screens, this inversion is dependent on the type of technology used to generate the colors for the screen.
            </remarks>
      <exception cref="T:C1.Framework.SystemErrorException" />
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.GetPixel(System.Drawing.Point)">
      <summary>
              retrieves the red, green, blue (RGB) color value of the pixel at the specified coordinates.
            </summary>
      <param name="point">
              Specifies the coordinate, in logical units, of the pixel to be examined. 
            </param>
      <returns>
              The return value is the RGB value of the pixel. If the pixel is outside of the current clipping region, 
              the return value is Color.Empty. 
            </returns>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.SetPixel(System.Drawing.Color,System.Drawing.Point)">
      <summary>
              Sets the pixel at the specified coordinates to the closest approximation of the specified color. 
              The point must be in the clipping region and the visible part of the device surface. 
            </summary>
      <param name="color">
              Specifies the color to be used to paint the point.
            </param>
      <param name="point">
              Specifies the coordinate, in logical units, of the point to be set.
            </param>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.ClippingRegion">
      <summary>
              Gets or sets the handle of the current clipping region of the device context. 
            </summary>
      <value>
              A <see cref="T:System.IntPtr" /> that indicates the handle of the clipping region.
            </value>
      <remarks>
        <para>
              Note: 
                [Get] The getting region is a copy of the current region.
                [Set] Only a copy of the setting region is used. The region itself can be seted 
                for any number of other device contexts or it can be deleted.
              </para>
        <para>
                To remove a device-context's clipping region, specify a IntPtr.Zero region handle.
              </para>
        <para>
                The coordinate of region will not be effected by current origin of page space.
              </para>
      </remarks>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.SetClippingRegion(System.IntPtr,System.Drawing.Drawing2D.CombineMode)">
      <summary>
              Combines the specified region with the current clipping region using the specified mode. 
            </summary>
      <param name="regionHandle">
              A <see cref="T:System.IntPtr" /> that indicates handle to the region to be selected. 
              This handle can only be IntPtr.Zero when the CombineMode.Replace mode is specified
            </param>
      <param name="combineMode">
              A <see cref="T:System.Drawing.Drawing2D.CombineMode" /> that indicates the combine mode. 
            </param>
      <remarks>
              The coordinate of region will not be effected by current origin of page space.
            </remarks>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.TranslateClippingRegion(System.Int32,System.Int32)">
      <summary>
              Moves the clipping region of a device context by the specified offsets.
            </summary>
      <param name="dx">
              Specifies the number of logical units to move left or right.
            </param>
      <param name="dy">
              Specifies the number of logical units to move up or down.
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.Clip(System.Drawing.Rectangle,System.Drawing.Drawing2D.CombineMode)">
      <summary>
              Clips the device context by the specified rectangle and operation mode.
            </summary>
      <param name="rectangle">
              A <see cref="T:System.Drawing.Rectangle" /> indicates the rectangle.
            </param>
      <param name="clippingMode">
              A <see cref="T:System.Drawing.Drawing2D.CombineMode" /> indicates operation mode.
            </param>
      <remarks>
              The coordinate of rectangle is base one the space page.
            </remarks>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.GetClippingBox">
      <summary>
              Retrieves the dimensions of the tightest bounding rectangle that can be drawn around the current 
              visible area on the device. The visible area is defined by the current clipping region or clip 
              path, as well as any overlapping windows.
            </summary>
      <returns>
              A <see cref="T:System.Drawing.Rectangle" /> indicates the dimensions, in logical units.
            </returns>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.GraphicsMode">
      <summary>
              Gets or sets a <see cref="P:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.GraphicsMode" /> indicating whether use the world transform in this DC.
            </summary>
      <value>
              A <see cref="P:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.GraphicsMode" /> indicates the graphics mode.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.WorldTransform">
      <summary>
              Gets or sets the world transform.
            </summary>
      <value>
        <para>
                An array of <b>float</b> that includes six elements. 
              </para>
        <code>
              | M11,  M12,  0 |
              | M21,  M22,  0 |
              | Dx,   Dy,   1 |
              </code>
        <para>
                The order is [M11, M12, M21, M22, Dx, Dy].
               </para>
      </value>
      <remarks>
              Notes: The length of the array must be six.
            </remarks>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.WindowExtent">
      <summary>
              Gets or sets the x-extent and y-extent of the current window for the device context.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Size" /> indicates the x-extent and y-extent of the current window for the device context.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.WindowOrigin">
      <summary>
              Gets or sets the x-coordinates and y-coordinates of the window origin for the device context
            </summary>
      <value>
              A <see cref="T:System.Drawing.Point" /> indicates the x-coordinates and y-coordinates of the window origin for the device context.
            </value>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.TranslateWindow(System.Int32,System.Int32)">
      <summary>
              Modifies the window origin for a device context using the specified horizontal and vertical offsets. 
            </summary>
      <param name="dx">
              An <b>int</b> specifies the horizontal offset. 
            </param>
      <param name="dy">
              An <b>int</b> specifies the vertical offset. 
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.ScaleWindow(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
              Modifies the window for a device context using the ratios formed by the specified multiplicands and divisors. 
            </summary>
      <param name="numX">
              A <b>int</b> specifies the amount by which to multiply the current horizontal extent.
            </param>
      <param name="denomX">
              A <b>int</b> specifies the amount by which to divide the current horizontal extent. 
            </param>
      <param name="numY">
              A <b>int</b> specifies the amount by which to multiply the current vertical extent.
            </param>
      <param name="denomY">
              A <b>int</b> specifies the amount by which to divide the current vertical extent.
            </param>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.MappingMode">
      <summary>
              Gets or sets the mapping mode of the device context.
            </summary>
      <value>
              A <see cref="P:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.MappingMode" /> indicates the value of the mapping mode.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.ViewportExtent">
      <summary>
              Gets or sets the x-extent and y-extent of the current viewport for the device context.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Size" /> indicates the x-extent and y-extent of the current viewport for the device context.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.ViewportOrigin">
      <summary>
              Gets or sets the x-coordinates and y-coordinates of the viewport origin for the device context
            </summary>
      <value>
              A <see cref="T:System.Drawing.Point" /> indicates the x-coordinates and y-coordinates of the viewport origin for the device context.
            </value>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.TranslateViewport(System.Int32,System.Int32)">
      <summary>
              Modifies the viewport origin for a device context using the specified horizontal and vertical offsets. 
            </summary>
      <param name="dx">
              An <b>int</b> specifies the horizontal offset. 
            </param>
      <param name="dy">
              An <b>int</b> specifies the vertical offset. 
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.ScaleViewport(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
              Modifies the viewport for a device context using the ratios formed by the specified multiplicands and divisors. 
            </summary>
      <param name="numX">
              A <b>int</b> specifies the amount by which to multiply the current horizontal extent.
            </param>
      <param name="denomX">
              A <b>int</b> specifies the amount by which to divide the current horizontal extent. 
            </param>
      <param name="numY">
              A <b>int</b> specifies the amount by which to multiply the current vertical extent.
            </param>
      <param name="denomY">
              A <b>int</b> specifies the amount by which to divide the current vertical extent.
            </param>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.PixelsPerInchX">
      <summary>
              Gets the number of pixels per logical inch along the screen width. 
              In a system with multiple display monitors, this value is the same for all monitors.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.PixelsPerInchY">
      <summary>
              Gets the number of pixels per logical inch along the screen height. 
              In a system with multiple display monitors, this value is the same for all monitors.
            </summary>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.PointLogicalToDevice(System.Drawing.Point[])">
      <summary>
              converts logical coordinates into device coordinates. The conversion depends on the mapping mode of the device
              context, the settings of the origins and extents for the window and viewport, and the world transformation. 
            </summary>
      <param name="logicalPoints">
              An <b>array</b> of <see cref="T:System.Drawing.Point" /> structures.
              The x- and y-coordinates contained in each <see cref="T:System.Drawing.Point" /> structure will be transformed.
            </param>
      <returns>
              An <b>array</b> of <see cref="T:System.Drawing.Point" /> structures indicate the point which is converted to Device coordinates
            </returns>
      <exception cref="T:System.ArgumentException" />
      <exception cref="T:C1.Framework.SystemErrorException" />
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.PointDeviceToLogical(System.Drawing.Point[])">
      <summary>
              converts device coordinates into logical coordinates. The conversion depends on the mapping mode of the device
              context, the settings of the origins and extents for the window and viewport, and the world transformation. 
            </summary>
      <param name="devicePoints">
              An <b>array</b> of <see cref="T:System.Drawing.Point" /> structures.
              The x- and y-coordinates contained in each <see cref="T:System.Drawing.Point" /> structure will be transformed.
            </param>
      <returns>
              An <b>array</b> of <see cref="T:System.Drawing.Point" /> structures indicate the point which is converted to Logical coordinates
            </returns>
      <exception cref="T:System.ArgumentException" />
      <exception cref="T:C1.Framework.SystemErrorException" />
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.TextAlign">
      <summary>
              Gets or sets the text-alignment flags for this device context. 
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.DeviceContexts.TextAlignment" /> that specifies the text alignment.
            </value>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.SetTextAlign(C1.Framework.Drawing.Gdi.DeviceContexts.TextAlignment)">
      <summary>
              Sets the text-alignment flags for this device context. 
            </summary>
      <param name="textAlignment">
              A <see cref="T:C1.Framework.Drawing.Gdi.DeviceContexts.TextAlignment" /> that specifies the new text alignment.
            </param>
      <returns>
              A <see cref="T:C1.Framework.Drawing.Gdi.DeviceContexts.TextAlignment" /> that specifies the previous text alignment.
            </returns>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.TextOut(System.String,System.Drawing.Point)">
      <summary>
              Writes a character string at the specified location, using the currently selected 
              font, background color, and text color. 
            </summary>
      <param name="text">
              A <b>string</b> that saves the characters to be written.
            </param>
      <param name="position">
              A <see cref="T:System.Drawing.Point" /> that indicates the reference point that the system uses to align the string. 
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.TextExtent(System.String)">
      <summary>
              Computes the width and height of the specified string of text.
            </summary>
      <param name="text">
              A <b>string</b> that saves a character string to be computed.
            </param>
      <returns>
              If the function succeeds, the return value is the dimensions of the string in logical units.
            </returns>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.TextExtentEx(System.String,System.Int32,System.Int32@,System.Int32[])">
      <summary>
              Retrieves the number of characters in a specified string that will fit within a specified space and 
              fills an array with the text extent for each of those characters.
            </summary>
      <param name="text">
              A string for which extents are to be retrieved. 
            </param>
      <param name="maxExtent">
              Specifies the maximum allowable width, in logical units, of the formatted string.
            </param>
      <param name="fitCharNumber">
              Receives a count of the maximum number of characters that will fit in the space specified by the 
              maxExtent parameter.
            </param>
      <param name="fitExtents">
              Pointer to an array of integers that receives partial string extents. 
              Each element in the array gives the distance, in logical units, between the beginning of the string 
              and one of the characters that fits in the space specified by the maxExtent parameter.
              This array must have at least as many elements as character count in text. The function fills the 
              array with valid extents for as many characters as are specified by the fitCharNumber parameter.
            </param>
      <returns>
              Receives the dimensions of the string, in logical units.
            </returns>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.TabbedTextOut(System.String,System.Drawing.Point,System.Int32[],System.Int32)">
      <summary>
              Writes a character string at a specified location, expanding tabs to the values specified in an array of 
              tab-stop positions. Text is written in the currently selected font, background color, and text color. 
            </summary>
      <param name="text">
              A <b>string</b> that saves the characters to be written.
            </param>
      <param name="position">
              A <see cref="T:System.Drawing.Point" /> that indicates the reference point that the system uses to align the string. 
            </param>
      <param name="tabStopPositions">
              Pointer to an array containing the tab-stop positions. The tab stops must be sorted in increasing order;
              the smallest x-value should be the first item in the array. If this parameter is null, tabs are expanded 
              to eight times the average character width.
            </param>
      <param name="tabOrigin">
              Specifies the x-coordinate of the starting position from which tabs are expanded.
            </param>
      <returns>
              Returns the dimensions, of the string.
            </returns>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.TabbedTextExtent(System.String,System.Int32[],System.Drawing.Size@)">
      <summary>
              The TabbedTextExtent method computes the width and height of a character string.If the string contains 
              one or more tab characters, the width of the string is based upon the specified tab stops. 
              The TabbedTextExtent method uses the currently selected font to compute the dimensions of the string. 
            </summary>
      <param name="text">
              A <b>string</b> that saves a character string to be computed.
            </param>
      <param name="tabStopPositions">
              An array containing the tab-stop positions, in device units. The tab stops must be sorted in increasing order; 
              the smallest x-value should be the first item in the array. 
            </param>
      <param name="size">
              If the function succeeds, the value is the dimensions of the string in logical units. 
              Else the value is Size.Empty.
            </param>
      <returns>
              Retrun a value indictaes whether this function succeed or not.
            </returns>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.SetTextJustification(System.Int32,System.Int32)">
      <summary>
              Specifies the amount of space the system should add to the break characters in a string of text. 
              The space is added when an application calls the TextOut method.
            </summary>
      <param name="breakExtra">
              Specifies the total extra space, in logical units, to be added to the line of text.
            </param>
      <param name="breakCount">
              Specifies the number of break characters in the line.
            </param>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.TextCharacterExtra">
      <summary>
              Gets or sets the current intercharacter spacing for the device context. 
            </summary>
      <value>
              Specifies the amount of extra space to be added to each character.
            </value>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.SetTextCharacterExtra(System.Int32)">
      <summary>
              Sets the current intercharacter spacing for the device context.
            </summary>
      <param name="charExtra">
              Specifies the amount of extra space to be added to each character. 
            </param>
      <returns>
              Returns the previous intercharacter spacing.
            </returns>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.DrawText(System.String,System.Drawing.Rectangle,C1.Framework.Drawing.Gdi.DeviceContexts.TextFormat)">
      <summary>
              Draws formatted text in the specified rectangle.
            </summary>
      <param name="text">
              The string that specifies the text to be drawn. 
            </param>
      <param name="rectangle">
              Contains the rectangle in which the text is to be formatted. 
            </param>
      <param name="format">
              Specifies the method of formatting the text.
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext.MeasureText(System.String,System.Drawing.Size,C1.Framework.Drawing.Gdi.DeviceContexts.TextFormat)">
      <summary>
              Draws formatted text in the specified rectangle.
            </summary>
      <param name="text">
              The string that specifies the text to be drawn. 
            </param>
      <param name="proposedSize">
              Contains the proposed size in which the text is to be formatted. 
            </param>
      <param name="format">
              Specifies the method of formatting the text.
            </param>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.DeviceContexts.RawDeviceContext">
      <summary>
              Represents a wrapper of the gid device context handle. 
            </summary>
      <remarks>
              The handle will not be released when RawDeviceContext is disposed.
            </remarks>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.RawDeviceContext.#ctor(System.IntPtr)">
      <summary>
              Initializes a new instance of <see cref="T:C1.Framework.Drawing.Gdi.DeviceContexts.RawDeviceContext" /> class.
            </summary>
      <param name="handle">
              An <see cref="T:System.IntPtr" /> that indicates the handle of the device context.
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.RawDeviceContext.Dispose(System.Boolean)">
      <summary>
              Releases the unmanaged resources used by the <b>RawDeviceContext</b>
              and optionally releases the managed resources.
            </summary>
      <param name="disposing">
        <b>true</b> to release both managed and unmanaged resources; 
              <b>false</b> to release only unmanaged resources.
            </param>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.DeviceContexts.GdiplusGraphicDeviceContext">
      <summary>
              Represents a gdi device context that created by gdi+ Graphics.
            </summary>
      <remarks>
              The Graphics will be locked, until the <see cref="T:C1.Framework.Drawing.Gdi.DeviceContexts.GdiplusGraphicDeviceContext" /> is disposed.
            </remarks>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.DeviceContexts.GdiplusGraphicDeviceContext.GdiplusGraphics">
      <summary>
              Gets the local cached Gdiplus <see cref="T:System.Drawing.Graphics" />.
            </summary>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.GdiplusGraphicDeviceContext.#ctor(System.Drawing.Graphics)">
      <summary>
              Initializes a new instance of <see cref="T:C1.Framework.Drawing.Gdi.DeviceContexts.GdiplusGraphicDeviceContext" /> class.
            </summary>
      <param name="gdiplusGraphics">
              A <see cref="T:System.Drawing.Graphics" /> indicates the gdi+ graphics.
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.GdiplusGraphicDeviceContext.Dispose(System.Boolean)">
      <summary>
              Releases the unmanaged resources used by the <b>GdiplusGraphicDeviceContext</b>
              and optionally releases the managed resources.
            </summary>
      <param name="disposing">
        <b>true</b> to release both managed and unmanaged resources; 
              <b>false</b> to release only unmanaged resources.
            </param>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.DeviceContexts.WindowDeviceContext">
      <summary>
              Represents a gdi device context coming directly from a window.
            </summary>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.WindowDeviceContext.#ctor(System.IntPtr)">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Framework.Drawing.Gdi.DeviceContexts.WindowDeviceContext" /> class.
            </summary>
      <param name="windowHandle">
              A <see cref="T:System.IntPtr" /> indicates the handle of a window.
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.WindowDeviceContext.Dispose(System.Boolean)">
      <summary>
              Releases the unmanaged resources used by the <b>WindowDeviceContext</b>
              and optionally releases the managed resources.
            </summary>
      <param name="disposing">
        <b>true</b> to release both managed and unmanaged resources; 
              <b>false</b> to release only unmanaged resources.
            </param>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.DeviceContexts.ControlDeviceContext">
      <summary>
              Represents a gdi device context coming directly from a control.
            </summary>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.ControlDeviceContext.#ctor(System.Windows.Forms.Control)">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Framework.Drawing.Gdi.DeviceContexts.ControlDeviceContext" /> class.
            </summary>
      <param name="control">
              A <see cref="T:System.Windows.Forms.Control" /> indicates the control.
            </param>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.DeviceContexts.DesktopDeviceContext">
      <summary>
              Represents a gdi device context coming directly from the desktop.
            </summary>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DesktopDeviceContext.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Framework.Drawing.Gdi.DeviceContexts.ControlDeviceContext" /> class.
            </summary>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.DeviceContexts.ImageDeviceContext">
      <summary>
              Represents a gdi device context coming directly from a gdi+ image.
            </summary>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.ImageDeviceContext.#ctor(System.Drawing.Image)">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Framework.Drawing.Gdi.DeviceContexts.ImageDeviceContext" /> class.
            </summary>
      <param name="image">
              A <see cref="T:System.Drawing.Image" />indicates the gdi+ image.
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.ImageDeviceContext.Dispose(System.Boolean)">
      <summary>
              Releases the unmanaged resources used by the <b>GdiplusGraphicDeviceContext</b>
              and optionally releases the managed resources.
            </summary>
      <param name="disposing">
        <b>true</b> to release both managed and unmanaged resources; 
              <b>false</b> to release only unmanaged resources.
            </param>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.DeviceContexts.DummyDeviceContext">
      <summary>
              Represents a gdi device context that used as a dummy.
            </summary>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DummyDeviceContext.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Framework.Drawing.Gdi.DeviceContexts.DummyDeviceContext" /> class.
            </summary>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.DummyDeviceContext.Dispose(System.Boolean)">
      <summary>
              Releases the unmanaged resources used by the <b>GdiplusGraphicDeviceContext</b>
              and optionally releases the managed resources.
            </summary>
      <param name="disposing">
        <b>true</b> to release both managed and unmanaged resources; 
              <b>false</b> to release only unmanaged resources.
            </param>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.DeviceContexts.CompatibleDeviceContext">
      <summary>
              Represents a gdi device context coming directly another device context. 
              It has the same format as the another device context.
            </summary>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.CompatibleDeviceContext.#ctor(C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext)">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Framework.Drawing.Gdi.DeviceContexts.WindowDeviceContext" /> class.
            </summary>
      <param name="deviceContext">
              A <see cref="T:System.IntPtr" /> indicates the handle of a window.
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DeviceContexts.CompatibleDeviceContext.Dispose(System.Boolean)">
      <summary>
              Releases the unmanaged resources used by the <b>WindowDeviceContext</b>
              and optionally releases the managed resources.
            </summary>
      <param name="disposing">
        <b>true</b> to release both managed and unmanaged resources; 
              <b>false</b> to release only unmanaged resources.
            </param>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.Font">
      <summary>
              Represents a GDI font object.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Font.ControlDefault">
      <summary>
              Gets the default <see cref="T:C1.Framework.Drawing.Gdi.Font" /> of the control.
            </summary>
      <value>
              The default <see cref="T:C1.Framework.Drawing.Gdi.Font" /> of the control.
            </value>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Font.#ctor(C1.Framework.Drawing.Gdi.Font,System.Drawing.FontStyle)">
      <summary>
              Initializes a new <see cref="T:C1.Framework.Drawing.Gdi.Font" /> object from the specified <b>Font</b> object and special style
            </summary>
      <param name="font">
              Special <see cref="T:C1.Framework.Drawing.Gdi.Font" /> from which is used to create new font
            </param>
      <param name="style">
              A <see cref="T:System.Drawing.FontStyle" /> indicate the special style
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Font.#ctor(C1.Framework.Drawing.Gdi.Font,System.Single)">
      <summary>
               Initializes a new <see cref="T:C1.Framework.Drawing.Gdi.Font" /> object from the specified <b>Font</b> object and special style
             </summary>
      <param name="font">
               Special <see cref="T:C1.Framework.Drawing.Gdi.Font" /> from which is used to create new font
             </param>
      <param name="size">
               The size of the new <see cref="T:C1.Framework.Drawing.Gdi.Font" /> object.
             </param>
      <remarks>
        <para>
               this is used to create a new <see cref="T:C1.Framework.Drawing.Gdi.Font" /> from template font which is given by parameter <b>Font</b>,
               the parameter <b>size</b> show you a chance to redefine the <see cref="P:C1.Framework.Drawing.Gdi.Font.Size" />.
             </para>
        <para>
               if you want to zoom <see cref="P:C1.Framework.Drawing.Gdi.Font.Size" />, you can get the size from your template font, and multiply it
               with the zoom factor you expected, which a new size you will got, for example named new size variable newSize,
               then use this constructor to create new <see cref="T:C1.Framework.Drawing.Gdi.Font" />:
             <code>
               Font newFont = new Font(templateFont, newSize);
             </code></para>
        <example>
               This is a simple WinForm program which draw two line text on special position of form.
               The first line, a string was drawed with winForm default font: Microsoft Sans Serif, 8.25pt,
               The second line, a sting was drawed with Font whic size is as twice as fiest line
             <code>
             public class TestForm : Form 
             {
                protected override void OnPaint(PaintEventArgs e)
                {
                  base.OnPaint(e);
            
                  IntPtr hDc = e.Graphics.GetHdc();
                  // create a font from default Form.Font (Microsoft Sans Serif, 8.25pt), size = 8.25
                  Gdi.Font font = new Gdi.Font(this.Font);
                  IntPtr oldFont = SelectObject(hDc, font.Handle);
                  string test1 = "1. This is drawing by GDI with GdiFont";
                  TextOut(hDc, 50, 50, test1, test1.Length);
                  SelectObject(hDc, oldFont);
            
                  // here I want to a font which size is as twice as current's
                  Drawing.Gdi.Font font2 = new Drawing.Gdi.Font(font, 2 * font.Size);
                  oldFont = SelectObject(hDc, font2.Handle);
                  string test2 = "2. This is drawing by GDI with GdiFont";
                  TextOut(hDc, 50, 100, test2, test2.Length);
                  font.Dispose();
                  font2.Dispose();
                  SelectObject(hDc, oldFont);
                  e.Graphics.ReleaseHdc(hDc);
                }
             
                [DllImport("gdi32.dll", EntryPoint = "SelectObject")]
                public static extern IntPtr SelectObject(
                     IntPtr hdc,
                     IntPtr hObject
                     );
            
                [DllImport("gdi32.dll", EntryPoint = "TextOut")]
                public static extern int TextOut(
                     IntPtr hdc,
                     int x,
                     int y,
                     string lpString,
                     int nCount
                 );
             }
             </code></example>
      </remarks>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Font.#ctor(System.String,System.Single)">
      <summary>
              Initializes a new <see cref="T:C1.Framework.Drawing.Gdi.Font" /> object using the specified font attributes.
            </summary>
      <param name="fontName">
              A string representation of the <see cref="T:System.Drawing.FontFamily" /> object for the new <see cref="T:C1.Framework.Drawing.Gdi.Font" /> object.
            </param>
      <param name="size">
              The size of the new <see cref="T:C1.Framework.Drawing.Gdi.Font" /> object.
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Font.#ctor(System.String,System.Single,System.Drawing.FontStyle,System.Byte)">
      <summary>
              Initializes a new <see cref="T:C1.Framework.Drawing.Gdi.Font" /> object using the specified settings.
            </summary>
      <param name="fontName">
              A string representation of the <see cref="T:System.Drawing.FontFamily" /> object for the new <see cref="T:C1.Framework.Drawing.Gdi.Font" /> object.
            </param>
      <param name="size">
              The size of the new <see cref="T:C1.Framework.Drawing.Gdi.Font" /> object.
            </param>
      <param name="style">
              The <see cref="T:System.Drawing.FontStyle" /> enumeration to be applied to the new <see cref="T:C1.Framework.Drawing.Gdi.Font" /> object. 
            </param>
      <param name="charSet">
              A <b>Byte</b> that specifies a GDI character set to use for this font. 
            </param>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Font.Name">
      <summary>
              Gets the face name of this <see cref="T:C1.Framework.Drawing.Gdi.Font" /> object.
            </summary>
      <value>
              A string representation of the face name of this <see cref="T:C1.Framework.Drawing.Gdi.Font" /> object.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Font.Style">
      <summary>
              Gets style information for this <see cref="T:C1.Framework.Drawing.Gdi.Font" /> object.
            </summary>
      <value>
              A <see cref="T:System.Drawing.FontStyle" /> indicate that contains style information for this <see cref="T:C1.Framework.Drawing.Gdi.Font" /> object.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Font.Bold">
      <summary>
              Gets a value that indicates whether this <b>Font</b> object is bold.
            </summary>
      <value>
              This property returns <b>true</b> if this <b>Font</b> 
              object is bold; otherwise, <b>false</b>.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Font.Italic">
      <summary>
              Gets a value that indicates whether this <b>Font</b>
              object is italic.
            </summary>
      <value>
              This property returns <b>true</b> if this <b>Font</b> 
              object is italic; otherwise, <b>false</b>.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Font.Underline">
      <summary>
              Gets a value that indicates whether this <b>Font</b>
              object is underlined.
            </summary>
      <value>
              This property returns <b>true</b> if this <b>Font</b> 
              object is underlined; otherwise, <b>false</b>.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Font.Strikeout">
      <summary>
              Gets a value that indicates whether this <b>Font</b> object 
              specifies a horizontal line through the font.
            </summary>
      <value>
              This property is <b>true</b> if this <b>Font</b> object has 
              a horizontal line through it; otherwise, <b>false</b>.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Font.CharSet">
      <summary>
              Gets a byte value that specifies the character set that this <b>Font</b> object uses.
            </summary>
      <value>
              A byte value that specifies the character set that this <b>Font</b> object uses.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Font.Height">
      <summary>
              Gets the height of this <b>Font</b> object.
            </summary>
      <value>
              The height of this <b>Font</b> object in current graphics units.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Font.Size">
      <summary>
              Gets the size, in points, of this <b>Font</b> object.
            </summary>
      <value>
              The size, in points, of this <b>Font</b> object.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Font.Metric">
      <summary>
              Gets basic information about this font. All sizes are specified in pixels.
            </summary>
      <value>
              The basic information about this font.
            </value>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Font.Clone">
      <summary>
              Creates an exact copy of this <see cref="T:C1.Framework.Drawing.Gdi.Font" /> object.
            </summary>
      <returns>
              The <see cref="T:C1.Framework.Drawing.Gdi.Font" /> object that this method creates.
            </returns>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Font.FromGdiplusFont(System.Drawing.Font)">
      <summary>
              Creates a new <see cref="T:C1.Framework.Drawing.Gdi.Font" /> object from the specified <see cref="T:System.Drawing.Font" /> object.
            </summary>
      <param name="gdiplusFont">
              The font is defined in .NET.
            </param>
      <remarks>
              This constructor creates a new <see cref="T:C1.Framework.Drawing.Gdi.Font" /> object from a Gdiplus <see cref="T:System.Drawing.Font" /> object.
            </remarks>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Font.ToGdiplusFont(C1.Framework.Drawing.Gdi.Font)">
      <summary>
              Creates a GDI+ .NET <see cref="T:System.Drawing.Font" /> object from this object instance.
            </summary>
      <param name="font">
              A <see cref="T:C1.Framework.Drawing.Gdi.Font" /> indicate the Gdi Font
            </param>
      <returns>
              A <see cref="T:System.Drawing.Font" /> object that this method creates.
            </returns>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.FontMetric">
      <summary>
              Represents the basic information about a physical font.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontMetric.Height">
      <summary>
              Specifies the height (ascent + descent) of characters.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontMetric.Ascent">
      <summary>
              Specifies the ascent (units above the base line) of characters.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontMetric.Descent">
      <summary>
              Specifies the descent (units below the base line) of characters.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontMetric.InternalLeading">
      <summary>
              Specifies the amount of leading (space) inside the bounds set by 
              the tmHeight member. Accent marks and other diacritical characters 
              may occur in this area. The designer may set this member to zero.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontMetric.ExternalLeading">
      <summary>
              Specifies the amount of extra leading (space) that the application 
              adds between rows. Since this area is outside the font, it contains 
              no marks and is not altered by text output calls in either OPAQUE or 
              TRANSPARENT mode. The designer may set this member to zero.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontMetric.AveCharWidth">
      <summary>
              Specifies the average width of characters in the font 
              (generally defined as the width of the letter x). This value 
              does not include the overhang required for bold or italic characters.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontMetric.MaxCharWidth">
      <summary>
              Specifies the width of the widest character in the font.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontMetric.Weight">
      <summary>
              Specifies the weight of the font.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontMetric.Overhang">
      <summary>
              Specifies the extra width per string that may be added to 
              some synthesized fonts. When synthesizing some attributes, 
              such as bold or italic, graphics device interface (GDI) or 
              a device may have to add width to a string on both a 
              per-character and per-string basis.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontMetric.DigitizedAspectX">
      <summary>
              Specifies the horizontal aspect of the device for which the font was designed.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontMetric.DigitizedAspectY">
      <summary>
              Specifies the vertical aspect of the device for which the font was designed. 
              The ratio of the tmDigitizedAspectX and tmDigitizedAspectY members is 
              the aspect ratio of the device for which the font was designed.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontMetric.FirstChar">
      <summary>
              Specifies the value of the first character defined in the font.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontMetric.LastChar">
      <summary>
              Specifies the value of the last character defined in the font.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontMetric.DefaultChar">
      <summary>
              Specifies the value of the character to be substituted for 
              characters not in the font.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontMetric.BreakChar">
      <summary>
              Specifies the value of the character that will be used to 
              define word breaks for text justification.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontMetric.Italic">
      <summary>
              Specifies an italic font if it is nonzero.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontMetric.Underlined">
      <summary>
              Specifies an underlined font if it is nonzero.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontMetric.StruckOut">
      <summary>
              Specifies a strikeout font if it is nonzero.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontMetric.PitchAndFamily">
      <summary>
              Specifies information about the pitch, the technology, 
              and the family of a physical font.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontMetric.CharSet">
      <summary>
              Specifies the character set of the font. The character set 
              can be one of the following values.
            </summary>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.FontBuilder">
      <summary>
              Represents a class that is used to builder some complex fonts.
            </summary>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.FontBuilder.#ctor(C1.Framework.Drawing.Gdi.Font)">
      <summary>
              Initialize a new <see cref="T:C1.Framework.Drawing.Gdi.FontBuilder" /> from a <see cref="T:C1.Framework.Drawing.Gdi.Font" /></summary>
      <param name="font">
              A <see cref="T:C1.Framework.Drawing.Gdi.Font" /> indicate the template
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.FontBuilder.#ctor(System.Drawing.Font)">
      <summary>
              Initialize a new <see cref="T:C1.Framework.Drawing.Gdi.FontBuilder" /> from a <see cref="T:System.Drawing.Font" /></summary>
      <param name="gdiplusFont">
              A <see cref="T:System.Drawing.Font" /> indicate the template
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.FontBuilder.#ctor(System.String,C1.Framework.Drawing.Gdi.FontFamily,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Byte,C1.Framework.Drawing.Gdi.FontOutPrecision,C1.Framework.Drawing.Gdi.FontClipPrecision,C1.Framework.Drawing.Gdi.FontQuality,C1.Framework.Drawing.Gdi.FontPitch)">
      <summary>
              Initialize a new <see cref="T:C1.Framework.Drawing.Gdi.FontBuilder" /></summary>
      <param name="faceName">
              A null-terminated string that specifies the typeface name of the font. 
              The length of this string must not exceed 32 characters, including the terminating null character.
              The <b>EnumFontFamiliesEx</b> function can be used to enumerate the typeface names of all currently available fonts.
              If <b>faceName</b> is an empty string, GDI uses the first font that matches the other specified attributes. 
            </param>
      <param name="family">
              Specifies the family of the font
            </param>
      <param name="height">
              Specifies the height, in logical units, of the font's character cell or character.
              The character height value (also known as the em height) is the character cell height value minus
              the internal-leading value.
            </param>
      <param name="escapement">
              Specifies the angle, in tenths of degrees, between the escapement vector and the x-axis of the device.
              The escapement vector is parallel to the base line of a row of text.
            </param>
      <param name="width">
              Specifies the average width, in logical units, of characters in the font. If width is zero,
              the aspect ratio of the device is matched against the digitization aspect ratio of the available fonts
              to find the closest match, determined by the absolute value of the difference.
            </param>
      <param name="weight">
              Specifies the weight of the font in the range 0 through 1000. For example, 400 is normal and 700 is bold.
              If this value is zero, a default weight is used. The following values are defined for convenience.
            </param>
      <param name="italic">
              Specifies an italic font if set to <b>true</b>.
            </param>
      <param name="underline">
              Specifies an underlined font if set to <b>true</b>.
            </param>
      <param name="strikeOut">
              Specifies a strikeout font if set to <b>true</b>.
            </param>
      <param name="orientation">
              Specifies the angle, in tenths of degrees, between each character's base line and the x-axis of the device.
            </param>
      <param name="charSet">
              Specifies the character set.
            </param>
      <param name="outPrecision">
              Specifies the output precision. The output precision defines how closely the output must match
              the requested font's height, width, character orientation, escapement, pitch, and font type.
            </param>
      <param name="clipPrecision">
              Specifies the clipping precision. The clipping precision defines how to clip characters
              that are partially outside the clipping region. It can be one or more of the following values.
            </param>
      <param name="quality">
              Specifies the output quality. The output quality defines how carefully the graphics device interface (GDI)
              must attempt to match the logical-font attributes to those of an actual physical font.
            </param>
      <param name="pitch">
              Specifies the pitch of the font
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.FontBuilder.#ctor(System.String,System.Int32)">
      <summary>
              Initialize a new <see cref="T:C1.Framework.Drawing.Gdi.FontBuilder" /> by special <c>faceName</c> and <c>height</c></summary>
      <param name="faceName">
              A null-terminated string that specifies the typeface name of the font. 
              The length of this string must not exceed 32 characters, including the terminating null character.
              The <b>EnumFontFamiliesEx</b> function can be used to enumerate the typeface names of all currently available fonts.
              If <b>faceName</b> is an empty string, GDI uses the first font that matches the other specified attributes. 
            </param>
      <param name="height">
              Specifies the height, in logical units, of the font's character cell or character.
              The character height value (also known as the em height) is the character cell height value minus
              the internal-leading value.
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.FontBuilder.#ctor(System.String,C1.Framework.Drawing.Gdi.FontFamily,System.Int32)">
      <summary>
              Initialize a new <see cref="T:C1.Framework.Drawing.Gdi.FontBuilder" /> by special <c>faceName</c>, <c>family</c> and <c>height</c></summary>
      <param name="faceName">
              A null-terminated string that specifies the typeface name of the font. 
              The length of this string must not exceed 32 characters, including the terminating null character.
              The <b>EnumFontFamiliesEx</b> function can be used to enumerate the typeface names of all currently available fonts.
              If <b>faceName</b> is an empty string, GDI uses the first font that matches the other specified attributes. 
            </param>
      <param name="family">
              Specifies the family of the font
            </param>
      <param name="height">
              Specifies the height, in logical units, of the font's character cell or character.
              The character height value (also known as the em height) is the character cell height value minus
              the internal-leading value.
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.FontBuilder.#ctor(System.String,C1.Framework.Drawing.Gdi.FontFamily,System.Int32,System.Drawing.FontStyle)">
      <summary>
              Initialize a new <see cref="T:C1.Framework.Drawing.Gdi.FontBuilder" /> by special <c>faceName</c>, <c>family</c>, <c>height</c> and
              <c>fontStyle</c></summary>
      <param name="faceName">
              A null-terminated string that specifies the typeface name of the font. 
              The length of this string must not exceed 32 characters, including the terminating null character.
              The <b>EnumFontFamiliesEx</b> function can be used to enumerate the typeface names of all currently available fonts.
              If <b>faceName</b> is an empty string, GDI uses the first font that matches the other specified attributes. 
            </param>
      <param name="family">
              Specifies the family of the font
            </param>
      <param name="height">
              Specifies the height, in logical units, of the font's character cell or character.
              The character height value (also known as the em height) is the character cell height value minus
              the internal-leading value.
            </param>
      <param name="fontStyle">
              A <see cref="T:System.Drawing.FontStyle" /> indicate the font style.
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.FontBuilder.#ctor(System.String,C1.Framework.Drawing.Gdi.FontFamily,System.Int32,System.Int32,System.Drawing.FontStyle)">
      <summary>
              Initialize a new <see cref="T:C1.Framework.Drawing.Gdi.FontBuilder" /> by special <c>faceName</c>, <c>family</c>, <c>height</c> and
              <c>fontStyle</c></summary>
      <param name="faceName">
              A null-terminated string that specifies the typeface name of the font. 
              The length of this string must not exceed 32 characters, including the terminating null character.
              The <b>EnumFontFamiliesEx</b> function can be used to enumerate the typeface names of all currently available fonts.
              If <b>faceName</b> is an empty string, GDI uses the first font that matches the other specified attributes. 
            </param>
      <param name="family">
              Specifies the family of the font
            </param>
      <param name="height">
              Specifies the height, in logical units, of the font's character cell or character.
              The character height value (also known as the em height) is the character cell height value minus
              the internal-leading value.
            </param>
      <param name="escapement">
              Specifies the angle, in tenths of degrees, between the escapement vector and the x-axis of the device.
              The escapement vector is parallel to the base line of a row of text.
            </param>
      <param name="fontStyle">
              A <see cref="T:System.Drawing.FontStyle" /> indicate the font style.
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.FontBuilder.#ctor(System.String,C1.Framework.Drawing.Gdi.FontFamily,System.Int32,System.Drawing.FontStyle,System.Int32)">
      <summary>
              Initialize a new <see cref="T:C1.Framework.Drawing.Gdi.FontBuilder" /> by special <c>faceName</c>, <c>family</c>, <c>height</c> and
              <c>fontStyle</c></summary>
      <param name="faceName">
              A null-terminated string that specifies the typeface name of the font. 
              The length of this string must not exceed 32 characters, including the terminating null character.
              The <b>EnumFontFamiliesEx</b> function can be used to enumerate the typeface names of all currently available fonts.
              If <b>faceName</b> is an empty string, GDI uses the first font that matches the other specified attributes. 
            </param>
      <param name="family">
              Specifies the family of the font
            </param>
      <param name="height">
              Specifies the height, in logical units, of the font's character cell or character.
              The character height value (also known as the em height) is the character cell height value minus
              the internal-leading value.
            </param>
      <param name="fontStyle">
              A <see cref="T:System.Drawing.FontStyle" /> indicate the font style.
            </param>
      <param name="orientation">
              Specifies the angle, in tenths of degrees, between each character's base line and the x-axis of the device.
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.FontBuilder.#ctor(System.String,C1.Framework.Drawing.Gdi.FontFamily,System.Int32,System.Int32,System.Drawing.FontStyle,System.Int32)">
      <summary>
              Initialize a new <see cref="T:C1.Framework.Drawing.Gdi.FontBuilder" /> by special <c>faceName</c>, <c>family</c>, <c>height</c> and
              <c>fontStyle</c></summary>
      <param name="faceName">
              A null-terminated string that specifies the typeface name of the font. 
              The length of this string must not exceed 32 characters, including the terminating null character.
              The <b>EnumFontFamiliesEx</b> function can be used to enumerate the typeface names of all currently available fonts.
              If <b>faceName</b> is an empty string, GDI uses the first font that matches the other specified attributes. 
            </param>
      <param name="family">
              Specifies the family of the font
            </param>
      <param name="height">
              Specifies the height, in logical units, of the font's character cell or character.
              The character height value (also known as the em height) is the character cell height value minus
              the internal-leading value.
            </param>
      <param name="escapement">
              Specifies the angle, in tenths of degrees, between the escapement vector and the x-axis of the device.
              The escapement vector is parallel to the base line of a row of text.
            </param>
      <param name="fontStyle">
              A <see cref="T:System.Drawing.FontStyle" /> indicate the font style.
            </param>
      <param name="orientation">
              Specifies the angle, in tenths of degrees, between each character's base line and the x-axis of the device.
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.FontBuilder.#ctor(System.String,C1.Framework.Drawing.Gdi.FontFamily,System.Int32,System.Int32,System.Drawing.FontStyle,System.Int32,C1.Framework.Drawing.Gdi.FontPitch)">
      <summary>
              Initialize a new <see cref="T:C1.Framework.Drawing.Gdi.FontBuilder" /> by special <c>faceName</c>, <c>family</c>, <c>height</c> and
              <c>fontStyle</c></summary>
      <param name="faceName">
              A null-terminated string that specifies the typeface name of the font. 
              The length of this string must not exceed 32 characters, including the terminating null character.
              The <b>EnumFontFamiliesEx</b> function can be used to enumerate the typeface names of all currently available fonts.
              If <b>faceName</b> is an empty string, GDI uses the first font that matches the other specified attributes. 
            </param>
      <param name="family">
              Specifies the family of the font
            </param>
      <param name="height">
              Specifies the height, in logical units, of the font's character cell or character.
              The character height value (also known as the em height) is the character cell height value minus
              the internal-leading value.
            </param>
      <param name="escapement">
              Specifies the angle, in tenths of degrees, between the escapement vector and the x-axis of the device.
              The escapement vector is parallel to the base line of a row of text.
            </param>
      <param name="fontStyle">
              A <see cref="T:System.Drawing.FontStyle" /> indicate the font style.
            </param>
      <param name="orientation">
              Specifies the angle, in tenths of degrees, between each character's base line and the x-axis of the device.
            </param>
      <param name="pitch">
              Specifies the pitch of the font
            </param>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.FontBuilder.Height">
      <summary>
              Get or set the height, in logical units, of the font's character cell or character. The character height
              value (also known as the em height) is the character cell height value minus the internal-leading value. 
            </summary>
      <value>
              An <b>int</b> indicate the height
            <para>
              if <c>value</c> larger than zero, the font mapper transforms this value into device units and matches it
              against the cell height of the available fonts.
            </para><para>
              if <c>value</c> equal zero, the font mapper uses a default height value when it searches for a match.
            </para><para>
              if <c>value</c> less than zero, the font mapper transforms this value into device units and matches
              its absolute value against the character height of the available fonts.
            </para></value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.FontBuilder.Width">
      <summary>
              Get or set the average width, in logical units, of characters in the font. 
              If <c>value</c> is zero, the aspect ratio of the device is matched against the digitization aspect ratio of 
              the available fonts to find the closest match, determined by the absolute value of the difference. 
            </summary>
      <value>
              An <b>int</b> indicate the average width
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.FontBuilder.Escapement">
      <summary>
              Get or set the angle, in tenths of degrees, between the escapement vector and the x-axis of the device.
              The escapement vector is parallel to the base line of a row of text. 
            </summary>
      <value>
              An <b>int</b> indicate the escapement vector
            </value>
      <remarks>
        <para>
          <b>Windows NT/2000/XP</b>: When the graphics mode is set to <b>GM_ADVANCED</b>, you can specify the escapement angle
              of the string independently of the orientation angle of the string's characters.
            </para>
        <para>
              When the graphics mode is set to <b>GM_COMPATIBLE</b>, Escapement specifies both the escapement and orientation.
              You should set Escapement and Orientation to the same value. 
            </para>
        <para>
          <b>Windows 95/98/Me</b>: The Escapement member specifies both the escapement and orientation.
              You should set <c>Escapement</c> and <c>Orientation</c> to the same value. 
            </para>
      </remarks>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.FontBuilder.Orientation">
      <summary>
            Get or set the angle, in tenths of degrees, between each character's base line and the x-axis of the device. 
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.FontBuilder.Weight">
      <summary>
              Get or set the weight of the font. 
            </summary>
      <value>
              An <b>int</b> indicate the weight of font, which is in the range 0 through 1000.
              For example, 400 is normal and 700 is bold. If this value is zero, a default weight is used.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.FontBuilder.Italic">
      <summary>
              Get or set <b>bool</b> which indicate whether the font is italic
            </summary>
      <value>
              A <b>bool</b> which indicate whether the font is italic
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.FontBuilder.Underline">
      <summary>
              Get or set <b>bool</b> which indicate whether the font is underline
            </summary>
      <value>
              An <b>bool</b> which indicate whether the font is underline
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.FontBuilder.StrikeOut">
      <summary>
              Get or set <b>bool</b> which indicate whether the font is strikeout
            </summary>
      <value>
              An <b>bool</b> which indicate whether the font is strikeout
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.FontBuilder.CharSet">
      <summary>
              Get or set the CharSet of font
            </summary>
      <value>
              A <b>byte</b> indicate the charset of font
            </value>
      <remarks>
              Fonts with other character sets may exist in the operating system. If an application uses a font with
              an unknown character set, it should not attempt to translate or interpret strings that are rendered with that font. 
            </remarks>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.FontBuilder.OutPrecision">
      <summary>
              Get or set the output precision.
            </summary>
      <value>
              The <b>value</b> defines how closely the output must match the requested font's height, width,
              character orientation, escapement, pitch, and font type.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.FontBuilder.ClipPrecision">
      <summary>
              Get or set the clipping precision.
            </summary>
      <value>
              The <b>value</b> defines how to clip characters that are partially outside the clipping region.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.FontBuilder.Quality">
      <summary>
              Get or set the output quality.
            </summary>
      <value>
              The <b>value</b> defines how carefully the graphics device interface (GDI) must attempt to match the logical-font
              attributes to those of an actual physical font. 
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.FontBuilder.Pitch">
      <summary>
              Get or set the pitch of the font.
            </summary>
      <value>
              The <b>value</b> describe the look of a font in general way with corporated with <c>Family</c></value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.FontBuilder.Family">
      <summary>
              Get or set the font family
            </summary>
      <value>
              The <b>value</b> describe the look of a font in a general way. 
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.FontBuilder.FaceName">
      <summary>
              Get or set a null-terminated string that specifies the typeface name of the font. 
            </summary>
      <value>
              A <b>string</b> value specifies the typeface name of the font.
            </value>
      <remarks>
              The length of this string must not exceed 32 characters, including the terminating null character. 
              If <c>value</c> is an empty string, GDI uses the first font that matches the other specified attributes.
            </remarks>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.FontBuilder.Clone">
      <summary>
              Creates an exact copy of this <see cref="T:C1.Framework.Drawing.Gdi.FontBuilder" /> object.
            </summary>
      <returns>
              The <see cref="T:C1.Framework.Drawing.Gdi.FontBuilder" /> object that this method creates.
            </returns>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.FontBuilder.Create">
      <summary>
              Create a new <see cref="T:C1.Framework.Drawing.Gdi.Font" /> from current <see cref="T:C1.Framework.Drawing.Gdi.FontBuilder" /></summary>
      <returns>
              A <see cref="T:C1.Framework.Drawing.Gdi.Font" /> istance which its properties provided by <see cref="T:C1.Framework.Drawing.Gdi.FontBuilder" /></returns>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.FontBuilder.CreateGdiplusFont">
      <summary>
              Create a new <see cref="T:System.Drawing.Font" /> istance which its properties provided by <see cref="T:C1.Framework.Drawing.Gdi.FontBuilder" /></summary>
      <returns>
              A <see cref="T:System.Drawing.Font" /> instance would be create
            </returns>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.FontBuilder.Zoom(C1.Framework.Drawing.Gdi.Font,System.Single)">
      <summary>
              Zoom current <see cref="T:C1.Framework.Drawing.Gdi.Font" /> with zoom factor
            </summary>
      <param name="font">
              Indicate the <b>Font</b> you want to zoom
            </param>
      <param name="zoomFactor">
              Indicate the zoom factor
            </param>
      <returns>
              A <see cref="T:C1.Framework.Drawing.Gdi.Font" /> with special size
            </returns>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.FontBuilder.Bold(C1.Framework.Drawing.Gdi.Font)">
      <summary>
              Create a bold <see cref="T:C1.Framework.Drawing.Gdi.Font" /> from current font
            </summary>
      <param name="font">
              Indicate the <b>Font</b> you want to bold
            </param>
      <returns>
              A <see cref="T:C1.Framework.Drawing.Gdi.Font" /> with bold style
            </returns>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.FontWeight">
      <summary>
              Represents the weight values of logical font.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontWeight.Default">
      <summary>
              Indicates the default font weight.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontWeight.Thin">
      <summary>
              Indicates the thin font weight.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontWeight.ExtraLight">
      <summary>
              Indicates the extra light font weight.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontWeight.UltraLight">
      <summary>
              Indicates the ultra light font weight.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontWeight.Light">
      <summary>
              Indicates the light font weight.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontWeight.Normal">
      <summary>
              Indicates the normal font weight.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontWeight.Regular">
      <summary>
              Indicates the regular font weight.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontWeight.Medium">
      <summary>
              Indicates the medium font weight.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontWeight.SemiBold">
      <summary>
              Indicates the semi bold font weight.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontWeight.DemiBold">
      <summary>
              Indicates the demi bold font weight.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontWeight.Bold">
      <summary>
              Indicates the bold font weight.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontWeight.ExtraBold">
      <summary>
              Indicates the extra bold font weight.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontWeight.UltraBold">
      <summary>
              Indicates the ultra bold font weight.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontWeight.Heavy">
      <summary>
              Indicates the heavy font weight.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontWeight.Black">
      <summary>
              Indicates the black font weight.
            </summary>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.FontOutPrecision">
      <summary>
              Represents the out precision of logical font.
            </summary>
      <remarks>
              The output precision defines how closely the output must match the requested font's height, 
              width, character orientation, escapement, pitch, and font type. 
            </remarks>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontOutPrecision.Default">
      <summary>
              Specifies the default font mapper behavior.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontOutPrecision.String">
      <summary>
              This value is not used by the font mapper, but it is returned when raster fonts are enumerated.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontOutPrecision.Character">
      <summary>
              Not used.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontOutPrecision.Stroke">
      <summary>
              This value is not used by the font mapper, but it is returned when TrueType, other outline-based fonts, 
              and vector fonts are enumerated.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontOutPrecision.TrueType">
      <summary>
              Instructs the font mapper to choose a TrueType font when the system contains multiple fonts with the same name.  
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontOutPrecision.Device">
      <summary>
              Instructs the font mapper to choose a Device font when the system contains multiple fonts with the same name.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontOutPrecision.Raster">
      <summary>
              Instructs the font mapper to choose a raster font when the system contains multiple fonts with the same name.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontOutPrecision.TrueTypeOnly">
      <summary>
              Instructs the font mapper to choose from only TrueType fonts. If there are no TrueType fonts installed in
              the system, the font mapper returns to default behavior.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontOutPrecision.OutLine">
      <summary>
              This value instructs the font mapper to choose from TrueType and other outline-based fonts.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontOutPrecision.ScreenOutLine">
      <summary>
              [This is a no document value.]
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontOutPrecision.PostScriptOnly">
      <summary>
              Instructs the font mapper to choose from only PostScript fonts. If there are no PostScript fonts installed in 
              the system, the font mapper returns to default behavior.
            </summary>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.FontClipPrecision">
      <summary>
              Represents the clip precision of font.
            </summary>
      <remarks>
              The clipping precision defines how to clip characters that are partially outside the clipping region. 
            </remarks>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontClipPrecision.Default">
      <summary>
              Specifies default clipping behavior.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontClipPrecision.Character">
      <summary>
              Not used.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontClipPrecision.Stroke">
      <summary>
              Not used by the font mapper, but is returned when raster, vector, or TrueType fonts are enumerated.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontClipPrecision.Mask">
      <summary>
              Not used.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontClipPrecision.LeftHandAngles">
      <summary>
        <p>
                When this value is used, the rotation for all fonts depends on whether the orientation of the 
                coordinate system is left-handed or right-handed.
              </p>
        <p>
                If not used, device fonts always rotate counterclockwise, but the rotation of other fonts is dependent 
                on the orientation of the coordinate system.
              </p>
      </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontClipPrecision.TrueTypeAlways">
      <summary>
              Not used.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontClipPrecision.DefaultDisable">
      <summary>
              Windows XP SP1: Turns off font association for the font. 
              Note that this flag is not guaranteed to have any effect on any platform after Windows Server 2003. 
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontClipPrecision.DefaultOverride">
      <summary>
              Windows 2000: Turns off font association for the font. This is identical to DefaultDisable, 
              but it can have problems in some situations; the recommended flag to use is DefaultDisable. 
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontClipPrecision.Embedded">
      <summary>
              You must specify this flag to use an embedded read-only font.
            </summary>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.FontQuality">
      <summary>
              Represents the quality of font.
            </summary>
      <remarks>
              The output quality defines how carefully the graphics device interface (GDI) must attempt to match 
              the logical-font attributes to those of an actual physical font. It can be one of the following values. 
            </remarks>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontQuality.Default">
      <summary>
              Appearance of the font does not matter.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontQuality.Draft">
      <summary>
              Appearance of the font is less important than when Draft is used. 
              For GDI raster fonts, scaling is enabled, which means that more font sizes are available, 
              but the quality may be lower. Bold, italic, underline, and strikeout fonts are synthesized if necessary.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontQuality.Proof">
      <summary>
              Character quality of the font is more important than exact matching of the logical-font attributes. 
              For GDI raster fonts, scaling is disabled and the font closest in size is chosen. 
              Although the chosen font size may not be mapped exactly when Proof is used, the quality of the font 
              is high and there is no distortion of appearance. Bold, italic, underline, and strikeout fonts are 
              synthesized if necessary.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontQuality.Nonantialiased">
      <summary>
              Font is never antialiased.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontQuality.Antialiased">
      <summary>
              Font is always antialiased if the font supports it and the size of the font is not too small or too large.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontQuality.ClearType">
      <summary>
              If set, text is rendered (when possible) using ClearType antialiasing method.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontQuality.ClearTypeNatural">
      <summary>
              [No document]
            </summary>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.FontPitch">
      <summary>
              Represents the pitch of font.
            </summary>
      <remarks>
              The two low-order bits specify the pitch of the font and can be one of the following values.
            </remarks>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontPitch.Default">
      <summary>
              Indicates the default pitch.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontPitch.Fixed">
      <summary>
              Indicates the fixed pitch.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontPitch.Variable">
      <summary>
              Indicates the variable pitch.
            </summary>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.FontFamily">
      <summary>
              Represents the family of logical font
            </summary>
      <remarks>
              Describe the look of a font in a general way.
            </remarks>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontFamily.Default">
      <summary>
              Use default font.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontFamily.Roman">
      <summary>
              Fonts with variable stroke width (proportional) and with serifs. MS Serif is an example.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontFamily.Swiss">
      <summary>
              Fonts with variable stroke width (proportional) and without serifs. MS Sans Serif is an example.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontFamily.Modern">
      <summary>
              Fonts with constant stroke width (monospace), with or without serifs. 
              Monospace fonts are usually modern. Pica, Elite, and CourierNew are examples.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontFamily.Script">
      <summary>
              Fonts designed to look like handwriting. Script and Cursive are examples.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.FontFamily.Decorative">
      <summary>
              Novelty fonts. Old English is an example.
            </summary>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.GdiObject">
      <summary>
              Represents the common base of the gid objects.
            </summary>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.GdiObject.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Framework.Drawing.Gdi.GdiObject" /> class.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.GdiObject.Handle">
      <summary>
              Returns a handle to this <b>GdiObject</b> object.
            </summary>
      <value>
              A Windows handle to this <b>GdiObject</b> object.
            </value>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.GdiObject.Finalize">
      <summary>
              Deletes this <b>GdiObject</b>, and frees the memory allocated for it.
            </summary>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.GdiObject.Dispose">
      <summary>
              Releases all resources used by this <b>GdiObject</b> object.
            </summary>
      <remarks>
              Calling <b>Dispose</b> allows the resources used by the 
              <b>GdiObject</b> object to be reallocated 
              for other purposes.
            </remarks>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.GdiObject.Dispose(System.Boolean)">
      <summary>
              Releases the unmanaged resources used by the <b>GdiObject</b>
              and optionally releases the managed resources.
            </summary>
      <param name="disposing">
        <b>true</b> to release both managed and unmanaged resources; 
              <b>false</b> to release only unmanaged resources.
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.GdiObject.Clone">
      <summary>
              Creates an exact copy if this <b>GdiObject</b> object.
            </summary>
      <returns>
              The <b>GdiObject</b> object that this method creates.
            </returns>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.RawGdiObject">
      <summary>
              Represents a wrapper of the gid object handle. 
            </summary>
      <remarks>
              The handle will not be released when RawGdiObject is disposed.
            </remarks>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.RawGdiObject.#ctor(System.IntPtr)">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Framework.Drawing.Gdi.RawGdiObject" /> class.
            </summary>
      <param name="handle">
              A <see cref="T:System.IntPtr" /> indicates the handle object gdi object.
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.RawGdiObject.Dispose(System.Boolean)">
      <summary>
              Releases the unmanaged resources used by the <b>GdiObject</b>
              and optionally releases the managed resources.
            </summary>
      <param name="disposing">
        <b>true</b> to release both managed and unmanaged resources; 
              <b>false</b> to release only unmanaged resources.
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.RawGdiObject.Clone">
      <summary>
              Creates an exact copy if this <b>GdiObject</b> object.
            </summary>
      <returns>
              The <b>GdiObject</b> object that this method creates.
            </returns>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.Graphics">
      <summary>
              Represents the gdi graphics object that handles the gdi device context.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.Graphics.Default">
      <summary>
              A static <see cref="T:C1.Framework.Drawing.Gdi.Graphics" /> used to measure geometries.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Graphics.DeviceContext">
      <summary>
              Gets the <see cref="P:C1.Framework.Drawing.Gdi.Graphics.DeviceContext" /> of the <see cref="T:C1.Framework.Drawing.Gdi.Graphics" />.
            </summary>
      <value>
              A <see cref="P:C1.Framework.Drawing.Gdi.Graphics.DeviceContext" /> that indicates the device context of the <see cref="T:C1.Framework.Drawing.Gdi.Graphics" />.
            </value>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Graphics.#ctor(C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext)">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Framework.Drawing.Gdi.Graphics" /> class.
            </summary>
      <param name="deviceContext">
              An <b>DeviceContext</b> indicates the device context.
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Graphics.Finalize">
      <summary>
              Deletes this <b>Graphics</b>, and frees the memory allocated for it.
            </summary>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Graphics.Dispose">
      <summary>
              Releases all resources used by this <see cref="T:C1.Framework.Drawing.Gdi.Graphics" /> object.
            </summary>
      <remarks>
              Calling <b>Dispose</b> allows the resources used by the <see cref="T:C1.Framework.Drawing.Gdi.Graphics" /> 
              object to be reallocated for other purposes.
            </remarks>
      <returns>
              This method does not return a value.
            </returns>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Graphics.ClipBound">
      <summary>
              Gets the <see cref="T:System.Drawing.Rectangle" /> structure that bounds the clipping region of this <see cref="T:C1.Framework.Drawing.Gdi.Graphics" /> object.
            </summary>
      <value>
              This property indicates a <see cref="T:System.Drawing.Rectangle" /> structure that represents a bounding rectangle for the clipping 
              region of this <see cref="T:C1.Framework.Drawing.Gdi.Graphics" /> object.
            </value>
      <example>
               How to judge a Grphics's clip is empty?
               <code>
                 bool isClipEmpty = (graphics.ClipBound == Rectangle.Empty);
               </code></example>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Graphics.GetClip">
      <summary>
              Gets the region of the current clipping region of graphics. 
            </summary>
      <returns>
              A <see cref="T:C1.Framework.Drawing.Gdi.Region" /> that indicates the clipping region.
            </returns>
      <remarks>
        <para>
              Note: The getting region is a copy of the current region.
              </para>
        <para>
              The coordinate of region will not be effected by current origin of page space.
              </para>
      </remarks>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Graphics.IntersectClip(System.Drawing.Rectangle)">
      <summary>
              Updates the clip region of this <see cref="T:C1.Framework.Drawing.Gdi.Graphics" /> object to the intersection of the current clip region and 
              the specified <see cref="T:System.Drawing.Rectangle" /> structure.
            </summary>
      <param name="rectangle">
        <see cref="T:System.Drawing.Rectangle" /> structure to intersect with the current clip region. 
            </param>
      <remarks>
              This method assigns to the <b>Clip</b> property of this <see cref="T:C1.Framework.Drawing.Gdi.Graphics" /> object the area represented by the 
              intersection of the current clip region and the rectangle specified by the <c>rectangle</c> parameter.
            </remarks>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Graphics.IntersectClip(C1.Framework.Drawing.Gdi.Region)">
      <summary>
              Updates the clip region of this <see cref="T:C1.Framework.Drawing.Gdi.Graphics" /> object to the intersection of the current clip region and 
              the specified <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object.
            </summary>
      <param name="region">
        <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object to intersect with the current region. 
            </param>
      <remarks>
              This method assigns to the <b>Clip</b> property of this <see cref="T:C1.Framework.Drawing.Gdi.Graphics" /> object the area represented by the 
              intersection of the current clip region and the region specified by the <c>region</c> parameter.
            </remarks>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Graphics.ExcludeClip(System.Drawing.Rectangle)">
      <summary>
              Updates the clip region of this <see cref="T:C1.Framework.Drawing.Gdi.Graphics" /> object to exclude the area specified by a <see cref="T:System.Drawing.Rectangle" />
              structure.
            </summary>
      <param name="rectangle">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the rectangle to exclude from the clip region. 
            </param>
      <remarks>
              This method excludes the area specified by the <c>rectangle</c> parameter from the current clip region and assigns
              the resulting area to the <b>Clip</b> property of this <see cref="T:C1.Framework.Drawing.Gdi.Graphics" /> object.
            </remarks>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Graphics.ExcludeClip(C1.Framework.Drawing.Gdi.Region)">
      <summary>
              Updates the clip region of this <see cref="T:C1.Framework.Drawing.Gdi.Graphics" /> object to exclude the area specified by a <see cref="T:C1.Framework.Drawing.Gdi.Region" />
              object.
            </summary>
      <param name="region">
        <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object that specifies the region to exclude from the clipping region.
            </param>
      <remarks>
              This method excludes the area specified by the <c>region</c> parameter from the current clip region and assigns 
              the resulting area to the <b>Clip</b> property of this <see cref="T:C1.Framework.Drawing.Gdi.Graphics" /> object.
            </remarks>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Graphics.SetClip(C1.Framework.Drawing.Gdi.Region)">
      <summary>
              Sets the clipping region of this <see cref="T:C1.Framework.Drawing.Gdi.Graphics" /> object to the result of the Replace combining
              the current clip region and the specified <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object.
            </summary>
      <param name="region">
        <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object to combine.
            </param>
      <remarks>
              Only a copy of the setting region is used. The region itself can be seted 
              for any number of other device contexts or it can be deleted.
            </remarks>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Graphics.SetClip(System.Drawing.Rectangle)">
      <summary>
              Sets the clipping region of this <see cref="T:C1.Framework.Drawing.Gdi.Graphics" /> object 
              to the rectangle specified by a <see cref="T:System.Drawing.Rectangle" /> structure.
            </summary>
      <param name="rectangle">
        <see cref="T:System.Drawing.Rectangle" /> structure that represents the new clip region. 
            </param>
      <remarks>
              Only a copy of the setting region is used. The region itself can be seted 
              for any number of other device contexts or it can be deleted.
            </remarks>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Graphics.SetClip(System.Drawing.Rectangle,System.Drawing.Drawing2D.CombineMode)">
      <summary>
              Sets the clipping region of this <see cref="T:C1.Framework.Drawing.Gdi.Graphics" /> object to the result of the specified operation combining
              the current clip region and the rectangle specified by a <see cref="T:System.Drawing.Rectangle" /> structure.
            </summary>
      <param name="rectangle">
        <see cref="T:System.Drawing.Rectangle" /> structure to combine.
            </param>
      <param name="combineMode">
              Member of the <see cref="T:System.Drawing.Drawing2D.CombineMode" /> enumeration that specifies the combining operation to use. 
            </param>
      <remarks>
              Only a copy of the setting region is used. The region itself can be seted 
              for any number of other device contexts or it can be deleted.
            </remarks>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Graphics.SetClip(C1.Framework.Drawing.Gdi.Region,System.Drawing.Drawing2D.CombineMode)">
      <summary>
              Sets the clipping region of this <see cref="T:C1.Framework.Drawing.Gdi.Graphics" /> object to the result of the specified operation combining
              the current clip region and the specified <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object.
            </summary>
      <param name="region">
        <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object to combine.
            </param>
      <param name="combineMode">
              Member of the <see cref="T:System.Drawing.Drawing2D.CombineMode" /> enumeration that specifies the combining operation to use. 
            </param>
      <remarks>
              Only a copy of the setting region is used. The region itself can be seted 
              for any number of other device contexts or it can be deleted.
            </remarks>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Graphics.TranslateClip(System.Int32,System.Int32)">
      <summary>
              Translates the clipping region of this Graphics object by specified amounts in the horizontal and vertical directions.
            </summary>
      <param name="dx">
              An <b>int</b> indicates the x component of the translation.
            </param>
      <param name="dy">
              An <b>int</b> indicates the y component of the translation.
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Graphics.DrawLine(C1.Framework.Drawing.Gdi.Pen,System.Drawing.Point,System.Drawing.Point)">
      <summary>
              Draw the special line by using given pen
            </summary>
      <param name="pen">
              A <see cref="T:C1.Framework.Drawing.Gdi.Pen" /> indicate the pen used to draw
            </param>
      <param name="startPoint">
              A <see cref="T:System.Drawing.Point" /> indicate the line start point
            </param>
      <param name="endPoint">
              A <see cref="T:System.Drawing.Point" /> indicate the line end point
            </param>
      <exception cref="T:C1.Framework.SystemErrorException" />
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Graphics.DrawBezier(C1.Framework.Drawing.Gdi.Pen,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
      <summary>
              Draws one Bezier curves on current <c>Graphics</c>.
            </summary>
      <param name="pen">
              A <see cref="T:C1.Framework.Drawing.Gdi.Pen" /> indicate the pen used to draw
            </param>
      <param name="startPoint">
              A <see cref="T:System.Drawing.Point" /> indicate the Bezier curves start point
            </param>
      <param name="controlPoint1">
              A <see cref="T:System.Drawing.Point" /> indicate the first control point of the Bezier curves
            </param>
      <param name="controlPoint2">
              A <see cref="T:System.Drawing.Point" /> indicate the second control point of the Bezier curves
            </param>
      <param name="endPoint">
              A <see cref="T:System.Drawing.Point" /> indicate the line end point
            </param>
      <exception cref="T:C1.Framework.SystemErrorException" />
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Graphics.DrawRectangle(C1.Framework.Drawing.Gdi.Pen,System.Drawing.Rectangle)">
      <summary>
              Draw the special rectangle by using the given pen
            </summary>
      <param name="pen">
              A <see cref="T:C1.Framework.Drawing.Gdi.Pen" /> indicate the draw-style of rectangle
            </param>
      <param name="rectangle">
              A <see cref="T:System.Drawing.Rectangle" /> indicate the rectangle to draw
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Graphics.DrawEllipse(C1.Framework.Drawing.Gdi.Pen,System.Drawing.Rectangle)">
      <summary>
              Draw the special ellipse by using the given pen
            </summary>
      <param name="pen">
              A <see cref="T:C1.Framework.Drawing.Gdi.Pen" /> indicate the draw-style of ellipse
            </param>
      <param name="rectangle">
              A <see cref="T:System.Drawing.Rectangle" /> indicates the bounding rectangle which center is the center of ellipse
            </param>
      <remarks>
        <b>Windows 95/98/Me</b>: The sum of the coordinates of the bounding rectangle cannot exceed 32,767. 
              The width of <c>rectangle</c> or the height of <c>rectangle</c> cannot exceed 32,767.
            </remarks>
      <exception cref="T:C1.Framework.SystemErrorException" />
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Graphics.DrawArc(C1.Framework.Drawing.Gdi.Pen,System.Drawing.Rectangle,System.Single,System.Single)">
      <summary>
              Draw the special arc by using the given pen
            </summary>
      <param name="pen">
              A <see cref="T:C1.Framework.Drawing.Gdi.Pen" /> indicate the draw-style of arc
            </param>
      <param name="rectangle">
              A <see cref="T:System.Drawing.Rectangle" /> indicates the bounding rectangle which center is the center of ellipse
            </param>
      <param name="startAngle">
              A <b>float</b> specifies the start angle, in degrees. 
            </param>
      <param name="sweepAngle">
              A <b>float</b> specifies the sweep angle, in degrees, relative to the starting angle.
            </param>
      <remarks>
              The arc is drawn by constructing an imaginary circle around the specified center point with the specified radius.
              The starting point of the arc is determined by measuring counterclockwise from the x-axis of the circle
              by the number of degrees in the start angle. The ending point is similarly located by measuring counterclockwise
              from the starting point by the number of degrees in the sweep angle.
              If the sweep angle is greater than 360 degrees,the arc is swept multiple times.
            </remarks>
      <exception cref="T:C1.Framework.SystemErrorException" />
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Graphics.DrawLines(C1.Framework.Drawing.Gdi.Pen,System.Drawing.Point[])">
      <summary>
              Draw the special lines on current <c>Graphics</c> by using the special pen. 
            </summary>
      <param name="pen">
              A <see cref="T:C1.Framework.Drawing.Gdi.Pen" /> indicate the draw-style of lines
            </param>
      <param name="points">
              A <see cref="T:System.Drawing.Point" /> array indicate the line segments.
            </param>
      <exception cref="T:C1.Framework.SystemErrorException" />
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Graphics.DrawBeziers(C1.Framework.Drawing.Gdi.Pen,System.Drawing.Point[])">
      <summary>
              Draw the special Bezier curve on current <c>Graphics</c> by using the special pen. 
            </summary>
      <param name="pen">
              A <see cref="T:C1.Framework.Drawing.Gdi.Pen" /> indicate the draw-style of Bezier curve
            </param>
      <param name="points">
              An array of <see cref="T:System.Drawing.Point" />structures that contain the endpoints and control points of the curve(s).
              This value must be one more than three times the number of curves to be drawn,
              because each Bzier curve requires two control points and an endpoint,
              and the initial curve requires an additional starting point. 
            </param>
      <remarks>
        <para>
              DrawBeziers draws cubic Bzier curves by using the endpoints and control points specified by the <c>points</c> parameter.
              The first curve is drawn from the first point to the fourth point by using the second and third points
              as control points. Each subsequent curve in the sequence needs exactly three more points: the ending point of
              the previous curve is used as the starting point, the next two points in the sequence are control points,
              and the third is the ending point.
            </para>
        <para>
              Any extra points are ignored. To draw a line with more points, divide the data into groups
              that have less than the maximum number of points and call the function for each group of points.
              Remember to connect the line segments.
            </para>
      </remarks>
      <exception cref="T:C1.Framework.SystemErrorException" />
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Graphics.FillRectangle(C1.Framework.Drawing.Gdi.Brush,System.Drawing.Rectangle)">
      <summary>
              Fill the specified rectangle by using the given brush.
            </summary>
      <param name="brush">
              A <see cref="T:C1.Framework.Drawing.Gdi.Brush" /> object used to fill the rectangle.
            </param>
      <param name="rectangle">
              A <see cref="T:System.Drawing.Rectangle" /> structure that specifies the rectangle to be filled.
            </param>
      <exception cref="T:C1.Framework.SystemErrorException" />
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Graphics.FillEllipse(C1.Framework.Drawing.Gdi.Brush,System.Drawing.Rectangle)">
      <summary>
              Fill the special ellipse on current <c>Grapchis</c> by using special <c>brush</c></summary>
      <param name="brush">
              A <see cref="T:C1.Framework.Drawing.Gdi.Brush" /> object used to fill the ellipse.
            </param>
      <param name="rectangle">
              A <see cref="T:System.Drawing.Rectangle" /> indicates the bounding rectangle which center is the center of ellipse
            </param>
      <remarks>
        <b>Windows 95/98/Me</b>: The sum of the coordinates of the bounding rectangle cannot exceed 32,767. 
              The width of <c>rectangle</c> or the height of <c>rectangle</c> cannot exceed 32,767.
            </remarks>
      <exception cref="T:C1.Framework.SystemErrorException" />
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Graphics.FillPie(C1.Framework.Drawing.Gdi.Brush,System.Drawing.Rectangle,System.Single,System.Single)">
      <summary>
              Fill the special pie on current <c>Grapchis</c> by using special <c>brush</c></summary>
      <param name="brush">
              A <see cref="T:C1.Framework.Drawing.Gdi.Brush" /> object used to fill the pie.
            </param>
      <param name="rectangle">
              A <see cref="T:System.Drawing.Rectangle" /> structure that defines the boundaries of the pie.
            </param>
      <param name="startAngle">
              A <b>float</b> value that defines the start angle of the pie.
            </param>
      <param name="sweepAngle">
              A <b>float</b> value that defines the sweep angle of the pie.
            </param>
      <remarks>
              The curve begins at the point where the ellipse intersects the first radial and extends counterclockwise to
              the point where the ellipse intersects the second radial. 
            </remarks>
      <exception cref="T:C1.Framework.SystemErrorException" />
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Graphics.FillPolygon(C1.Framework.Drawing.Gdi.Brush,System.Drawing.Point[])">
      <summary>
              Fill the special polygon on current <c>Grapchis</c> by using special <c>brush</c></summary>
      <param name="brush">
              A <see cref="T:C1.Framework.Drawing.Gdi.Brush" /> object used to fill the polygon.
            </param>
      <param name="points">
              A <see cref="T:System.Drawing.Point" /> structures that specify the vertices of the polygon.
            </param>
      <exception cref="T:C1.Framework.SystemErrorException" />
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Graphics.FillRegion(C1.Framework.Drawing.Gdi.Brush,C1.Framework.Drawing.Gdi.Region)">
      <summary>
              Fill the special <c>region</c> on current <c>Grapchis</c> by using special <c>brush</c></summary>
      <param name="brush">
              A <see cref="T:C1.Framework.Drawing.Gdi.Brush" /> object used to fill the region.
            </param>
      <param name="region">
              A <see cref="T:C1.Framework.Drawing.Gdi.Region" /> indicate the region which be filled
            </param>
      <exception cref="T:C1.Framework.SystemErrorException" />
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Graphics.Copy(C1.Framework.Drawing.Gdi.Graphics,System.Drawing.Rectangle,System.Drawing.Point)">
      <summary>
              Performs a bit-block transfer of the color data corresponding to a rectangle of pixels from 
              the specified source <see cref="T:C1.Framework.Drawing.Gdi.Graphics" /> object into a destination <b>Graphics</b> object.
            </summary>
      <param name="graphics">
              A <see cref="T:C1.Framework.Drawing.Gdi.Graphics" /> indicate the source <b>Graphics</b> object
            </param>
      <param name="destRectangle">
              A <see cref="T:System.Drawing.Rectangle" /> indicates the destination rectangle.
            </param>
      <param name="srcPoint">
              A <see cref="T:System.Drawing.Point" /> indicates the upper-left corner of source rectangle. 
              The width and height of source rectangle are same as the destination rectangle.
            </param>
      <remarks>
        <para>
              Copy only does clipping on the destination DC.
            </para>
        <para>
              If a rotation or shear transformation is in effect in the source device context, Copy will throw
              a <see cref="T:C1.Framework.SystemErrorException" />. If other transformations exist in the source device context (and a matching
              transformation is not in effect in the destination device context), the rectangle in the destination device context
              is stretched, compressed, or rotated, as necessary. 
            </para>
        <para>
              If the color formats of the source and destination device contexts do not match, the Copy function converts
              the source color format to match the destination format. 
            </para>
        <para>
              When an enhanced metafile is being recorded, an error occurs if the source device context identifies
              an enhanced-metafile device context. it means a <see cref="T:C1.Framework.SystemErrorException" /> would be throw out.
            </para>
        <para>
              Not all devices support the Copy function. For more information, see the <b>RC_BITBLT</b> raster capability entry
              in the <b>GetDeviceCaps</b> function as well as the following: <B>MaskBlt</B>, <b>PlgBlt</b>, and <b>StretchBlt</b>.
            </para>
      </remarks>
      <exception cref="T:C1.Framework.SystemErrorException" />
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Graphics.Copy(C1.Framework.Drawing.Gdi.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle)">
      <summary>
              Performs a bit-block transfer of the color data corresponding to a rectangle of pixels from 
              the specified source <see cref="T:C1.Framework.Drawing.Gdi.Graphics" /> object into a destination <b>Graphics</b> object.
            </summary>
      <param name="graphics">
              The source <see cref="T:C1.Framework.Drawing.Gdi.Graphics" /> object.
            </param>
      <param name="srcRectangle">
              A <see cref="T:System.Drawing.Rectangle" /> indicates the source rectangle.
            </param>
      <param name="destRectangle">
              A <see cref="T:System.Drawing.Rectangle" /> indicates the destination rectangle.
            </param>
      <remarks>
        <para>
              Copy only does clipping on the destination DC.
            </para>
      </remarks>
      <exception cref="T:C1.Framework.SystemErrorException" />
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Graphics.ToGdiplusGraphics(C1.Framework.Drawing.Gdi.Graphics)">
      <summary>
              Creates a new gdi+ graphics from a gdi graphics.
            </summary>
      <param name="graphics">
              A <see cref="T:C1.Framework.Drawing.Gdi.Graphics" /> indicates the gdi graphics.
            </param>
      <returns>
              Returns a <see cref="T:System.Drawing.Graphics" /> that indicates the gdi+ graphics.
            </returns>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Graphics.FromGdiplusGraphics(System.Drawing.Graphics)">
      <summary>
              Creates a new gdi graphics from a gdi+ graphics.
            </summary>
      <param name="gdiplusGraphics">
              A <see cref="T:System.Drawing.Graphics" /> indicates the gdi+ graphics.
            </param>
      <returns>
              Returns a <see cref="T:C1.Framework.Drawing.Gdi.Graphics" /> that indicates the gdi graphics.
            </returns>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Graphics.FromGdiplusGraphics(System.Drawing.Graphics,System.Boolean)">
      <summary>
              Creates a new gdi graphics from a gdi+ graphics. 
              This method kept the clip region, but remains low performance, when <paramref name="keptClipRegion" /> is set to true.
            </summary>
      <param name="gdiplusGraphics">
              A <see cref="T:System.Drawing.Graphics" /> indicates the gdi+ graphics.
            </param>
      <param name="keptClipRegion">
              A <b>bool</b> indicate whether kept original clip region of gdip graphics
            </param>
      <returns>
              Returns a <see cref="T:C1.Framework.Drawing.Gdi.Graphics" /> that indicates the gdi graphics.
            </returns>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Graphics.Scroll(System.Int32,System.Int32,System.Drawing.Rectangle)">
      <summary>
              Moves the specified rectangle by offfset values.
            </summary>
      <param name="dx">
              An <b>int</b> indicates the x offset.
            </param>
      <param name="dy">
              An <b>int</b> indicates the y offset.
            </param>
      <param name="rectangle">
              A <see cref="T:System.Drawing.Rectangle" /> structure that indicates the rectangle to be moved.
            </param>
      <remarks>
        <red>[The current implementation is a time consumer, to be re-write.]</red>
      </remarks>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Graphics.TranslateTransform(System.Int32,System.Int32)">
      <summary>
              Changes the origin of the coordinate system by prepending the specified translation to the transformation matrix of this <see cref="T:C1.Framework.Drawing.Gdi.Graphics" /> object.
            </summary>
      <param name="dx">
              x component of the translation. 
            </param>
      <param name="dy">
              y component of the translation. 
            </param>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Graphics.Transform">
      <summary>
              Gets or sets the world transformation for this <see cref="T:C1.Framework.Drawing.Gdi.Graphics" /> object.
            </summary>
      <value>
              This property specifies a <see cref="T:C1.Framework.Drawing.Gdi.TransformMatrix" /> object that represents the world transformation 
              for this <see cref="T:C1.Framework.Drawing.Gdi.Graphics" /> object.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Graphics.PageUnit">
      <summary>
              Gets or sets the unit of measure used for page coordinates in this <see cref="T:C1.Framework.Drawing.Gdi.Graphics" /> object.
            </summary>
      <value>
              One of the <see cref="T:C1.Framework.Drawing.Gdi.GraphicsUnit" /> values.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Graphics.PageScale">
      <summary>
              Gets or sets the scaling between world units and page units for this <see cref="T:C1.Framework.Drawing.Gdi.Graphics" /> object.
            </summary>
      <value>
              This property specifies a value for the scaling between world units and page units for
              this <see cref="T:C1.Framework.Drawing.Gdi.Graphics" /> object.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Graphics.DpiX">
      <summary>
              Gets the horizontal resolution of this Graphics object.
            </summary>
      <value>
              This property indicates a value, in dots per inch, for the horizontal resolution supported by this Graphics object.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Graphics.DpiY">
      <summary>
              Gets the vertical resolution of this Graphics object.
            </summary>
      <value>
              This property indicates a value, in dots per inch, for the vertical resolution supported by this Graphics object.
            </value>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Graphics.DrawString(System.String,C1.Framework.Drawing.Gdi.Font,C1.Framework.Drawing.Gdi.Brush,System.Drawing.Point,C1.Framework.Drawing.Gdi.StringFormat)">
      <summary>
              Draws the specified text string at the specified location with the specified 
              Brush and Font objects using the formatting attributes of the specified StringFormat object.
            </summary>
      <param name="s">
              String to draw.
            </param>
      <param name="font">
              Font object that defines the text format of the string.
            </param>
      <param name="brush">
              Brush object that determines the color and texture of the drawn text.
            </param>
      <param name="point">
              Point structure that specifies the upper-left corner of the drawn text. 
            </param>
      <param name="format">
              StringFormat object that specifies formatting attributes, such as line spacing and alignment, 
              that are applied to the drawn text. 
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Graphics.DrawString(System.String,C1.Framework.Drawing.Gdi.Font,C1.Framework.Drawing.Gdi.Brush,System.Drawing.Rectangle,C1.Framework.Drawing.Gdi.StringFormat)">
      <summary>
              Draws the specified text string in the specified rectangle with the specified 
              Brush and Font objects using the formatting attributes of the specified StringFormat object.
            </summary>
      <param name="s">
              String to draw.
            </param>
      <param name="font">
              Font object that defines the text format of the string.
            </param>
      <param name="brush">
              Brush object that determines the color and texture of the drawn text.
            </param>
      <param name="layoutRectangle">
              Rectangle structure that specifies the location of the drawn text.
            </param>
      <param name="format">
              StringFormat object that specifies formatting attributes, such as line spacing and alignment, 
              that are applied to the drawn text. 
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Graphics.MeasureString(System.String,C1.Framework.Drawing.Gdi.Font,System.Drawing.Size,C1.Framework.Drawing.Gdi.StringFormat)">
      <summary>
              Measures the specified string when drawn with the specified Font object and formatted with the specified StringFormat object.
            </summary>
      <param name="s">
              String to measure.
            </param>
      <param name="font">
              Font object defines the text format of the string.
            </param>
      <param name="layoutArea">
              Size structure that specifies the maximum layout area for the text.
            </param>
      <param name="format">
              StringFormat object that represents formatting information, such as line spacing, for the string.
            </param>
      <returns>
              The MeasureString method is designed for use with individual strings and includes a small amount 
              of extra space before and after the string to allow for overhanging glyphs. Also, the DrawString 
              method adjusts glyph points to optimize display quality and might display a string narrower than 
              reported by MeasureString.
            </returns>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.GraphicsUnit">
      <summary>
              Specifies the unit of measure for the given data.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.GraphicsUnit.Complex">
      <summary>
              Specifies the complex unit as the unit of measure.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.GraphicsUnit.World">
      <summary>
              Specifies the world coordinate system unit as the unit of measure.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.GraphicsUnit.Display">
      <summary>
              Specifies the unit of measure of the display device.
              Typically pixels for video displays, and 1/100 inch for printers.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.GraphicsUnit.Pixel">
      <summary>
              Specifies a device pixel as the unit of measure.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.GraphicsUnit.Point">
      <summary>
              Specifies a printer's point (1/72 inch) as the unit of measure.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.GraphicsUnit.Inch">
      <summary>
              Specifies the inch as the unit of measure.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.GraphicsUnit.Document">
      <summary>
              Specifies the document unit (1/300 inch) as the unit of measure.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.GraphicsUnit.Millimeter">
      <summary>
              Specifies the millimeter as the unit of measure.
            </summary>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.Pen">
      <summary>
              Represents the base class of all kinds of pen
            </summary>
      <remarks>
              This is an abstract class, which is just details that it's ranged to Pen.
              To use a <see cref="T:C1.Framework.Drawing.Gdi.Pen" />, you should create an instance from its inherited class.
              Refer to <see cref="T:C1.Framework.Drawing.Gdi.SolidPen" />, <see cref="T:C1.Framework.Drawing.Gdi.DashPen" /></remarks>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.DashCap">
      <summary>
              Represents the dash style of the pen.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DashCap.Round">
      <summary>
              End caps are round.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DashCap.Flat">
      <summary>
              End caps are flat.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DashCap.Square">
      <summary>
              End caps are square.
            </summary>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.LineJoin">
      <summary>
              Represents the join style of the pen.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.LineJoin.Bevel">
      <summary>
              Joins are beveled.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.LineJoin.Miter">
      <summary>
              Joins are mitered when they are within the current limit set by the SetMiterLimit function. 
              If it exceeds this limit, the join is beveled.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.LineJoin.Round">
      <summary>
              Joins are round.
            </summary>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.DashStyle">
      <summary>
              Represents the line style of the standard pen.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DashStyle.Dash">
      <summary>
              Specifies a line consisting of dashes.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DashStyle.Dot">
      <summary>
              Specifies a line consisting of dots.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DashStyle.DashDot">
      <summary>
              Specifies a line consisting of a repeating pattern of dash-dot.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.DashStyle.DashDotDot">
      <summary>
              The pen has alternating dashes and double dots. This style is 
              valid only when the pen width is one or less in device units.
            </summary>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.SolidPen">
      <summary>
              Represents the pen which always draw with solid line.
            </summary>
      <remarks>
              Inherited from <see cref="T:C1.Framework.Drawing.Gdi.Pen" />.
              An <see cref="T:C1.Framework.Drawing.Gdi.SolidPen" /> would always draw with Solid line
            </remarks>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.SolidPen.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Framework.Drawing.Gdi.Pen" /> class.
            </summary>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.SolidPen.#ctor(System.Drawing.Color)">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Framework.Drawing.Gdi.Pen" /> class.
            </summary>
      <param name="color">
              A <see cref="P:C1.Framework.Drawing.Gdi.SolidPen.Color" /> indicates the color of the pen.
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.SolidPen.#ctor(System.Drawing.Color,System.Int32)">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Framework.Drawing.Gdi.Pen" /> class.
            </summary>
      <param name="color">
              A <see cref="P:C1.Framework.Drawing.Gdi.SolidPen.Color" /> indicates the color of the pen.
            </param>
      <param name="width">
              An <b>int</b> indicates the width of the pen. 
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.SolidPen.#ctor(System.Drawing.Color,System.Int32,C1.Framework.Drawing.Gdi.DashCap,C1.Framework.Drawing.Gdi.LineJoin)">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Framework.Drawing.Gdi.SolidPen" /> class.
            </summary>
      <param name="color">
              A <see cref="P:C1.Framework.Drawing.Gdi.SolidPen.Color" /> indicates the color of the pen.
            </param>
      <param name="width">
              An <b>int</b> indicates the width of the pen. 
            </param>
      <param name="cap">
              A <see cref="T:C1.Framework.Drawing.Gdi.DashCap" /> indicates the cap style of the pen.
            </param>
      <param name="join">
              A <see cref="T:C1.Framework.Drawing.Gdi.LineJoin" /> indicates the join style of the pen.
            </param>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SolidPen.Color">
      <summary>
              Gets or sets the color of the pen.
            </summary>
      <value>
              A <see cref="P:C1.Framework.Drawing.Gdi.SolidPen.Color" /> indicates the color of the pen.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SolidPen.Width">
      <summary>
              Gets or sets the width of the pen.
            </summary>
      <value>
              An <b>int</b> indicates the width of the pen. 
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SolidPen.Cap">
      <summary>
              Gets or sets the end caps style of the pen.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SolidPen.Join">
      <summary>
              Gets or sets the join style of the pen.
            </summary>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.SolidPen.Clone">
      <summary>
              Create a pen that has the same style as this pen.
            </summary>
      <returns>
              A <see cref="T:C1.Framework.Drawing.Gdi.Pen" /> that has the same style as this pen.
            </returns>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.DashPen">
      <summary>
              Reprents the custom pen that has the styles defined by user.
            </summary>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DashPen.#ctor(C1.Framework.Drawing.Gdi.DashStyle,System.Drawing.Color)">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Framework.Drawing.Gdi.DashPen" /> class.
            </summary>
      <param name="dashStyle">
              A <see cref="P:C1.Framework.Drawing.Gdi.DashPen.DashStyle" /> indicate the style of lines be drawed
            </param>
      <param name="color">
              A <see cref="P:C1.Framework.Drawing.Gdi.DashPen.Color" /> indicates the color of the pen.
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DashPen.#ctor(C1.Framework.Drawing.Gdi.DashStyle,System.Drawing.Color,System.Int32)">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Framework.Drawing.Gdi.DashPen" /> class.
            </summary>
      <param name="dashStyle">
              A <see cref="P:C1.Framework.Drawing.Gdi.DashPen.DashStyle" /> indicate the style of lines be drawed
            </param>
      <param name="color">
              A <see cref="P:C1.Framework.Drawing.Gdi.DashPen.Color" /> indicates the color of the pen.
            </param>
      <param name="width">
              An <b>int</b> indicates the width of the pen. 
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DashPen.#ctor(C1.Framework.Drawing.Gdi.DashStyle,System.Drawing.Color,System.Int32,C1.Framework.Drawing.Gdi.DashCap,C1.Framework.Drawing.Gdi.LineJoin)">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Framework.Drawing.Gdi.DashPen" /> class.
            </summary>
      <param name="dashStyle">
              A <see cref="P:C1.Framework.Drawing.Gdi.DashPen.DashStyle" /> indicate the style of lines be drawed
            </param>
      <param name="color">
              A <see cref="P:C1.Framework.Drawing.Gdi.DashPen.Color" /> indicates the color of the pen.
            </param>
      <param name="width">
              An <b>int</b> indicates the width of the pen. 
            </param>
      <param name="cap">
              A <see cref="T:C1.Framework.Drawing.Gdi.DashCap" /> indicates the cap style of the pen.
            </param>
      <param name="join">
              A <see cref="T:C1.Framework.Drawing.Gdi.LineJoin" /> indicates the join style of the pen.
            </param>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.DashPen.Color">
      <summary>
              Gets or sets the color of the pen.
            </summary>
      <value>
              A <see cref="P:C1.Framework.Drawing.Gdi.DashPen.Color" /> indicates the color of the pen.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.DashPen.Width">
      <summary>
              Gets or sets the width of the pen.
            </summary>
      <value>
              An <b>int</b> indicates the width of the pen. 
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.DashPen.Cap">
      <summary>
              Gets or sets the end caps style of the pen.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.DashPen.Join">
      <summary>
              Gets or sets the join style of the pen.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.DashPen.DashStyle">
      <summary>
              Gets or sets the style of the pen.
            </summary>
      <value>
              A <see cref="P:C1.Framework.Drawing.Gdi.DashPen.DashStyle" /> indicates the line style of the pen.
            </value>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.DashPen.Clone">
      <summary>
              Create a pen that has the same style as this pen.
            </summary>
      <returns>
              A <see cref="T:C1.Framework.Drawing.Gdi.DashPen" /> that has the same style as this pen.
            </returns>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.PatternPen">
      <summary>
              Reprents the custom pen that has custom style which is defined by a pattern.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternPen.SolidPattern">
      <summary>
              Get a <b>int[]</b> indicate the pattern of <see cref="T:C1.Framework.Drawing.Gdi.SolidPen" /></summary>
      <remarks>
        <para>
              The <see cref="T:C1.Framework.Drawing.Gdi.Pen" /> create by this pattern is not same as <see cref="T:C1.Framework.Drawing.Gdi.SolidPen" />. 
              the <b>PatternPen</b> would always draw solid one pixel and zero pixel space.
            </para>
        <para>
              Using this style to paint a rectangle, polygon, polyline, it will be lost some pixels at each the corner.
            </para>
      </remarks>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternPen.DashPattern">
      <summary>
              Get a <b>int[]</b> indicate the pattern of <see cref="F:C1.Framework.Drawing.Gdi.DashStyle.Dash" /></summary>
      <remarks>
        <para>
              The <see cref="T:C1.Framework.Drawing.Gdi.Pen" /> create by this pattern is not same as <see cref="T:C1.Framework.Drawing.Gdi.DashPen" /> which <see cref="T:C1.Framework.Drawing.Gdi.DashStyle" />
              is <see cref="F:C1.Framework.Drawing.Gdi.DashStyle.Dash" />. the <b>PatternPen</b> would always draw solid three pixel and one pixel space.
            </para>
        <para>
              Using this style to paint a rectangle, polygon, polyline, it will be lost some pixels at each the corner.
            </para>
      </remarks>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternPen.DotPattern">
      <summary>
              Get a <b>int[]</b> indicate the pattern of <see cref="F:C1.Framework.Drawing.Gdi.DashStyle.Dot" /></summary>
      <remarks>
        <para>
              The <see cref="T:C1.Framework.Drawing.Gdi.Pen" /> create by this pattern is not same as <see cref="T:C1.Framework.Drawing.Gdi.DashPen" /> which <see cref="T:C1.Framework.Drawing.Gdi.DashStyle" />
              is <see cref="F:C1.Framework.Drawing.Gdi.DashStyle.Dot" />. the <b>PatternPen</b> would always draw solid one pixel and one pixel space.
            </para>
        <para>
              Using this style to paint a rectangle, polygon, polyline, it will be lost some pixels at each the corner.
            </para>
      </remarks>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternPen.DashDotPattern">
      <summary>
              Get a <b>int[]</b> indicate the pattern of <see cref="F:C1.Framework.Drawing.Gdi.DashStyle.DashDot" /></summary>
      <remarks>
        <para>
              The <see cref="T:C1.Framework.Drawing.Gdi.Pen" /> create by this pattern is not same as <see cref="T:C1.Framework.Drawing.Gdi.DashPen" /> which <see cref="T:C1.Framework.Drawing.Gdi.DashStyle" />
              is <see cref="F:C1.Framework.Drawing.Gdi.DashStyle.DashDot" />. the <b>PatternPen</b> would always draw solid three pixel,
              and one pixel space, then one pixel solid, one pixel space.
            </para>
        <para>
              Using this style to paint a rectangle, polygon, polyline, it will be lost some pixels at each the corner.
            </para>
      </remarks>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternPen.DashDotDotPattern">
      <summary>
              Get a <b>int[]</b> indicate the pattern of <see cref="F:C1.Framework.Drawing.Gdi.DashStyle.DashDotDot" /></summary>
      <remarks>
        <para>
              The <see cref="T:C1.Framework.Drawing.Gdi.Pen" /> create by this pattern is not same as <see cref="T:C1.Framework.Drawing.Gdi.DashPen" /> which <see cref="T:C1.Framework.Drawing.Gdi.DashStyle" />
              is <see cref="F:C1.Framework.Drawing.Gdi.DashStyle.DashDotDot" />. the <b>PatternPen</b> would always draw solid three pixel,
              and one pixel space, then one pixel solid, one pixel space, one pixel solid, one pixel space.
            </para>
        <para>
              Using this style to paint a rectangle, polygon, polyline, it will be lost some pixels at each the corner.
            </para>
      </remarks>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternPen.DashD9S3Pattern">
      <summary>
              A <b>int[]</b> indiacte a 9_3 pattern ('111111111000') for <see cref="P:C1.Framework.Drawing.Gdi.PatternPen.Pattern" /></summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternPen.DashD3S1Pattern">
      <summary>
              A <b>int[]</b> indiacte a 3_1 pattern ('1110''1110') for <see cref="P:C1.Framework.Drawing.Gdi.PatternPen.Pattern" /></summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternPen.DashD9S3D3S3Pattern">
      <summary>
              A <b>int[]</b> indiacte a 9_3_3_3 pattern. ('111111111000111000') for <see cref="P:C1.Framework.Drawing.Gdi.PatternPen.Pattern" /></summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternPen.DashD3S3D3S3D9S3Pattern">
      <summary>
              A <b>int[]</b> indiacte a 3_3_3_3_9_3 pattern. ('111000111000111111111000') for <see cref="P:C1.Framework.Drawing.Gdi.PatternPen.Pattern" /></summary>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.PatternPen.#ctor(System.Int32[],System.Drawing.Color)">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Framework.Drawing.Gdi.PatternPen" /> class.
            </summary>
      <param name="pattern">
              A <b>int</b> array indicate the pattern of current pen
            </param>
      <param name="color">
              A <see cref="P:C1.Framework.Drawing.Gdi.PatternPen.Color" /> indicates the color of the pen.
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.PatternPen.#ctor(System.Int32[],System.Drawing.Color,System.Int32)">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Framework.Drawing.Gdi.PatternPen" /> class.
            </summary>
      <param name="pattern">
              A <see cref="T:System.Int32" /> array indicates the pattern of the pen.
            </param>
      <param name="color">
              A <see cref="P:C1.Framework.Drawing.Gdi.PatternPen.Color" /> indicates the color of the pen.
            </param>
      <param name="width">
              An <b>int</b> indicates the width of the pen. 
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.PatternPen.#ctor(System.Int32[],System.Drawing.Color,System.Int32,C1.Framework.Drawing.Gdi.DashCap,C1.Framework.Drawing.Gdi.LineJoin)">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Framework.Drawing.Gdi.PatternPen" /> class.
            </summary>
      <param name="pattern">
              A <see cref="T:System.Int32" /> array indicates the pattern of the pen.
            </param>
      <param name="color">
              A <see cref="P:C1.Framework.Drawing.Gdi.PatternPen.Color" /> indicates the color of the pen.
            </param>
      <param name="width">
              An <b>int</b> indicates the width of the pen. 
            </param>
      <param name="cap">
              A <see cref="T:C1.Framework.Drawing.Gdi.DashCap" /> indicates the cap style of the pen.
            </param>
      <param name="join">
              A <see cref="T:C1.Framework.Drawing.Gdi.LineJoin" /> indicates the join style of the pen.
            </param>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternPen.Color">
      <summary>
              Gets or sets the color of the pen.
            </summary>
      <value>
              A <see cref="P:C1.Framework.Drawing.Gdi.PatternPen.Color" /> indicates the color of the pen.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternPen.Width">
      <summary>
              Gets or sets the width of the pen.
            </summary>
      <value>
              An <b>int</b> indicates the width of the pen. 
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternPen.Cap">
      <summary>
              Gets or sets the end caps style of the pen.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternPen.Join">
      <summary>
              Gets or sets the join style of the pen.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.PatternPen.Pattern">
      <summary>
              Gets or sets the pattern of the pen.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> array indicates the pattern of the pen.
            </value>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.PatternPen.Clone">
      <summary>
              Create a pen that has the same style as this pen.
            </summary>
      <returns>
              A <see cref="T:C1.Framework.Drawing.Gdi.PatternPen" /> that has the same style as this pen.
            </returns>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.HollowPen">
      <summary>
              Reprents the hollow pen that would draw nothing.
            </summary>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.HollowPen.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Framework.Drawing.Gdi.HollowPen" /> class.
            </summary>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.HollowPen.Clone">
      <summary>
              Create a pen that has the same style as this pen.
            </summary>
      <returns>
              A <see cref="T:C1.Framework.Drawing.Gdi.HollowPen" /> that has the same style as this pen.
            </returns>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.ColorPen">
      <summary>
              Defines a brush that has a solid color.
            </summary>
      <remarks>
              This pen has the same funtion as <see cref="T:C1.Framework.Drawing.Gdi.SolidPen" /> in painting. The width of <see cref="T:C1.Framework.Drawing.Gdi.SolidPen" /> is always 1.
              This pen will not consume gdi handle. In other word, the Handle property is always IntPtr.Zero. So it 
              can not be used to <see cref="T:C1.Framework.Drawing.Gdi.DeviceContexts.DeviceContext" />.
            </remarks>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.ColorPen.#ctor(System.Drawing.Color)">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> class.
            </summary>
      <param name="color">
              A <see cref="P:C1.Framework.Drawing.Gdi.ColorPen.Color" /> indicates the color of the pen. 
            </param>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.ColorPen.Color">
      <summary>
              Gets or sets the color of the pen.
            </summary>
      <value>
              A <see cref="P:C1.Framework.Drawing.Gdi.ColorPen.Color" /> indicates the color of the pen.
            </value>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.ColorPen.Clone">
      <summary>
              Creates an exact copy if this <b>ColorPen</b> object.
            </summary>
      <returns>
              The <b>ColorPen</b> object that this method creates.
            </returns>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.Pens">
      <summary>
              Pens for all the standard colors.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.Transparent">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.AliceBlue">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.AntiqueWhite">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.Aqua">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.Aquamarine">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.Azure">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.Beige">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.Bisque">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.Black">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.BlanchedAlmond">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.Blue">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.BlueViolet">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.Brown">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.BurlyWood">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.CadetBlue">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.Chartreuse">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.Chocolate">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.Coral">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.CornflowerBlue">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.Cornsilk">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.Crimson">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.Cyan">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.DarkBlue">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.DarkCyan">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.DarkGoldenrod">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.DarkGray">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.DarkGreen">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.DarkKhaki">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.DarkMagenta">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.DarkOliveGreen">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.DarkOrange">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.DarkOrchid">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.DarkRed">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.DarkSalmon">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.DarkSeaGreen">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.DarkSlateBlue">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.DarkSlateGray">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.DarkTurquoise">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.DarkViolet">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.DeepPink">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.DeepSkyBlue">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.DimGray">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.DodgerBlue">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.Firebrick">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.FloralWhite">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.ForestGreen">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.Fuchsia">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.Gainsboro">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.GhostWhite">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.Gold">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.Goldenrod">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.Gray">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.Green">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.GreenYellow">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.Honeydew">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.HotPink">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.IndianRed">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.Indigo">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.Ivory">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.Khaki">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.Lavender">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.LavenderBlush">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.LawnGreen">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.LemonChiffon">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.LightBlue">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.LightCoral">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.LightCyan">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.LightGoldenrodYellow">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.LightGreen">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.LightGray">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.LightPink">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.LightSalmon">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.LightSeaGreen">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.LightSkyBlue">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.LightSlateGray">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.LightSteelBlue">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.LightYellow">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.Lime">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.LimeGreen">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.Linen">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.Magenta">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.Maroon">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.MediumAquamarine">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.MediumBlue">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.MediumOrchid">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.MediumPurple">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.MediumSeaGreen">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.MediumSlateBlue">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.MediumSpringGreen">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.MediumTurquoise">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.MediumVioletRed">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.MidnightBlue">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.MintCream">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.MistyRose">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.Moccasin">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.NavajoWhite">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.Navy">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.OldLace">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.Olive">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.OliveDrab">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.Orange">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.OrangeRed">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.Orchid">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.PaleGoldenrod">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.PaleGreen">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.PaleTurquoise">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.PaleVioletRed">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.PapayaWhip">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.PeachPuff">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.Peru">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.Pink">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.Plum">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.PowderBlue">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.Purple">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.Red">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.RosyBrown">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.RoyalBlue">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.SaddleBrown">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.Salmon">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.SandyBrown">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.SeaGreen">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.SeaShell">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.Sienna">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.Silver">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.SkyBlue">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.SlateBlue">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.SlateGray">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.Snow">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.SpringGreen">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.SteelBlue">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.Tan">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.Teal">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.Thistle">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.Tomato">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.Turquoise">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.Violet">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.Wheat">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.White">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.WhiteSmoke">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.Yellow">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Pens.YellowGreen">
      <summary>
              A system-defined <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object with a width of 1.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object set to a system-defined color.
            </value>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.SystemPens">
      <summary>
              Each property of the SystemPens class is a <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the color of 
              a Windows display element and that is a width of 1.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemPens.ActiveBorder">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the color of the active window's border.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the color of the active window's border.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemPens.ActiveCaption">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the color of the active window's title bar.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the color of the active window's title bar.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemPens.ActiveCaptionText">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the color of the text in the active window's
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the color of the text in the active window's
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemPens.AppWorkspace">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the color of the application workspace.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the color of the application workspace.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemPens.ButtonFace">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the face color of a 3-D element.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the face color of a 3-D element.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemPens.ButtonHighlight">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the highlight color of a 3-D element.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the highlight color of a 3-D element.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemPens.ButtonShadow">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the shadow color of a 3-D element.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the shadow color of a 3-D element.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemPens.Control">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the face color of a 3-D element
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the face color of a 3-D element
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemPens.ControlDark">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the shadow color of a 3-D element.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the shadow color of a 3-D element.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemPens.ControlDarkDark">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the dark shadow color of a 3-D element.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the dark shadow color of a 3-D element.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemPens.ControlLight">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the light color of a 3-D element.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the light color of a 3-D element.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemPens.ControlLightLight">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the highlight color of a 3-D
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the highlight color of a 3-D
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemPens.ControlText">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the color of text in a 3-D
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the color of text in a 3-D
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemPens.Desktop">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the color of the desktop.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the color of the desktop.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemPens.GradientActiveCaption">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the lightest color
              in the color gradient of an active window's title bar.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the lightest color in the color gradient of an active window's title bar.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemPens.GradientInactiveCaption">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the lightest color in the color
              gradient of an inactive window's title bar.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the lightest color in the color gradient of an inactive window's title bar.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemPens.GrayText">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the color of dimmed text.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the color of dimmed text.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemPens.Highlight">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the color of the background of selected items.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the color of the background of selected items.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemPens.HighlightText">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the color of the text of selected items.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the color of the text of selected items.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemPens.HotTrack">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the color used to designate a hot-tracked item.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the color used to designate a hot-tracked item.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemPens.InactiveBorder">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the color of an inactive window's border.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the color of an inactive window's border.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemPens.InactiveCaption">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the color of the background of an inactive window's title bar.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the color of the background of an inactive window's title bar.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemPens.InactiveCaptionText">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the color of the text in an inactive window's title bar.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the color of the text in an inactive window's title bar.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemPens.Info">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the color of the background of a ToolTip.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the color of the background of a ToolTip.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemPens.InfoText">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the color of the text of a ToolTip.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the color of the text of a ToolTip.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemPens.Menu">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the color of a menu's background.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the color of a menu's background.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemPens.MenuBar">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the color of the background of a menu bar.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the color of the background of a menu bar.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemPens.MenuHighlight">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the color used to highlight menu items
              when the menu appears as a flat menu.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the color used to highlight menu items when the menu appears as a flat menu.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemPens.MenuText">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the color of a menu's text.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the color of a menu's text.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemPens.ScrollBar">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the color of the background of a scroll bar.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the color of the background of a scroll bar.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemPens.Window">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the color of the background in the client area of a window.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the color of the background in the client area of a window.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemPens.WindowFrame">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the color of a window frame.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the color of a window frame.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.SystemPens.WindowText">
      <summary>
              Gets a <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the color of the text in the client area of a window.
            </summary>
      <value>
              A <see cref="T:C1.Framework.Drawing.Gdi.ColorPen" /> object that is the color of the text in the client area of a window.
            </value>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.RegionData">
      <summary>
              A data package save the data of a <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object.
            </summary>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.Region">
      <summary>
              Represent the interior of a graphics shape composed of rectangles.
            </summary>
      <remarks>
        <newpara>
                A region is scalable because its coordinates are specified in world coordinates. On a drawing surface, however,
                its interior is dependent on the size and shape of the pixels representing it. An application can use regions
                to clamp the output of drawing operations. The window manager uses regions to define the drawing area of these
                regions are called clipping regions. An application can also use regions in hit-testing operations,
                such as checking whether a point or a rectangle intersects a region. An application can fill a region by 
                using a <see cref="T:C1.Framework.Drawing.Gdi.Brush" /> object.
              </newpara>
        <newpara>
          <note type="cnotes">
                  This class uses the Win32 GDI API's for handling regions. The GDI+ version <see cref="T:System.Drawing.Region" />
                  class just seems to be buggy and too slow.
                </note>
        </newpara>
      </remarks>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Region.#ctor">
      <summary>
              Initializes a new <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object.
            </summary>
      <remarks>
              This constructor initializes a new <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object with infinite interior.
            </remarks>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Region.#ctor(System.Drawing.Rectangle)">
      <summary>
              Initializes a new <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object from the specified <see cref="T:System.Drawing.Rectangle" /> structure.
            </summary>
      <param name="rectangle">
              A <see cref="T:System.Drawing.Rectangle" /> structure that defines the interior of the new <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object. 
            </param>
      <remarks>
              This method creates a new <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object with a rectangular interior.
              The interior is defined by the <c>rectangle</c> parameter.
            </remarks>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Region.#ctor(C1.Framework.Drawing.Gdi.RegionData)">
      <summary>
              Initializes a new <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object from the <see cref="T:C1.Framework.Drawing.Gdi.RegionData" /> object.
            </summary>
      <param name="data">
              A data package save the data of a <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object.
            </param>
      <returns>
              A newly created Windows region handle.
            </returns>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Region.GetData">
      <summary>
              Retieves the rectangle information that makes up this instance
              of the <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object.
            </summary>
      <returns>
              A byte array holding the region information.
            </returns>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Region.GetBounds">
      <summary>
              Gets a <see cref="T:System.Drawing.Rectangle" /> structure that represents a rectangle 
              that bounds this <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object.
            </summary>
      <returns>
              A <see cref="T:System.Drawing.Rectangle" /> structure that represents the bounding rectangle
              for this <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object.
            </returns>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Region.Complement(System.Drawing.Rectangle)">
      <summary>
              Updates this <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object to contain the portion of the specified
              <see cref="T:System.Drawing.Rectangle" /> structure that does not intersect with this <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object.
            </summary>
      <param name="rectangle">
              The <see cref="T:System.Drawing.Rectangle" /> structure to complement this <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object. 
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Region.Complement(C1.Framework.Drawing.Gdi.Region)">
      <summary>
              Updates this <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object to contain the portion of the specified <b>Region</b> object
              that does not intersect with this <b>Region</b> object.
            </summary>
      <param name="region">
              The <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object to complement this <b>Region</b> object. 
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Region.Intersect(System.Drawing.Rectangle)">
      <summary>
              Updates this <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object to the intersection of itself 
              with the specified <see cref="T:System.Drawing.Rectangle" /> structure.
            </summary>
      <param name="rectangle">
              The <see cref="T:System.Drawing.Rectangle" /> structure to intersect with this <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object. 
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Region.Intersect(C1.Framework.Drawing.Gdi.Region)">
      <summary>
              Updates this <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object to the intersection of itself with the specified <b>Region</b> object.
            </summary>
      <param name="region">
              The <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object to intersect with this <b>Region</b> object. 
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Region.Exclude(System.Drawing.Rectangle)">
      <summary>
              Updates this <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object to the portion of its interior 
              that does not intersect with the specified <see cref="T:System.Drawing.Rectangle" /> structure.
            </summary>
      <param name="rectangle">
              The <see cref="T:System.Drawing.Rectangle" /> structure to exclude from this <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object.
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Region.Exclude(C1.Framework.Drawing.Gdi.Region)">
      <summary>
              Updates this <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object to the portion of its interior 
              that does not intersect with the specified <b>Region</b> object.
            </summary>
      <param name="region">
              The <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object to exclude from this <b>Region</b> object. 
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Region.Union(System.Drawing.Rectangle)">
      <summary>
              Updates this <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object to the union of itself and the 
              specified <see cref="T:System.Drawing.Rectangle" /> structure.
            </summary>
      <param name="rectangle">
              The <see cref="T:System.Drawing.Rectangle" /> structure to unite with this <see cref="T:C1.Framework.Drawing.Gdi.Region" /> 
              object.
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Region.Union(C1.Framework.Drawing.Gdi.Region)">
      <summary>
              Updates this <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object to the union of itself and the specified <b>Region</b> object.
            </summary>
      <param name="region">
              The <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object to unite with this <b>Region</b> object. 
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Region.Xor(System.Drawing.Rectangle)">
      <summary>
              Updates this <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object to the union minus the intersection of itself with 
              the specified <see cref="T:System.Drawing.Rectangle" /> strcuture.
            </summary>
      <param name="rectangle">
              The <see cref="T:System.Drawing.Rectangle" /> structure to <b>XOR</b> with this <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object. 
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Region.Xor(C1.Framework.Drawing.Gdi.Region)">
      <summary>
              Updates this <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object to the union minus the intersection of itself with
              the specified <b>Region</b> object.
            </summary>
      <param name="region">
              The <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object to <b>XOR</b> with this <b>Region</b> object. 
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Region.IsVisible(System.Drawing.Point)">
      <summary>
              Tests whether the specified <see cref="T:System.Drawing.Point" /> structure is contained 
              within this <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object.
            </summary>
      <param name="point">
              The <see cref="T:System.Drawing.Point" /> structure to test.
            </param>
      <returns>
              This method returns <b>true</b> when <c>point</c> is contained within this <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object;
              otherwise, <b>false</b>.
            </returns>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Region.IsVisible(System.Drawing.Rectangle)">
      <summary>
              Tests whether any portion of the specified <see cref="T:System.Drawing.Rectangle" /> structure 
              is contained within this <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object.
            </summary>
      <param name="rectangle">
              The <see cref="T:System.Drawing.Rectangle" /> structure to test.
            </param>
      <returns>
              This method returns <b>true</b> when any portion of <c>rectangle</c> is contained 
              within this <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object; otherwise, <b>false</b>.
            </returns>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Region.IsEmpty">
      <summary>
              Tests whether this <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object has an empty interior.
            </summary>
      <returns>
             This method returns <b>true</b> if the interior of this <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object is empty; otherwise, <b>false</b>.
            </returns>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Region.MakeEmpty">
      <summary>
              Initializes this <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object to an empty interior.
            </summary>
      <returns>
              This method does not return a value.
            </returns>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Region.Translate(System.Int32,System.Int32)">
      <summary>
              Offsets the coordinates of this <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object by 
              the specified amount.
            </summary>
      <param name="dx">
              The amount to offset this <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object horizontally.
            </param>
      <param name="dy">
              The amount to offset this <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object vertically.
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Region.Equals(C1.Framework.Drawing.Gdi.Region)">
      <summary>
              Tests whether the specified <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object is identical to this <b>Region</b> object.
            </summary>
      <param name="region">
              The <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object to test.
            </param>
      <returns>
              This method returns <b>true</b> if the interior of region <c>region</c>
              is identical to the interior of this region; otherwise, <b>false</b>.
            </returns>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Region.Clone">
      <summary>
              Creates an exact copy if this <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object.
            </summary>
      <returns>
              The <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object that this method creates.
            </returns>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Region.Handle">
      <summary>
              Get a handle which is being transformed to this <b>Region</b> object.
            </summary>
      <value>
              A Windows handle to this <b>Region</b> object.
            </value>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Region.Scan(C1.Framework.Drawing.Gdi.Region)">
      <summary>
              Returns an array of <see cref="T:System.Drawing.Rectangle" /> structures that
              approximate this <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object.
            </summary>
      <param name="region">
              A <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object to be scaned.
            </param>
      <returns>
              An array of <see cref="T:System.Drawing.Rectangle" /> structures that approximate this <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object.
            </returns>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Region.FromGdiplusRegion(System.Drawing.Region)">
      <summary>
              Create a new gdi region that is same as the gdi+ region.
            </summary>
      <param name="gdiplusRegion">
              A <see cref="T:System.Drawing.Region" /> object that indicates the gdi+ region.
            </param>
      <returns>
              A <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object that indicates the new gdi region.
            </returns>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Region.ToGdiplusRegion(C1.Framework.Drawing.Gdi.Region)">
      <summary>
              Creates a new gdi+ <see cref="T:System.Drawing.Region" /> object from the gdi <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object.
            </summary>
      <param name="region">
              A <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object that indicates the new gdi region.
            </param>
      <returns>
              A <see cref="T:System.Drawing.Region" /> object that indicates the gdi+ region.
            </returns>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Region.CreateRoundedRectangleRegion(System.Drawing.Rectangle,System.Int32,System.Int32)">
      <summary>
              Creates a rectangular <see cref="T:C1.Framework.Drawing.Gdi.Region" /> with rounded corners.
            </summary>
      <param name="rectangle">
              A <see cref="T:System.Drawing.Rectangle" /> structure that defines the interior of the new <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object.
            </param>
      <param name="ellipseWidth">
              Specifies the width of the ellipse used to create the rounded corners in logical units.
            </param>
      <param name="ellipseHeight">
              Specifies the height of the ellipse used to create the rounded corners in logical units.
            </param>
      <returns>
              A <see cref="T:C1.Framework.Drawing.Gdi.Region" /> indicates the <b>region</b> with rounded corners.
            </returns>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Region.CreateEllipseRegion(System.Drawing.Rectangle)">
      <summary>
              Create a ellipse region.
            </summary>
      <param name="rectangle">
              A <see cref="T:System.Drawing.Rectangle" /> that just contains the ellipse.
            </param>
      <returns>
              A <see cref="T:C1.Framework.Drawing.Gdi.Region" /> indicates the ellipse region
            </returns>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Region.CreatePieRegion(System.Drawing.Rectangle,System.Single,System.Single)">
      <summary>
              Create a pie region.
            </summary>
      <param name="rectangle">
              A <see cref="T:System.Drawing.Rectangle" /> structure that defines the boundaries of the pie.
            </param>
      <param name="startAngle">
              A <b>float</b> value that defines the start angle of the pie.
            </param>
      <param name="sweepAngle">
              A <b>float</b> value that defines the sweep angle of the pie.
            </param>
      <returns>
              A <see cref="T:C1.Framework.Drawing.Gdi.Region" /> indicates the pie region.
            </returns>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Region.CreateChordRegion(System.Drawing.Rectangle,System.Single,System.Single)">
      <summary>
              Creates a chord region (a region bounded by the intersection of an ellipse and a line segment, called a secant). 
            </summary>
      <param name="rectangle">
              A <see cref="T:System.Drawing.Rectangle" /> indicates the bounds of the ellipse.
            </param>
      <param name="startAngle">
              A <b>float</b> specifies the start angle, in degrees. 
            </param>
      <param name="sweepAngle">
              A <b>float</b> specifies the sweep angle, in degrees, relative to the starting angle.
            </param>
      <returns>
              A <see cref="T:C1.Framework.Drawing.Gdi.Region" /> indicates the chord region.
            </returns>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Region.CreatePolygonRegion(System.Drawing.Point[])">
      <summary>
              Create a polygons region from the point array which defines the vertices of the polygon.
            </summary>
      <param name="polygonPoints">
              A <see cref="T:System.Drawing.Point" /> array that defines the vertices of the polygon. 
            </param>
      <remarks>
              This method creates a new <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object with a polygon interior interior.
              The interior is defined by the <c>polygonPoints</c> parameter.
            </remarks>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Region.CreatePolygonRegion(System.Drawing.Point[],C1.Framework.Drawing.Gdi.DeviceContexts.PolyFillMode)">
      <summary>
              Create a polygons region from the point array which defines the vertices of the polygon.
            </summary>
      <param name="polygonPoints">
              A <see cref="T:System.Drawing.Point" /> array that defines the vertices of the polygon. 
            </param>
      <param name="polyFillMode">
        <see cref="T:C1.Framework.Drawing.Gdi.DeviceContexts.PolyFillMode" /> Indicates the poly fill mode is "alternate" or "winding"
            </param>
      <remarks>
              This method creates a new <see cref="T:C1.Framework.Drawing.Gdi.Region" /> object with a polygon interior interior.
              The interior is defined by the <c>polygonPoints</c> parameter.
            </remarks>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.StringFormatFlags">
      <summary>
              Specifies the display and layout information for text strings.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.StringFormatFlags.Nothing">
      <summary>
              No any flags.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.StringFormatFlags.LineLimit">
      <summary>
              Only entire lines are laid out in the formatting rectangle. 
              By default layout continues until the end of the text, 
              or until no more lines are visible as a result of clipping, 
              whichever comes first. 
              Note that the default settings allow the last line to be partially 
              obscured by a formatting rectangle that is not a whole multiple 
              of the line height. To ensure that only whole lines are seen, 
              specify this value and be careful to provide a formatting rectangle 
              at least as tall as the height of one line.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.StringFormatFlags.MultiLine">
      <summary>
              Shows string on one or more lines.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.StringFormatFlags.NoWrap">
      <summary>
              Disables wrapping of text between lines when formatting within a rectangle. 
              This flag is implied when a point is passed instead of a rectangle, 
              or when the specified rectangle has a zero line length.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.StringFormatFlags.WordWrap">
      <summary>
              Breaks words. Lines are automatically broken between words if a word would extend past the edge of the 
              pecified rectangle. A carriage return-line feed sequence also breaks the line. 
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.StringFormatFlags.RightToLeft">
      <summary>
              Specifies that text is right to left.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.StringFormatFlags.Vertical">
      <summary>
              Specifies that text is vertical.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.StringFormatFlags.NoClip">
      <summary>
              Overhanging parts of glyphs, and unwrapped text reaching outside 
              the formatting rectangle are allowed to show. 
              By default all text and glyph parts reaching outside the formatting 
              rectangle are clipped.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.StringFormatFlags.ExpandTabs">
      <summary>
              Expands tab characters. The default number of characters per tab is eight.
            </summary>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.StringAlignment">
      <summary>
              Specifies the alignment of a text string relative to its layout rectangle.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.StringAlignment.Center">
      <summary>
              Specifies that text is aligned in the center of the layout rectangle.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.StringAlignment.Far">
      <summary>
              Specifies that text is aligned far from the origin position of the layout rectangle. 
              In a left-to-right layout, the far position is right. 
              In a right-to-left layout, the far position is left.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.StringAlignment.Near">
      <summary>
              Specifies the text be aligned near the layout. 
              In a left-to-right layout, the near position is left. 
              In a right-to-left layout, the near position is right. 
            </summary>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.HotkeyPrefix">
      <summary>
              Specifies the type of display for hot-key prefixes that relate to text.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.HotkeyPrefix.None">
      <summary>
              No hot-key prefix. 
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.HotkeyPrefix.Show">
      <summary>
              Display the hot-key prefix. 
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.HotkeyPrefix.Hide">
      <summary>
              Do not display the hot-key prefix. 
            </summary>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.StringTrimming">
      <summary>
              Specifies how to trim characters from a string that does not completely fit into a layout shape.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.StringTrimming.None">
      <summary>
              Specifies no trimming.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.StringTrimming.Character">
      <summary>
              Specifies that the text is trimmed to the nearest character.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.StringTrimming.Word">
      <summary>
              Specifies that text is trimmed to the nearest word.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.StringTrimming.EllipsisCharacter">
      <summary>
              Specifies that the text is trimmed to the nearest character, 
              and an ellipsis is inserted at the end of a trimmed line.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.StringTrimming.EllipsisWord">
      <summary>
              Specifies that text is trimmed to the nearest word, and an ellipsis is 
              inserted at the end of a trimmed line.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.StringTrimming.EllipsisPath">
      <summary>
              The center is removed from trimmed lines and replaced by an ellipsis. 
              The algorithm keeps as much of the last slash-delimited segment of the line as possible.
            </summary>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.TabUnit">
      <summary>
              Specifies the unit of the tab stops or offset.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.TabUnit.Pixel">
      <summary>
              The unit of the tab stops or offset is base on logical point of the display surface.
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.TabUnit.Character">
      <summary>
              The unit of the tab stops or offset are base on the character number.
            </summary>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.StringFormat">
      <summary>
              Encapsulates text layout information (such as alignment and line spacing), 
              display manipulations (such as ellipsis insertion and national digit substitution) 
              and OpenType features.
            </summary>
      <remarks>
              Many common formats are provided through the <see cref="T:C1.Framework.Drawing.Gdi.StringFormatFlags" /> enumeration.
              <b>StringFormat</b> objects can be changed.
            </remarks>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.StringFormat.#ctor">
      <summary>
              Initializes a new <see cref="T:C1.Framework.Drawing.Gdi.StringFormat" /> object.
            </summary>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.StringFormat.#ctor(C1.Framework.Drawing.Gdi.StringFormatFlags)">
      <summary>
              Initializes a new <see cref="T:C1.Framework.Drawing.Gdi.StringFormat" /> object with the specified 
              <see cref="T:C1.Framework.Drawing.Gdi.StringFormatFlags" /> enumeration.
            </summary>
      <param name="formatFlags">
              The <see cref="T:C1.Framework.Drawing.Gdi.StringFormatFlags" /> enumeration for the new 
              <see cref="T:C1.Framework.Drawing.Gdi.StringFormat" /> object. 
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.StringFormat.#ctor(C1.Framework.Drawing.Gdi.StringAlignment,C1.Framework.Drawing.Gdi.StringAlignment,C1.Framework.Drawing.Gdi.StringFormatFlags)">
      <summary>
              Initializes a new <see cref="T:C1.Framework.Drawing.Gdi.StringFormat" /> object with the specified
              <see cref="T:C1.Framework.Drawing.Gdi.StringAlignment" /> and <see cref="T:C1.Framework.Drawing.Gdi.StringFormatFlags" /> enumeration.
            </summary>
      <param name="alignment">
              A <see cref="T:C1.Framework.Drawing.Gdi.StringAlignment" /> that represents the horizontal alignment.
            </param>
      <param name="lineAlignment">
              A <see cref="T:C1.Framework.Drawing.Gdi.StringAlignment" /> that represents the vertical alignment.
            </param>
      <param name="formatFlags">
              The <see cref="T:C1.Framework.Drawing.Gdi.StringFormatFlags" /> enumeration for the new 
              <see cref="T:C1.Framework.Drawing.Gdi.StringFormat" /> object. 
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.StringFormat.#ctor(C1.Framework.Drawing.Gdi.StringFormat)">
      <summary>
              Initializes a new <see cref="T:C1.Framework.Drawing.Gdi.StringFormat" /> object from the specified 
              existing <b>StringFormat</b> object.
            </summary>
      <param name="stringFormat">
              The <see cref="T:C1.Framework.Drawing.Gdi.StringFormat" /> object from which to initialize the new 
              <b>StringFormat</b> object. 
            </param>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.StringFormat.Alignment">
      <summary>
              Gets or sets text alignment information.
            </summary>
      <value>
              A StringAlignment enumeration that specifies text alignment information.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.StringFormat.LineAlignment">
      <summary>
              Gets or sets the line alignment.
            </summary>
      <value>
              A StringAlignment enumeration that represents the line alignment.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.StringFormat.FormatFlags">
      <summary>
              Gets or sets a StringFormatFlags enumeration that contains formatting information.
            </summary>
      <value>
              A StringFormatFlags enumeration that contains formatting information.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.StringFormat.HotkeyPrefix">
      <summary>
              Gets or sets the HotkeyPrefix object for this StringFormat object.
            </summary>
      <value>
              The HotkeyPrefix object for this StringFormat object.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.StringFormat.Trimming">
      <summary>
              Gets or sets the StringTrimming enumeration for this StringFormat object.
            </summary>
      <value>
              A StringTrimming enumeration that indicates how text drawn with 
              this StringFormat object is trimmed when it exceeds the edges of the layout rectangle.
            </value>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.StringFormat.GetTabStops(System.Int32@,C1.Framework.Drawing.Gdi.TabUnit@)">
      <summary>
              Gets the tab stops for this StringFormat object.
            </summary>
      <param name="firstTabOffset">
              The number of spaces between the beginning of a text line and the first tab stop. 
            </param>
      <param name="tabUnit">
              The unit of the tab stops and offset.
            </param>
      <returns>
              An array of distances (in number of spaces) between tab stops.
            </returns>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.StringFormat.SetTabStops(System.Int32,System.Int32[],C1.Framework.Drawing.Gdi.TabUnit)">
      <summary>
              Sets tab stops for this StringFormat object.
            </summary>
      <param name="firstTabOffset">
              The number of spaces between the beginning of a line of text and the first tab stop.
            </param>
      <param name="tabStops">
              An array of distances (in number of spaces) between tab stops.
            </param>
      <param name="tabUnit">
              The unit of the tab stops and offset.
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.StringFormat.Clone">
      <summary>
              Creates a copy of the <see cref="T:C1.Framework.Drawing.Gdi.StringFormat" /> object.
            </summary>
      <returns>
              Returns a copy of the <see cref="T:C1.Framework.Drawing.Gdi.StringFormat" /> object.
            </returns>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.TransformOrder">
      <summary>
              Specifies the order for matrix transform operations.
            </summary>
      <remarks>
              Matrix transform operations are not necessarily commutative. 
              The order in which they are applied is important.
            </remarks>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.TransformOrder.Append">
      <summary>
              The new operation is applied after the old operation. 
            </summary>
    </member>
    <member name="F:C1.Framework.Drawing.Gdi.TransformOrder.Prepend">
      <summary>
              The new operation is applied before the old operation.
            </summary>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.TransformMatrix">
      <summary>
              The TransformMatrix class contains the transform info for transforming 
              between world-space and page-space in GDI.
            </summary>
      <value>
              TransformMatrix is a 3x3 matrix, but we only use M11, M12, M21, M22, Dx and Dy. 
              | M11,  M12,  0 |
              | M21,  M22,  0 |
              | Dx,   Dy,   1 |
            </value>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.TransformMatrix.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Framework.Drawing.Gdi.TransformMatrix" /> class.
            </summary>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.TransformMatrix.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Framework.Drawing.Gdi.TransformMatrix" /> class.
            </summary>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.TransformMatrix.#ctor(System.Single,System.Single)">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Framework.Drawing.Gdi.TransformMatrix" /> class.
            </summary>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.TransformMatrix.#ctor(System.Single,System.Single,System.Single,System.Single)">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Framework.Drawing.Gdi.TransformMatrix" /> class.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.TransformMatrix.M11">
      <summary>
              Gets or sets the value of M11.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.TransformMatrix.M12">
      <summary>
              Gets or sets the value of M12.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.TransformMatrix.M21">
      <summary>
              Gets or sets the value of M21.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.TransformMatrix.M22">
      <summary>
              Gets or sets the value of M22.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.TransformMatrix.Dx">
      <summary>
              Gets or sets the value of Dx.
            </summary>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.TransformMatrix.Dy">
      <summary>
              Gets or sets the value of Dy.
            </summary>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.TransformMatrix.Rotate(System.Single)">
      <summary>
              Applies a clockwise rotation of the specified angle about the origin to this Matrix object.
            </summary>
      <param name="angle">
              A <b>float</b> indicates the clockwise angle.
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.TransformMatrix.Translate(System.Single,System.Single)">
      <summary>
              Applies the specified translation vector (offsetX and offsetY) to this Matrix object 
              by prepending the translation vector.
            </summary>
      <param name="offsetX">
              The x value by which to translate this Matrix.
            </param>
      <param name="offsetY">
              The y value by which to translate this Matrix.
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.TransformMatrix.Scale(System.Single,System.Single)">
      <summary>
              Applies the specified scale vector to this Matrix object by prepending the scale vector.
            </summary>
      <param name="scaleX">
              The value by which to scale this Matrix in the x-axis direction.
            </param>
      <param name="scaleY">
              The value by which to scale this Matrix in the y-axis direction.
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.TransformMatrix.Shear(System.Single,System.Single)">
      <summary>
              Applies the specified shear vector to this Matrix object by prepending the shear transform.
            </summary>
      <param name="shearX">
              The horizontal shear factor. 
            </param>
      <param name="shearY">
              The vertical shear factor.
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.TransformMatrix.XAxisReflect">
      <summary>
              Applies the x-axis reflecting to this Matrix object.
            </summary>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.TransformMatrix.YAxisReflect">
      <summary>
              Applies the y-axis reflecting to this Matrix object.
            </summary>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.TransformMatrix.SlashReflect">
      <summary>
              Applies the slash reflecting to this Matrix object.
            </summary>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.TransformMatrix.BackslashReflect">
      <summary>
              Applies the backslash reflecting to this Matrix object.
            </summary>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.TransformMatrix.Rotate(System.Single,C1.Framework.Drawing.Gdi.TransformOrder)">
      <summary>
              Applies a clockwise rotation of the specified angle about the origin to this Matrix object.
            </summary>
      <param name="angle">
              A <b>float</b> indicates the clockwise angle.
            </param>
      <param name="order">
              A <see cref="T:C1.Framework.Drawing.Gdi.TransformOrder" /> enumeration that specifies the order (append or prepend) in 
              which the rotation is applied to this Matrix object. 
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.TransformMatrix.Translate(System.Single,System.Single,C1.Framework.Drawing.Gdi.TransformOrder)">
      <summary>
              Applies the specified translation vector (offsetX and offsetY) to this Matrix object 
              by prepending the translation vector.
            </summary>
      <param name="offsetX">
              The x value by which to translate this Matrix.
            </param>
      <param name="offsetY">
              The y value by which to translate this Matrix.
            </param>
      <param name="order">
              A <see cref="T:C1.Framework.Drawing.Gdi.TransformOrder" /> enumeration that specifies the order (append or prepend) in 
              which the translation is applied to this Matrix object. 
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.TransformMatrix.Scale(System.Single,System.Single,C1.Framework.Drawing.Gdi.TransformOrder)">
      <summary>
              Applies the specified scale vector to this Matrix object by prepending the scale vector.
            </summary>
      <param name="scaleX">
              The value by which to scale this Matrix in the x-axis direction.
            </param>
      <param name="scaleY">
              The value by which to scale this Matrix in the y-axis direction.
            </param>
      <param name="order">
              A <see cref="T:C1.Framework.Drawing.Gdi.TransformOrder" /> enumeration that specifies the order (append or prepend) in 
              which the scaling is applied to this Matrix object. 
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.TransformMatrix.Shear(System.Single,System.Single,C1.Framework.Drawing.Gdi.TransformOrder)">
      <summary>
              Applies the specified shear vector to this Matrix object by prepending the shear transform.
            </summary>
      <param name="shearX">
              The horizontal shear factor. 
            </param>
      <param name="shearY">
              The vertical shear factor.
            </param>
      <param name="order">
              A <see cref="T:C1.Framework.Drawing.Gdi.TransformOrder" /> enumeration that specifies the order (append or prepend) in 
              which the shearing is applied to this Matrix object. 
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.TransformMatrix.XAxisReflect(C1.Framework.Drawing.Gdi.TransformOrder)">
      <summary>
              Applies the x-axis reflecting to this Matrix object.
            </summary>
      <param name="order">
              A <see cref="T:C1.Framework.Drawing.Gdi.TransformOrder" /> enumeration that specifies the order (append or prepend) in 
              which the reflection is applied to this Matrix object. 
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.TransformMatrix.YAxisReflect(C1.Framework.Drawing.Gdi.TransformOrder)">
      <summary>
              Applies the y-axis reflecting to this Matrix object.
            </summary>
      <param name="order">
              A <see cref="T:C1.Framework.Drawing.Gdi.TransformOrder" /> enumeration that specifies the order (append or prepend) in 
              which the reflection is applied to this Matrix object. 
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.TransformMatrix.SlashReflect(C1.Framework.Drawing.Gdi.TransformOrder)">
      <summary>
              Applies the slash reflecting to this Matrix object.
            </summary>
      <param name="order">
              A <see cref="T:C1.Framework.Drawing.Gdi.TransformOrder" /> enumeration that specifies the order (append or prepend) in 
              which the reflection is applied to this Matrix object. 
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.TransformMatrix.BackslashReflect(C1.Framework.Drawing.Gdi.TransformOrder)">
      <summary>
              Applies the backslash reflecting to this Matrix object.
            </summary>
      <param name="order">
              A <see cref="T:C1.Framework.Drawing.Gdi.TransformOrder" /> enumeration that specifies the order (append or prepend) in 
              which the reflection is applied to this Matrix object. 
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.TransformMatrix.Transform(C1.Framework.Drawing.Gdi.Coordinate)">
      <summary>
              Transform a <see cref="T:C1.Framework.Drawing.Gdi.Coordinate" /> object to a new <see cref="T:C1.Framework.Drawing.Gdi.Coordinate" /> object.
            </summary>
      <param name="value">
              A <see cref="T:C1.Framework.Drawing.Gdi.Coordinate" /> object indicats the old value.
            </param>
      <returns>
              A <see cref="T:C1.Framework.Drawing.Gdi.Coordinate" /> object indicats the new value.
            </returns>
      <remarks>
              x' = x * M11 + y * M21 + Dx
              y' = x * M12 + y * M22 + Dy
            </remarks>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.TransformMatrix.InverseTransform(C1.Framework.Drawing.Gdi.Coordinate)">
      <summary>
              Inverse transform a <see cref="T:C1.Framework.Drawing.Gdi.Coordinate" /> object to a new <see cref="T:C1.Framework.Drawing.Gdi.Coordinate" /> object.
            </summary>
      <param name="value">
              A <see cref="T:C1.Framework.Drawing.Gdi.Coordinate" /> object indicats the old value.
            </param>
      <returns>
              A <see cref="T:C1.Framework.Drawing.Gdi.Coordinate" /> object indicats the new value.
            </returns>
      <remarks>
              x = ((x' - Dx) * M22 - (y' - Dy) * M21) / (M11 * M22 - M12 * M21)
              y = ((y' - Dy) * M11 - (x' - Dx) * M12) / (M11 * M22 - M12 * M21)
            </remarks>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.TransformMatrix.RotateAt(C1.Framework.Drawing.Gdi.Coordinate,System.Single)">
      <summary>
              Applies a clockwise rotation to this Matrix object around the point 
              specified in the point parameter, and by prepending the rotation
            </summary>
      <param name="point">
              A <see cref="T:C1.Framework.Drawing.Gdi.Coordinate" /> class that represents the center of the rotation. 
            </param>
      <param name="angle">
              The angle (extent) of the rotation. 
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.TransformMatrix.ReflectAt(C1.Framework.Drawing.Gdi.Coordinate,C1.Framework.Drawing.Gdi.Coordinate)">
      <summary>
              Applies the reflecting by speical line to this Matrix object.
            </summary>
      <param name="startPoint">
              A <see cref="T:C1.Framework.Drawing.Gdi.Coordinate" /> object indicate the start point of the line.
            </param>
      <param name="endPoint">
              A <see cref="T:C1.Framework.Drawing.Gdi.Coordinate" /> object indicate the end point of the line.
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.TransformMatrix.ScaleAt(C1.Framework.Drawing.Gdi.Coordinate,System.Single,System.Single)">
      <summary>
              Applies the specified scale vector to this Matrix object by prepending the scale vector at speical point.
            </summary>
      <param name="point">
              A <see cref="T:C1.Framework.Drawing.Gdi.Coordinate" /> class that represents the center of the scale. 
            </param>
      <param name="scaleX">
              The value by which to scale this Matrix in the x-axis direction.
            </param>
      <param name="scaleY">
              The value by which to scale this Matrix in the y-axis direction.
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.TransformMatrix.RotateAt(C1.Framework.Drawing.Gdi.Coordinate,System.Single,C1.Framework.Drawing.Gdi.TransformOrder)">
      <summary>
              Applies a clockwise rotation to this Matrix object around the point 
              specified in the point parameter, and by prepending the rotation
            </summary>
      <param name="point">
              A <see cref="T:C1.Framework.Drawing.Gdi.Coordinate" /> class that represents the center of the rotation. 
            </param>
      <param name="angle">
              The angle (extent) of the rotation. 
            </param>
      <param name="order">
              A <see cref="T:C1.Framework.Drawing.Gdi.TransformOrder" /> enumeration that specifies the order (append or prepend) in 
              which the rotation is applied to this Matrix object. 
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.TransformMatrix.ReflectAt(C1.Framework.Drawing.Gdi.Coordinate,C1.Framework.Drawing.Gdi.Coordinate,C1.Framework.Drawing.Gdi.TransformOrder)">
      <summary>
              Applies the reflecting by speical line to this Matrix object.
            </summary>
      <param name="startPoint">
              A <see cref="T:C1.Framework.Drawing.Gdi.Coordinate" /> object indicate the start point of the line.
            </param>
      <param name="endPoint">
              A <see cref="T:C1.Framework.Drawing.Gdi.Coordinate" /> object indicate the end point of the line.
            </param>
      <param name="order">
              A <see cref="T:C1.Framework.Drawing.Gdi.TransformOrder" /> enumeration that specifies the order (append or prepend) in 
              which the reflection is applied to this Matrix object. 
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.TransformMatrix.ScaleAt(C1.Framework.Drawing.Gdi.Coordinate,System.Single,System.Single,C1.Framework.Drawing.Gdi.TransformOrder)">
      <summary>
              Applies the specified scale vector to this Matrix object by prepending the scale vector at speical point.
            </summary>
      <param name="point">
              A <see cref="T:C1.Framework.Drawing.Gdi.Coordinate" /> class that represents the center of the scale. 
            </param>
      <param name="scaleX">
              The value by which to scale this Matrix in the x-axis direction.
            </param>
      <param name="scaleY">
              The value by which to scale this Matrix in the y-axis direction.
            </param>
      <param name="order">
              A <see cref="T:C1.Framework.Drawing.Gdi.TransformOrder" /> enumeration that specifies the order (append or prepend) in 
              which the scaling is applied to this Matrix object. 
            </param>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.TransformMatrix.op_Explicit(C1.Framework.Drawing.Gdi.TransformMatrix)~System.Drawing.Drawing2D.Matrix">
      <summary>
              Explicit convert a TransformMatrix object to a System.Drawing.Drawing2D.Matrix object.
            </summary>
      <param name="value">
              A <see cref="T:C1.Framework.Drawing.Gdi.TransformMatrix" /> value that will be convert to a <see cref="T:System.Drawing.Drawing2D.Matrix" /> object.
            </param>
      <returns>
              A <see cref="T:System.Drawing.Drawing2D.Matrix" /> object indicates the converted object.
            </returns>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.TransformMatrix.op_Explicit(System.Drawing.Drawing2D.Matrix)~C1.Framework.Drawing.Gdi.TransformMatrix">
      <summary>
              Explicit convert a System.Drawing.Drawing2D.Matrix object to a TransformMatrix object.
            </summary>
      <param name="value">
              A <see cref="T:System.Drawing.Drawing2D.Matrix" /> object that will be convert to a <see cref="T:C1.Framework.Drawing.Gdi.TransformMatrix" /> object.
            </param>
      <returns>
              A <see cref="T:System.Drawing.Drawing2D.Matrix" /> value indicates the converted object.
            </returns>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.TransformMatrix.Unit">
      <summary>
              Gets the unit matrix.
            </summary>
    </member>
    <member name="T:C1.Framework.Drawing.Gdi.Coordinate">
      <summary>
              Defines a class the represents the coordinate concept in mathematics.
            </summary>
      <value>
              Coordinate: Any of a set of two or more numbers used to determine the position 
              of a point, line, curve, or plane in a space of a given dimension with respect 
              to a system of lines or other fixed reference.
            </value>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Coordinate.#ctor(System.Single,System.Single)">
      <summary>
              Indicates a new instance of the <see cref="T:C1.Framework.Drawing.Gdi.Coordinate" /> class.
            </summary>
      <param name="x">
              A <b>float</b> value indicate the value of x-coordinate
            </param>
      <param name="y">
              A <b>float</b> value indicate the value of x-coordinate
            </param>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Coordinate.X">
      <summary>
              Gets or sets the value of x-coordinate.
            </summary>
      <value>
              A <b>float</b> value indicates the x-coordinate.
            </value>
    </member>
    <member name="P:C1.Framework.Drawing.Gdi.Coordinate.Y">
      <summary>
              Gets or sets the value of y-coordinate.
            </summary>
      <value>
              A <b>float</b> value indicates the y-coordinate.
            </value>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Coordinate.op_Implicit(System.Drawing.Point)~C1.Framework.Drawing.Gdi.Coordinate">
      <summary>
              Implicit convert a Point value to a Coordinate object.
            </summary>
      <param name="value">
              A <see cref="T:System.Drawing.Point" /> value that will be convert to a <see cref="T:C1.Framework.Drawing.Gdi.Coordinate" /> object.
            </param>
      <returns>
              A <see cref="T:C1.Framework.Drawing.Gdi.Coordinate" /> object indicates the converted object.
            </returns>
      <remarks>
              The reason of providing implict converting is that Point and Coordinate is same conception in drawing.
            </remarks>
    </member>
    <member name="M:C1.Framework.Drawing.Gdi.Coordinate.op_Implicit(C1.Framework.Drawing.Gdi.Coordinate)~System.Drawing.Point">
      <summary>
              Implicit convert a Coordinate value to a Point object.
            </summary>
      <param name="value">
              A <see cref="T:C1.Framework.Drawing.Gdi.Coordinate" /> object that will be convert to a <see cref="T:C1.Framework.Drawing.Gdi.Coordinate" /> object.
            </param>
      <returns>
              A <see cref="T:System.Drawing.Point" /> value indicates the converted object.
            </returns>
    </member>
    <member name="T:C1.Framework.Forms.SubclassNativeWindow">
      <summary>
              Represents a subclass window wrapper class.
            </summary>
    </member>
    <member name="M:C1.Framework.Forms.SubclassNativeWindow.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:C1.Framework.Forms.SubclassNativeWindow" /> class.
            </summary>
    </member>
    <member name="M:C1.Framework.Forms.SubclassNativeWindow.AssignHandle(System.IntPtr)">
      <summary>
              Attaches handle to target window.
            </summary>
      <param name="handle">
              The handle of target window.
            </param>
    </member>
    <member name="M:C1.Framework.Forms.SubclassNativeWindow.ReleaseHandle">
      <summary>
              Releases the handle.
            </summary>
    </member>
    <member name="M:C1.Framework.Forms.SubclassNativeWindow.OnHandleChange">
      <summary>
              Notifies that the handle is changed.
            </summary>
    </member>
    <member name="M:C1.Framework.Forms.SubclassNativeWindow.OnThreadException(System.Exception)">
      <summary>
              Notifies inner exception occurs when processing window message.
            </summary>
      <param name="e">
              A <see cref="T:System.Exception" /> object indicates the inner exception.
            </param>
    </member>
    <member name="M:C1.Framework.Forms.SubclassNativeWindow.WndProc(System.Windows.Forms.Message@)">
      <summary>
              Invokes the window procedure associated with this window.
            </summary>
      <param name="m">
              A <see cref="T:System.Windows.Forms.Message" />. that is associated with the current Windows message.
            </param>
    </member>
    <member name="M:C1.Framework.Forms.SubclassNativeWindow.DefWndProc(System.Windows.Forms.Message@)">
      <summary>
              Invokes the default window procedure associated with this window.
            </summary>
      <param name="m">
              A <see cref="T:System.Windows.Forms.Message" />. that is associated with the current Windows message.
            </param>
    </member>
    <member name="P:C1.Framework.Forms.SubclassNativeWindow.Handle">
      <summary>
              Gets the handle to the window represented by the <see cref="T:C1.Framework.Forms.SubclassNativeWindow" />.
            </summary>
      <value>
              A handle to the window represented by the <see cref="T:C1.Framework.Forms.SubclassNativeWindow" />.
            </value>
    </member>
  </members>
</doc>